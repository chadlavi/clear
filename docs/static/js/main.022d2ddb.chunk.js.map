{"version":3,"sources":["serviceWorker.ts","ComponentPage.tsx","component-lib/index.js","AccessibleHashlink.tsx","Pages/ButtonPage.tsx","Pages/ColorsPage.tsx","Pages/GettingStartedPage.tsx","Pages/HomePage.tsx","Pages/InputPage.tsx","Pages/LayoutPage.tsx","Pages/TablePage.tsx","Routes.tsx","Pages/GlobalStylesPage.tsx","Pages/LinkPage.tsx","Pages/TextPage.tsx","Pages/NotificationPage.tsx","Pages/HelpersPage.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","ComponentPage","content","title","document","setTitle","Content","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__makeTemplateObject","cooked","raw","defineProperty","value","templateObject_1","templateObject_1$1","templateObject_1$2","templateObject_1$3","templateObject_2","templateObject_3","templateObject_4","templateObject_5","templateObject_1$4","templateObject_1$5","templateObject_1$6","templateObject_1$7","templateObject_1$8","templateObject_1$9","templateObject_1$a","templateObject_1$b","templateObject_1$c","templateObject_2$1","templateObject_3$1","templateObject_4$1","templateObject_1$d","templateObject_1$e","templateObject_1$f","templateObject_2$2","templateObject_3$2","templateObject_4$2","templateObject_5$1","templateObject_6","templateObject_1$g","templateObject_2$3","templateObject_1$h","templateObject_1$i","templateObject_1$j","templateObject_1$k","templateObject_1$l","templateObject_1$m","templateObject_1$n","colors","light","background","blue","border","error","green","link","textColor","violet","zebra","dark","complimentaryColors","focusStyle","errorFocusStyle","numbers","breakpoint","xs","sm","md","lg","fontSize","default","unit","label","width","main","Math","pow","xl","CSSVariables","createGlobalStyle","keys","map","c","k","GlobalStyles","useMediaQuery","query","_a","useState","matchMedia","matches","result","setResult","callback","useCallback","matchMediaResult","useEffect","addListener","removeListener","useDarkMode","useResponsiveColor","color","theme","Button","styled","primary","props","createElement","disabled","Wrapper","div","InputWrapper","StyledInput","type","checked","Icon","version","xmlns","x","y","StyledLabel","Checkbox","other","viewBox","points","htmlFor","id","Code","CodeBlock","GridItem","size","Grid","spacing","Header","forwardOnFocus","func","currentTarget","setTimeout","select","Input","onClick","onFocus","Label","required","Fragment","children","Link","isExternal","href","target","rel","NotificationBase","buttonProps","dismissible","mini","success","timeOut","transient","NotificationWrapper","StyledNotification","NotificationContent","DismissButton","Notification","_b","open","setOpen","transientOnClose","className","undefined","Page","Paragraph","margins","Wrapper$1","InputWrapper$1","StyledInput$1","SVGContainer","Icon$1","cx","cy","r","stroke","fill","strokeWidth","StyledLabel$1","Radio","role","tabIndex","Container$2","contentMinHeight","contentMinWidth","direction","maxHeight","maxWidth","ScrollContainer","StyledSelect","SelectOptions","options","o","key","Select","multiple","defaultValue","hidden","handleMutliSelectOnChange","setter","updatedOptions","Array","from","filter","option","selected","jumpTo","el","getElementById","scrollIntoView","focus","SkipLinkButton","SkipLink","Table","TableCell","TableHead","TableBody","TableRow","GenerateTable","data","headers","h","as","charAt","toUpperCase","slice","JSON","stringify","jumpToID","path","hashes","split","querySelector","parentElement","a","setAttribute","insertBefore","addEventListener","removeChild","scrollTo","top","AccessibleHashlink","HashLink","to","hash","copy","preventDefault","alert","colorDescription","StyledTile","ColorTile","ErrorButton","BigErrorButton","ExtendedButton","ResponsiveBigErrorButton","FocusableResponsiveBigErrorButton","HomePage","FancyPinkParagraph","FancyPinkInput","selectOptions","ExampleBorder","padded","tableHeaders","tableData","name","email","occupation","headerRoutes","exact","route","component","React","showNotification","setShowNotification","notificationCopy","setNotificationCopy","notificationIndex","setNotificationIndex","routes","gridSpacing","setGridSpacing","gridItem1","setGridItem1","gridItem2","setGridItem2","gridItem3","setGridItem3","gridItemOnChange","newValue","parseInt","inputMode","min","onChange","style","borderRadius","padding","position","bottom","fontWeight","right","height","numericValue","setNumericValue","textValue","setTextValue","errorValue","setErrorValue","disabledValue","requiredValue","setRequiredValue","customValue","setCustomValue","textAreaValue","setTextAreaValue","singleSelectValue","setSingleSelectValue","errorSingleSelectValue","setErrorSingleSelectValue","requiredSingleSelectValue","setRequiredSingleSelectValue","multiSelectValue","setMultiSelectValue","errorMultiSelectValue","setErrorMultiSelectValue","requiredMultiSelectValue","setRequiredMultiSelectValue","setChecked","errorChecked","setErrorChecked","radioValue","setRadioValue","rows","standard","setStandard","setPrimary","RouterLink","toString","setSuccess","setError","setTransient","transientUndismissible","setTransientUndismissible","setMini","setAllFalse","Routes","scrollinate","anchor","scrollToHash","replace","substr","basename","aria-label","NavLink","sort","b","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.022d2ddb.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as React from 'react'\n\nexport const setTitle = (title?: string): void => {\n  document.title = `Clear${title? ` | ${title}` : ''}`\n}\n\nexport const ComponentPage: React.FC<{\n  content: React.FC<{}>\n  title?: string\n}> = ({content, title}) => {\n  setTitle(title)\n  const Content = content\n  return <Content/>\n}\n","/* eslint-disable */\nimport { useState, useCallback, useEffect, createElement, Fragment } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n}\n\nvar colors = {\r\n    light: {\r\n        background: 'white',\r\n        blue: '#005cb8',\r\n        border: '#ddd',\r\n        error: '#cf0303',\r\n        green: '#067940',\r\n        link: '#55e',\r\n        textColor: '#111',\r\n        violet: '#bc1abc',\r\n        zebra: '#f8f8f8',\r\n    },\r\n    dark: {\r\n        background: '#0a0a0a',\r\n        blue: 'dodgerblue',\r\n        border: '#555',\r\n        error: '#f99',\r\n        green: '#40bf80',\r\n        link: '#9e9efa',\r\n        textColor: 'white',\r\n        violet: 'violet',\r\n        zebra: '#1a1a1a',\r\n    }\r\n};\r\nvar complimentaryColors = {\r\n    light: {\r\n        background: colors.light.textColor,\r\n        blue: colors.light.background,\r\n        border: colors.light.textColor,\r\n        error: colors.light.background,\r\n        green: colors.light.background,\r\n        link: colors.light.background,\r\n        textColor: colors.light.background,\r\n        violet: colors.light.background,\r\n        zebra: colors.light.textColor,\r\n    },\r\n    dark: {\r\n        background: colors.dark.textColor,\r\n        blue: colors.dark.background,\r\n        border: colors.dark.textColor,\r\n        error: colors.dark.background,\r\n        green: colors.dark.background,\r\n        link: colors.dark.background,\r\n        textColor: colors.dark.background,\r\n        violet: colors.dark.background,\r\n        zebra: colors.dark.textColor,\r\n    }\r\n};\n\nvar focusStyle = \"\\n:focus {\\n  outline: none;\\n  box-shadow: 0 0 0 calc(var(--clear-unit) / 4) var(--clear-background),\\n    0 0 0 calc(var(--clear-unit) / 2) var(--clear-link);\\n}\\n::-moz-focus-inner {\\n  border:0;\\n}\\n\";\r\nvar errorFocusStyle = \"\\n:focus {\\n  outline: none;\\n  box-shadow: 0 0 0 calc(var(--clear-unit) / 4) var(--clear-background),\\n    0 0 0 calc(var(--clear-unit) / 2) var(--clear-error);\\n}\\n::-moz-focus-inner {\\n  border:0;\\n}\\n\";\n\nvar unit = 8;\r\nvar width = {\r\n    main: 95 * unit,\r\n    lg: Math.pow(unit, 3) * 2,\r\n    xl: Math.pow(unit, 3) * 4,\r\n};\r\nvar numbers = {\r\n    breakpoint: {\r\n        xs: 600,\r\n        sm: 960,\r\n        md: 1280,\r\n        lg: 1920,\r\n    },\r\n    fontSize: {\r\n        default: unit * 2,\r\n        label: unit * 1.75,\r\n    },\r\n    width: width,\r\n    unit: unit,\r\n};\n\n/**\r\n * Creates a set of css variables necessary for global colors. This component\r\n * should be included once at the top level of your application.\r\n *\r\n * https://chadlavi.github.io/clear/#/global-styles#cssvariables\r\n */\r\nvar CSSVariables = createGlobalStyle(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  :root {\\n    \", \"\\n\\n    --clear-unit: \", \"px;\\n    --clear-main-width: \", \"px;\\n    --clear-font-size-default: \", \"px;\\n    --clear-font-size-label: \", \"px;\\n\\n    \", \"\\n\\n    --clear-font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, Ubuntu,\\n      roboto, noto, segoe ui, arial, sans-serif;\\n    --clear-monospace-font-family: Menlo, Consolas, Monaco, Liberation Mono, Lucida Console, monospace;\\n  }\\n\\n  @media (prefers-color-scheme: dark) {\\n    :root {\\n      \", \"\\n    }\\n  }\\n  \"], [\"\\n  :root {\\n    \", \"\\n\\n    --clear-unit: \", \"px;\\n    --clear-main-width: \", \"px;\\n    --clear-font-size-default: \", \"px;\\n    --clear-font-size-label: \", \"px;\\n\\n    \",\r\n    \"\\n\\n    --clear-font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, Ubuntu,\\n      roboto, noto, segoe ui, arial, sans-serif;\\n    --clear-monospace-font-family: Menlo, Consolas, Monaco, Liberation Mono, Lucida Console, monospace;\\n  }\\n\\n  @media (prefers-color-scheme: dark) {\\n    :root {\\n      \", \"\\n    }\\n  }\\n  \"])), Object.keys(colors.light).map(function (c) { return \"--clear-\" + c + \": \" + colors.light[c] + \";\"; }), numbers.unit, numbers.width.main, numbers.fontSize.default, numbers.fontSize.label, Object.keys(numbers.breakpoint).map(function (k) { return \"--clear-breakpoint-\" + k + \": \" + numbers.breakpoint[k] + \"px;\"; }), Object.keys(colors.dark).map(function (c) { return \"--clear-\" + c + \": \" + colors.dark[c] + \";\"; }));\r\nvar templateObject_1;\n\n/**\r\n * Applies styles to the `<body>` of your app.\r\n *\r\n * https://chadlavi.github.io/clear/#/global-styles#globalstyles\r\n */\r\nvar GlobalStyles = createGlobalStyle(templateObject_1$1 || (templateObject_1$1 = __makeTemplateObject([\"\\n  body {\\n    margin: 0;\\n    background-color: var(--clear-background);\\n    color: var(--clear-textColor);\\n    font-family: var(--clear-font-family);\\n    font-size: var(--clear-font-size-default);\\n    text-rendering: geometricPrecision;\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n    -webkit-text-size-adjust: 100%;\\n  }\\n\"], [\"\\n  body {\\n    margin: 0;\\n    background-color: var(--clear-background);\\n    color: var(--clear-textColor);\\n    font-family: var(--clear-font-family);\\n    font-size: var(--clear-font-size-default);\\n    text-rendering: geometricPrecision;\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n    -webkit-text-size-adjust: 100%;\\n  }\\n\"])));\r\nvar templateObject_1$1;\n\n/**\r\n * This basic React hook returns a boolean value that reflects whether or not the given query matches.\r\n *\r\n * https://chadlavi.github.io/clear/#/helpers#usemediaquery\r\n */\r\nvar useMediaQuery = function (query) {\r\n    var _a = useState(matchMedia(query).matches), result = _a[0], setResult = _a[1];\r\n    var callback = useCallback(function (matchMediaResult) { return setResult(matchMediaResult.matches); }, [setResult]);\r\n    useEffect(function () {\r\n        var matchMediaResult = matchMedia(query);\r\n        callback(matchMediaResult);\r\n        matchMediaResult.addListener(callback);\r\n        return function () { return matchMediaResult.removeListener(callback); };\r\n    }, [callback]);\r\n    return result;\r\n};\r\n/**\r\n * Returns a boolean value that reflects whether or not the user's viewport is smaller than the given breakpoint.\r\n *\r\n * https://chadlavi.github.io/clear/#/helpers#usebreakpoint\r\n */\r\nvar useBreakpoint = function (breakpoint) { return useMediaQuery(\"(max-width: \" + numbers.breakpoint[breakpoint] + \"px)\"); };\r\n/**\r\n * Returns a boolean value that reflects whether or not the user's browser is currently in dark mode.\r\n *\r\n * https://chadlavi.github.io/clear/#/helpers#usedarkmode\r\n */\r\nvar useDarkMode = function () { return useMediaQuery('(prefers-color-scheme: dark)'); };\r\n/**\r\n * Returns a boolean value that reflects whether or not the user's browser is currently in dark mode.\r\n *\r\n * https://chadlavi.github.io/clear/#/helpers#useresponsivecolor\r\n */\r\nvar useResponsiveColor = function (color) {\r\n    var theme = useDarkMode() ? 'dark' : 'light';\r\n    return colors[theme][color];\r\n};\n\nvar ButtonBase = function (_a) {\r\n    var _ = _a.primary, props = __rest(_a, [\"primary\"]);\r\n    return createElement(\"button\", __assign({}, props));\r\n};\r\n/**\r\n * A simple styled `<button>`\r\n *\r\n * https://chadlavi.github.io/clear/#/button\r\n */\r\nvar Button = styled(ButtonBase)(templateObject_1$2 || (templateObject_1$2 = __makeTemplateObject([\"\\n  background: var(--clear-border);\\n  border-radius: var(--clear-unit);\\n  border: none;\\n  color: var(--clear-textColor);\\n  \", \";\\n  cursor: pointer;\\n  \", \";\\n  font-size: var(--clear-font-size-label);\\n  margin: 0;\\n  padding: var(--clear-unit) calc(var(--clear-unit) * 2);\\n  @media (prefers-color-scheme: dark) {\\n    font-weight: 500;\\n  }\\n  \", \"\\n\"], [\"\\n  background: var(--clear-border);\\n  border-radius: var(--clear-unit);\\n  border: none;\\n  color: var(--clear-textColor);\\n  \",\r\n    \";\\n  cursor: pointer;\\n  \",\r\n    \";\\n  font-size: var(--clear-font-size-label);\\n  margin: 0;\\n  padding: var(--clear-unit) calc(var(--clear-unit) * 2);\\n  @media (prefers-color-scheme: dark) {\\n    font-weight: 500;\\n  }\\n  \", \"\\n\"])), function (p) { return p.primary ? \"\\n    background: var(--clear-link);\\n    color: var(--clear-background);\\n  \" : ''; }, function (p) { return p.disabled ? \"\\n    cursor: not-allowed;\\n    opacity: 0.5;\\n  \" : ''; }, focusStyle);\r\nvar templateObject_1$2;\n\nvar Wrapper = styled.div(templateObject_1$3 || (templateObject_1$3 = __makeTemplateObject([\"\\n  align-items: center;\\n  display: flex;\\n  margin: var(--clear-unit);\\n\"], [\"\\n  align-items: center;\\n  display: flex;\\n  margin: var(--clear-unit);\\n\"])));\r\nvar InputWrapper = styled.div(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  display: block;\\n  height: var(--clear-font-size-label);\\n  width: var(--clear-font-size-label);\\n  position: relative;\\n\"], [\"\\n  display: block;\\n  height: var(--clear-font-size-label);\\n  width: var(--clear-font-size-label);\\n  position: relative;\\n\"])));\r\nvar InputBase = function (_a) {\r\n    var _error = _a.error, _label = _a.label, props = __rest(_a, [\"error\", \"label\"]);\r\n    return (createElement(\"input\", __assign({}, props, { type: 'checkbox' })));\r\n};\r\nvar StyledInput = styled(InputBase)(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n  -webkit-appearance: none;\\n  background: var(--clear-\", \");\\n  border-radius: calc(var(--clear-unit) / 4);\\n  border: 1px solid var(--clear-\", \");\\n  display: block;\\n  height: var(--clear-font-size-label);\\n  margin: 0;\\n  width: var(--clear-font-size-label);\\n  opacity: \", \";\\n  cursor: \", \";\\n  \", \"\\n  \", \"\\n\"], [\"\\n  -webkit-appearance: none;\\n  background: var(--clear-\", \");\\n  border-radius: calc(var(--clear-unit) / 4);\\n  border: 1px solid var(--clear-\", \");\\n  display: block;\\n  height: var(--clear-font-size-label);\\n  margin: 0;\\n  width: var(--clear-font-size-label);\\n  opacity: \", \";\\n  cursor: \", \";\\n  \", \"\\n  \", \"\\n\"])), function (p) { return p.checked ? (p.error ? 'error' : 'link') : 'background'; }, function (p) { return p.error ? 'error' : (p.checked ? 'link' : 'textColor'); }, function (p) { return p.disabled ? '0.5' : '1'; }, function (p) { return p.disabled ? 'not-allowed' : 'pointer'; }, focusStyle, function (p) { return p.error ? errorFocusStyle : ''; });\r\nvar SVGBase = function (_a) {\r\n    var _checked = _a.checked, props = __rest(_a, [\"checked\"]);\r\n    return (createElement(\"svg\", __assign({ version: '1.1', xmlns: 'http://www.w3.org/2000/svg', x: '0', y: '0' }, props)));\r\n};\r\nvar Icon = styled(SVGBase)(templateObject_4 || (templateObject_4 = __makeTemplateObject([\"\\n  fill: none;\\n  stroke: var(--clear-background);\\n  stroke-width: calc(var(--clear-unit) / 4 + 1px);\\n  pointer-events: none;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  display: \", \"\\n\"], [\"\\n  fill: none;\\n  stroke: var(--clear-background);\\n  stroke-width: calc(var(--clear-unit) / 4 + 1px);\\n  pointer-events: none;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  display: \", \"\\n\"])), function (p) { return p.checked ? 'block' : 'none'; });\r\nvar LabelBase = function (_a) {\r\n    var _disabled = _a.disabled, _error = _a.error, props = __rest(_a, [\"disabled\", \"error\"]);\r\n    return (createElement(\"label\", __assign({}, props)));\r\n};\r\nvar StyledLabel = styled(LabelBase)(templateObject_5 || (templateObject_5 = __makeTemplateObject([\"\\n  \", \";\\n  opacity: \", \";\\n  cursor: \", \";\\n  margin-left: var(--clear-unit);\\n\"], [\"\\n  \", \";\\n  opacity: \", \";\\n  cursor: \", \";\\n  margin-left: var(--clear-unit);\\n\"\r\n    /**\r\n     * A wrapper around HTML `<input type='checkbox'>`.\r\n     *\r\n     * https://chadlavi.github.io/clear/#/input#checkbox\r\n     */\r\n])), function (p) { return p.error ? 'color: var(--clear-error)' : ''; }, function (p) { return p.disabled ? '0.5' : '1'; }, function (p) { return p.disabled ? 'not-allowed' : 'pointer'; });\r\n/**\r\n * A wrapper around HTML `<input type='checkbox'>`.\r\n *\r\n * https://chadlavi.github.io/clear/#/input#checkbox\r\n */\r\nvar Checkbox = function (props) {\r\n    var error = props.error, label = props.label, other = __rest(props, [\"error\", \"label\"]);\r\n    return (createElement(Wrapper, null,\r\n        createElement(InputWrapper, null,\r\n            createElement(StyledInput, __assign({ error: error }, other)),\r\n            createElement(Icon, { checked: other.checked, viewBox: '0 0 24 24' },\r\n                createElement(\"polyline\", { points: '20 6 9 17 4 12' }))),\r\n        label &&\r\n            createElement(StyledLabel, { disabled: other.disabled, error: error, htmlFor: other.id }, label)));\r\n};\r\nvar templateObject_1$3, templateObject_2, templateObject_3, templateObject_4, templateObject_5;\n\n/**\r\n * A simple styled `<code>`\r\n *\r\n * https://chadlavi.github.io/clear/#/text#code\r\n */\r\nvar Code = styled('code')(templateObject_1$4 || (templateObject_1$4 = __makeTemplateObject([\"\\n  font-family: var(--clear-monospace-font-family);\\n  font-size: 0.9em;\\n  display: inline;\\n  margin: 0;\\n  background: var(--clear-zebra);\\n  padding: calc(1em / 8) calc(1em / 8 + 1px);\\n  border-radius: calc(1em / 4);\\n\"], [\"\\n  font-family: var(--clear-monospace-font-family);\\n  font-size: 0.9em;\\n  display: inline;\\n  margin: 0;\\n  background: var(--clear-zebra);\\n  padding: calc(1em / 8) calc(1em / 8 + 1px);\\n  border-radius: calc(1em / 4);\\n\"])));\r\nvar templateObject_1$4;\n\n/**\r\n * A simple styled `<pre>` for formatting code blocks\r\n *\r\n * https://chadlavi.github.io/clear/#/text#codeblock\r\n */\r\nvar CodeBlock = styled('pre')(templateObject_1$5 || (templateObject_1$5 = __makeTemplateObject([\"\\n  font-family: var(--clear-monospace-font-family);\\n  font-size: 0.9em;\\n  line-height: 1.5;\\n  display: block;\\n  margin-block-end: calc(var(--clear-unit) * 2);\\n  margin-block-start: calc(var(--clear-unit) * 2);\\n  background: var(--clear-zebra);\\n  padding: calc(var(--clear-unit) * 2);\\n  border-radius: var(--clear-unit);\\n  overflow-x: auto;\\n\"], [\"\\n  font-family: var(--clear-monospace-font-family);\\n  font-size: 0.9em;\\n  line-height: 1.5;\\n  display: block;\\n  margin-block-end: calc(var(--clear-unit) * 2);\\n  margin-block-start: calc(var(--clear-unit) * 2);\\n  background: var(--clear-zebra);\\n  padding: calc(var(--clear-unit) * 2);\\n  border-radius: var(--clear-unit);\\n  overflow-x: auto;\\n\"])));\r\nvar templateObject_1$5;\n\nvar Container = function (_a) {\r\n    var _size = _a.size, props = __rest(_a, [\"size\"]);\r\n    return createElement(\"div\", __assign({}, props));\r\n};\r\n/**\r\n * A simple 12-column grid item. Must be used as a direct child of `<Grid>`.\r\n *\r\n * https://chadlavi.github.io/clear/#/layout#griditem\r\n */\r\nvar GridItem = styled(Container)(templateObject_1$6 || (templateObject_1$6 = __makeTemplateObject([\"\\n  flex-basis: calc(100% * \", \" / 12);\\n  width: calc(100% * \", \" / 12);\\n  max-width: calc(100% * \", \" / 12);\\n  @media only screen and (max-width: \", \"px) {\\n    flex-basis: 100%;\\n    width: 100%;\\n    max-width: 100%;\\n  }\\n\"], [\"\\n  flex-basis: calc(100% * \", \" / 12);\\n  width: calc(100% * \", \" / 12);\\n  max-width: calc(100% * \", \" / 12);\\n  @media only screen and (max-width: \", \"px) {\\n    flex-basis: 100%;\\n    width: 100%;\\n    max-width: 100%;\\n  }\\n\"])), function (p) { return p.size || 12; }, function (p) { return p.size || 12; }, function (p) { return p.size || 12; }, numbers.breakpoint.xs);\r\nvar templateObject_1$6;\n\nvar Container$1 = function (_a) {\r\n    var _spacing = _a.spacing, props = __rest(_a, [\"spacing\"]);\r\n    return createElement(\"div\", __assign({}, props));\r\n};\r\n/**\r\n * A simple 12-column grid container. Must be used in conjunciton with\r\n * `<GridItem>`.\r\n *\r\n * https://chadlavi.github.io/clear/#/layout#grid\r\n */\r\nvar Grid = styled(Container$1)(templateObject_1$7 || (templateObject_1$7 = __makeTemplateObject([\"\\n  display: flex;\\n  flex-wrap: wrap;\\n  padding: \", \"px;\\n  & > \", \" {\\n    padding: \", \"px;\\n  }\\n\"], [\"\\n  display: flex;\\n  flex-wrap: wrap;\\n  padding: \", \"px;\\n  & > \", \" {\\n    padding: \", \"px;\\n  }\\n\"])), function (p) { return p.spacing ? p.spacing / 2 : 0; }, GridItem, function (p) { return p.spacing ? p.spacing / 2 : 0; });\r\nvar templateObject_1$7;\n\n/**\r\n * A simple styled `<h1>`\r\n *\r\n * Can also be used to create any header (`h1` through `h6`):\r\n *\r\n * ```tsx\r\n * <Header as='h2'>\r\n *  This will render in the DOM as an `<h2>`\r\n * </Header>\r\n * ```\r\n *\r\n * https://chadlavi.github.io/clear/#/text#header\r\n */\r\nvar Header = styled('h1')(templateObject_1$8 || (templateObject_1$8 = __makeTemplateObject([\"\"], [\"\"])));\r\nvar templateObject_1$8;\n\n/**\r\n * Calls props.onClick, but also selects the contents of the Input on click\r\n * @param func the onClick passed to `<Input>`\r\n */\r\nvar forwardOnClick = function (func) { return function (e) {\r\n    var t = e.currentTarget;\r\n    if (func)\r\n        func(e);\r\n    if (t.value)\r\n        setTimeout(function () {\r\n            t.select();\r\n        }, 1);\r\n}; };\r\n/**\r\n * Calls props.onFocus, but also selects the contents of the Input on focus\r\n * @param func the onFocus passed to `<Input>`\r\n */\r\nvar forwardOnFocus = function (func) { return function (e) {\r\n    var t = e.currentTarget;\r\n    if (func)\r\n        func(e);\r\n    if (t.value)\r\n        setTimeout(function () {\r\n            t.select();\r\n        }, 1);\r\n}; };\r\nvar InputBase$1 = function (_a) {\r\n    var _error = _a.error, props = __rest(_a, [\"error\"]);\r\n    return createElement(\"input\", __assign({}, props, { onClick: forwardOnClick(props.onClick), onFocus: forwardOnFocus(props.onFocus), value: props.value || (props.type === 'number' ? ' ' : '') }));\r\n};\r\n/**\r\n * A simple styled Input\r\n *\r\n * https://chadlavi.github.io/clear/#/input#input\r\n */\r\nvar Input = styled(InputBase$1)(templateObject_1$9 || (templateObject_1$9 = __makeTemplateObject([\"\\n  background-color: var(--clear-background);\\n  color: var(--clear-\", \");\\n  border: 1px solid var(--clear-\", \");\\n  border-radius: var(--clear-unit);\\n  padding: calc(var(--clear-unit) * 1.5);\\n  font-size: var(--clear-font-size-default);\\n  margin: calc(var(--clear-unit) / 2) 0;\\n  width: 100%;\\n  min-width: 100%;\\n  max-width: 100%;\\n  -webkit-appearance: none;\\n  \", \"\\n  \", \"\\n  \", \"\\n\"], [\"\\n  background-color: var(--clear-background);\\n  color: var(--clear-\", \");\\n  border: 1px solid var(--clear-\", \");\\n  border-radius: var(--clear-unit);\\n  padding: calc(var(--clear-unit) * 1.5);\\n  font-size: var(--clear-font-size-default);\\n  margin: calc(var(--clear-unit) / 2) 0;\\n  width: 100%;\\n  min-width: 100%;\\n  max-width: 100%;\\n  -webkit-appearance: none;\\n  \", \"\\n  \", \"\\n  \", \"\\n\"])), function (p) { return p.error ? 'error' : 'textColor'; }, function (p) { return p.error ? 'error' : 'border'; }, focusStyle, function (p) { return p.error ? errorFocusStyle : ''; }, function (p) { return p.disabled ? 'cursor: not-allowed;' : ''; });\r\nvar templateObject_1$9;\n\nvar LabelBase$1 = function (_a) {\r\n    var _disabled = _a.disabled, _error = _a.error, required = _a.required, props = __rest(_a, [\"disabled\", \"error\", \"required\"]);\r\n    return (createElement(\"label\", __assign({}, props), required ? createElement(Fragment, null,\r\n        props.children,\r\n        ' (Required)') : props.children));\r\n};\r\n/**\r\n * A simple styled `<label>`\r\n *\r\n * https://chadlavi.github.io/clear/#/text#label\r\n */\r\nvar Label = styled(LabelBase$1)(templateObject_1$a || (templateObject_1$a = __makeTemplateObject([\"\\n  color: \", \";\\n  \", \";\\n  width: 100%;\\n  font-size: var(--clear-font-size-label);\\n\"], [\"\\n  color: \", \";\\n  \",\r\n    \";\\n  width: 100%;\\n  font-size: var(--clear-font-size-label);\\n\"])), function (p) { return p.error ? 'var(--clear-error)' : 'inherit'; }, function (p) { return p.disabled ? \"\\n    opacity: 0.5;\\n  \" : ''; });\r\nvar templateObject_1$a;\n\nvar Anchor = function (props) {\r\n    var _a;\r\n    var isExternal = Boolean((_a = props.href) === null || _a === void 0 ? void 0 : _a.match(/^http/));\r\n    return (createElement(\"a\", __assign({}, props, { target: isExternal ? '_blank' : props.target, rel: isExternal ? 'noopener noreferrer' : props.rel, title: props.title || \"Open \\\"\" + props.href + \"\\\"\" + (isExternal ? ' in a new Tab' : '') })));\r\n};\r\n/**\r\n * A simple styled `<a>`\r\n *\r\n * https://chadlavi.github.io/clear/#/link\r\n */\r\nvar Link = styled(Anchor)(templateObject_1$b || (templateObject_1$b = __makeTemplateObject([\"\\n  color: var(--clear-link);\\n  \", \"\\n  &[target='_blank']::after {\\n    content: ' [\\u2197]';\\n  }\\n\"], [\"\\n  color: var(--clear-link);\\n  \", \"\\n  &[target='_blank']::after {\\n    content: ' [\\\\u2197]';\\n  }\\n\"])), focusStyle);\r\nvar templateObject_1$b;\n\nvar NotificationBase = function (_a) {\r\n    var _buttonProps = _a.buttonProps, _dismissible = _a.dismissible, _error = _a.error, _mini = _a.mini, _success = _a.success, _timeOut = _a.timeOut, _transient = _a.transient, props = __rest(_a, [\"buttonProps\", \"dismissible\", \"error\", \"mini\", \"success\", \"timeOut\", \"transient\"]);\r\n    return (createElement(\"div\", __assign({}, props)));\r\n};\r\nvar NotificationWrapper = styled(NotificationBase)(templateObject_1$c || (templateObject_1$c = __makeTemplateObject([\"\\n  bottom: 0;\\n  display: flex;\\n  justify-content: center;\\n  left: 0;\\n  max-width: 100%;\\n  padding: calc(var(--clear-unit) * 2);\\n  pointer-events: none;\\n  position: fixed;\\n  width: 100%;\\n  z-index: 1500;\\n\"], [\"\\n  bottom: 0;\\n  display: flex;\\n  justify-content: center;\\n  left: 0;\\n  max-width: 100%;\\n  padding: calc(var(--clear-unit) * 2);\\n  pointer-events: none;\\n  position: fixed;\\n  width: 100%;\\n  z-index: 1500;\\n\"])));\r\nvar StyledNotification = styled(NotificationBase)(templateObject_2$1 || (templateObject_2$1 = __makeTemplateObject([\"\\n  align-items: center;\\n  background: var(--clear-\", \");\\n  border-radius: var(--clear-font-size-default);\\n  display: flex;\\n  font-size: var(--clear-font-size-default);\\n  font-style: normal;\\n  font-weight: normal;\\n  justify-content: space-between;\\n  max-width: \", \";\\n  padding: var(--clear-font-size-default);\\n  pointer-events: auto;\\n  width: \", \";\\n  @keyframes slideInFromBottom {\\n    0% {\\n      transform: translateY(100%);\\n    }\\n    100% {\\n      transform: translateY(0);\\n    }\\n  }\\n  animation: 0.1s ease-out 0s 1 slideInFromBottom;\\n\"], [\"\\n  align-items: center;\\n  background: var(--clear-\", \");\\n  border-radius: var(--clear-font-size-default);\\n  display: flex;\\n  font-size: var(--clear-font-size-default);\\n  font-style: normal;\\n  font-weight: normal;\\n  justify-content: space-between;\\n  max-width: \", \";\\n  padding: var(--clear-font-size-default);\\n  pointer-events: auto;\\n  width: \", \";\\n  @keyframes slideInFromBottom {\\n    0% {\\n      transform: translateY(100%);\\n    }\\n    100% {\\n      transform: translateY(0);\\n    }\\n  }\\n  animation: 0.1s ease-out 0s 1 slideInFromBottom;\\n\"])), function (p) { return p.error ? 'error' : p.success ? 'green' : 'link'; }, function (p) { return p.mini ? 'calc(var(--clear-unit) * 24)' : '100%'; }, function (p) { return p.mini ? 'unset' : 'calc(var(--clear-unit) * 64)'; });\r\nvar NotificationContent = styled(NotificationBase)(templateObject_3$1 || (templateObject_3$1 = __makeTemplateObject([\"\\n  color: var(--clear-background);\\n  flex-grow: 1;\\n  text-align: \", \";\\n  \", \"\\n\"], [\"\\n  color: var(--clear-background);\\n  flex-grow: 1;\\n  text-align: \", \";\\n  \", \"\\n\"])), function (p) { return p.mini ? 'center' : 'left'; }, function (p) { return (p.mini || p.dismissible === false) ? '' : 'margin-right: calc(var(--clear-unit) * 2);'; });\r\nvar DismissButtonBase = function (_a) {\r\n    var _error = _a.error, _success = _a.success, props = __rest(_a, [\"error\", \"success\"]);\r\n    return createElement(Button, __assign({}, props));\r\n};\r\nvar DismissButton = styled(DismissButtonBase)(templateObject_4$1 || (templateObject_4$1 = __makeTemplateObject([\"\\n  background: none;\\n  border: 1px solid var(--clear-background);\\n  color: var(--clear-background);\\n  :focus {\\n    box-shadow: 0 0 0 calc(var(--clear-unit) / 4) var(--clear-\", \"),\\n    0 0 0 calc(var(--clear-unit) / 2) var(--clear-background);\\n  }\\n\"], [\"\\n  background: none;\\n  border: 1px solid var(--clear-background);\\n  color: var(--clear-background);\\n  :focus {\\n    box-shadow: 0 0 0 calc(var(--clear-unit) / 4) var(--clear-\",\r\n    \"),\\n    0 0 0 calc(var(--clear-unit) / 2) var(--clear-background);\\n  }\\n\"\r\n    /**\r\n     * Use a `<Notification>` to show users a short, timely message that might\r\n     * automatically disappear and that the user may be able to manually dismiss (or both).\r\n     *\r\n     * https://chadlavi.github.io/clear/#/notification\r\n     */\r\n])), function (p) { return p.error ? 'error' : p.success ? 'green' : 'link'; });\r\n/**\r\n * Use a `<Notification>` to show users a short, timely message that might\r\n * automatically disappear and that the user may be able to manually dismiss (or both).\r\n *\r\n * https://chadlavi.github.io/clear/#/notification\r\n */\r\nvar Notification = function (props) {\r\n    var _a, _b;\r\n    var buttonProps = props.buttonProps, children = props.children, dismissible = props.dismissible, error = props.error, mini = props.mini, open = props.open, setOpen = props.setOpen, success = props.success, timeOut = props.timeOut, transient = props.transient, other = __rest(props, [\"buttonProps\", \"children\", \"dismissible\", \"error\", \"mini\", \"open\", \"setOpen\", \"success\", \"timeOut\", \"transient\"]);\r\n    var onClose = function () { return setOpen(false); };\r\n    var transientOnClose = function () {\r\n        setTimeout(function () {\r\n            setOpen(false);\r\n        }, timeOut !== null && timeOut !== void 0 ? timeOut : 2000);\r\n    };\r\n    return (createElement(Fragment, null, open ?\r\n        createElement(NotificationWrapper, null,\r\n            createElement(StyledNotification, __assign({ className: 'notification', error: error, mini: mini, success: success }, other),\r\n                createElement(NotificationContent, { dismissible: dismissible, mini: mini, className: 'notification-content' }, children),\r\n                (transient && !mini) && transientOnClose(),\r\n                (mini || dismissible === false)\r\n                    ? transientOnClose()\r\n                    : createElement(DismissButton, __assign({}, buttonProps, { className: 'notification-dismiss-button', error: error, onClick: (_a = buttonProps === null || buttonProps === void 0 ? void 0 : buttonProps.onClick) !== null && _a !== void 0 ? _a : onClose, success: success }), (_b = buttonProps === null || buttonProps === void 0 ? void 0 : buttonProps.children) !== null && _b !== void 0 ? _b : 'Okay')))\r\n        : undefined));\r\n};\r\nvar templateObject_1$c, templateObject_2$1, templateObject_3$1, templateObject_4$1;\n\nvar PageBase = function (_a) {\r\n    var _size = _a.size, props = __rest(_a, [\"size\"]);\r\n    return (createElement(\"main\", __assign({}, props)));\r\n};\r\n/**\r\n * A simple styled `<main>`\r\n *\r\n * https://chadlavi.github.io/clear/#/layout#page\r\n */\r\nvar Page = styled(PageBase)(templateObject_1$d || (templateObject_1$d = __makeTemplateObject([\"\\nmargin: 0 auto;\\nmargin-bottom: calc(var(--clear-unit) * 15);\\npadding: var(--clear-unit);\\nwidth: \", \"px;\\nbackground-color: var(--clear-background);\\ncolor: var(--clear-textColor);\\nfont-family: var(--clear-font-family);\\nfont-size: var(--clear-font-size-default);\\n-webkit-font-smoothing: antialiased;\\n-moz-osx-font-smoothing: grayscale;\\nmax-width: 100%;\\n&, & * {\\n  box-sizing: border-box;\\n}\\n\"], [\"\\nmargin: 0 auto;\\nmargin-bottom: calc(var(--clear-unit) * 15);\\npadding: var(--clear-unit);\\nwidth: \", \"px;\\nbackground-color: var(--clear-background);\\ncolor: var(--clear-textColor);\\nfont-family: var(--clear-font-family);\\nfont-size: var(--clear-font-size-default);\\n-webkit-font-smoothing: antialiased;\\n-moz-osx-font-smoothing: grayscale;\\nmax-width: 100%;\\n&, & * {\\n  box-sizing: border-box;\\n}\\n\"])), function (p) { var _a; return numbers.width[(_a = p.size) !== null && _a !== void 0 ? _a : 'main']; });\r\nvar templateObject_1$d;\n\nvar ParagraphBase = function (_a) {\r\n    var _margins = _a.margins, props = __rest(_a, [\"margins\"]);\r\n    return createElement(\"p\", __assign({}, props));\r\n};\r\n/**\r\n * A simple styled `<p>`\r\n *\r\n * https://chadlavi.github.io/clear/#/text#paragraph\r\n */\r\nvar Paragraph = styled(ParagraphBase)(templateObject_1$e || (templateObject_1$e = __makeTemplateObject([\"\\n  line-height: 1.5;\\n  \", \"\\n\"], [\"\\n  line-height: 1.5;\\n  \",\r\n    \"\\n\"])), function (p) { return p.margins === false ? \"\\n    margin-block-start: 0;\\n    margin-block-end: 0;\\n  \" : \"\\n    margin-block-start: 1em;\\n    margin-block-end: 1em;\\n  \"; });\r\nvar templateObject_1$e;\n\nvar Wrapper$1 = styled.div(templateObject_1$f || (templateObject_1$f = __makeTemplateObject([\"\\n  align-items: center;\\n  display: flex;\\n  margin: var(--clear-unit);\\n\"], [\"\\n  align-items: center;\\n  display: flex;\\n  margin: var(--clear-unit);\\n\"])));\r\nvar InputWrapper$1 = styled.div(templateObject_2$2 || (templateObject_2$2 = __makeTemplateObject([\"\\n  display: block;\\n  height: var(--clear-font-size-label);\\n  width: var(--clear-font-size-label);\\n  position: relative;\\n\"], [\"\\n  display: block;\\n  height: var(--clear-font-size-label);\\n  width: var(--clear-font-size-label);\\n  position: relative;\\n\"])));\r\nvar InputBase$2 = function (_a) {\r\n    var _error = _a.error, _label = _a.label, props = __rest(_a, [\"error\", \"label\"]);\r\n    return (createElement(\"input\", __assign({}, props, { type: 'radio' })));\r\n};\r\nvar StyledInput$1 = styled(InputBase$2)(templateObject_3$2 || (templateObject_3$2 = __makeTemplateObject([\"\\n  -webkit-appearance: none;\\n  background: var(--clear-\", \");\\n  border-radius: var(--clear-font-size-label);\\n  border: 1px solid var(--clear-\", \");\\n  display: block;\\n  height: var(--clear-font-size-label);\\n  margin: 0;\\n  width: var(--clear-font-size-label);\\n  opacity: \", \";\\n  cursor: \", \";\\n  \", \"\\n  \", \"\\n\"], [\"\\n  -webkit-appearance: none;\\n  background: var(--clear-\", \");\\n  border-radius: var(--clear-font-size-label);\\n  border: 1px solid var(--clear-\", \");\\n  display: block;\\n  height: var(--clear-font-size-label);\\n  margin: 0;\\n  width: var(--clear-font-size-label);\\n  opacity: \", \";\\n  cursor: \", \";\\n  \", \"\\n  \", \"\\n\"])), function (p) { return p.checked ? (p.error ? 'error' : 'link') : 'background'; }, function (p) { return p.error ? 'error' : (p.checked ? 'link' : 'textColor'); }, function (p) { return p.disabled ? '0.5' : '1'; }, function (p) { return p.disabled ? 'not-allowed' : 'pointer'; }, focusStyle, function (p) { return p.error ? errorFocusStyle : ''; });\r\nvar SVGContainer = styled.div(templateObject_4$2 || (templateObject_4$2 = __makeTemplateObject([\"\\n  pointer-events: none;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: calc(var(--clear-font-size-label) * 10);\\n  height: calc(var(--clear-font-size-label) * 10);\\n  transform-origin: top left;\\n  padding: 20px;\\n  transform: scale(0.1);\\n  svg {\\n    width: 100%;\\n    height: 100%;\\n  }\\n\"], [\"\\n  pointer-events: none;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: calc(var(--clear-font-size-label) * 10);\\n  height: calc(var(--clear-font-size-label) * 10);\\n  transform-origin: top left;\\n  padding: 20px;\\n  transform: scale(0.1);\\n  svg {\\n    width: 100%;\\n    height: 100%;\\n  }\\n\"])));\r\nvar SVGBase$1 = function (_a) {\r\n    var _checked = _a.checked, props = __rest(_a, [\"checked\"]);\r\n    return (createElement(SVGContainer, null,\r\n        createElement(\"div\", null,\r\n            createElement(\"svg\", __assign({ viewBox: '0 0 100 100' }, props),\r\n                createElement(\"circle\", { cx: '50', cy: '50', r: '40', stroke: 'var(--clear-background)', fill: 'none', strokeWidth: '20' })))));\r\n};\r\nvar Icon$1 = styled(SVGBase$1)(templateObject_5$1 || (templateObject_5$1 = __makeTemplateObject([\"\\n  display: \", \"\\n\"], [\"\\n  display: \", \"\\n\"])), function (p) { return p.checked ? 'block' : 'none'; });\r\nvar LabelBase$2 = function (_a) {\r\n    var _disabled = _a.disabled, _error = _a.error, props = __rest(_a, [\"disabled\", \"error\"]);\r\n    return (createElement(\"label\", __assign({}, props)));\r\n};\r\nvar StyledLabel$1 = styled(LabelBase$2)(templateObject_6 || (templateObject_6 = __makeTemplateObject([\"\\n  \", \";\\n  opacity: \", \";\\n  cursor: \", \";\\n  margin-left: var(--clear-unit);\\n\"], [\"\\n  \", \";\\n  opacity: \", \";\\n  cursor: \", \";\\n  margin-left: var(--clear-unit);\\n\"\r\n    /**\r\n     * A wrapper around HTML `<input type='radio'>`.\r\n     *\r\n     * https://chadlavi.github.io/clear/#/input#radio\r\n     */\r\n])), function (p) { return p.error ? 'color: var(--clear-error)' : ''; }, function (p) { return p.disabled ? '0.5' : '1'; }, function (p) { return p.disabled ? 'not-allowed' : 'pointer'; });\r\n/**\r\n * A wrapper around HTML `<input type='radio'>`.\r\n *\r\n * https://chadlavi.github.io/clear/#/input#radio\r\n */\r\nvar Radio = function (props) {\r\n    var error = props.error, label = props.label, other = __rest(props, [\"error\", \"label\"]);\r\n    return (createElement(Wrapper$1, { role: 'radio' },\r\n        createElement(InputWrapper$1, { role: 'radio' },\r\n            createElement(StyledInput$1, __assign({ error: error, tabIndex: 0 }, other)),\r\n            createElement(Icon$1, { checked: other.checked })),\r\n        label &&\r\n            createElement(StyledLabel$1, { disabled: other.disabled, error: error, htmlFor: other.id }, label)));\r\n};\r\nvar templateObject_1$f, templateObject_2$2, templateObject_3$2, templateObject_4$2, templateObject_5$1, templateObject_6;\n\nvar ContainerBase = function (_a) {\r\n    var _contentMinHeight = _a.contentMinHeight, _contentMinWidth = _a.contentMinWidth, _direction = _a.direction, _maxHeight = _a.maxHeight, _maxWidth = _a.maxWidth, props = __rest(_a, [\"contentMinHeight\", \"contentMinWidth\", \"direction\", \"maxHeight\", \"maxWidth\"]);\r\n    return createElement(\"div\", __assign({}, props));\r\n};\r\nvar Container$2 = styled(ContainerBase)(templateObject_1$g || (templateObject_1$g = __makeTemplateObject([\"\\n  width: 100%;\\n  \", \"\\n  \", \"\\n\\n  \", \"\\n\"], [\"\\n  width: 100%;\\n  \",\r\n    \"\\n  \",\r\n    \"\\n\\n  \",\r\n    \"\\n\"])), function (p) {\r\n    var direction = p.direction;\r\n    if (direction === 'horizontal') {\r\n        return 'overflow-x: auto; max-width: 100%;';\r\n    }\r\n    else {\r\n        return 'overflow-y: auto; max-height: 100%;';\r\n    }\r\n}, function (p) {\r\n    var maxHeight = p.maxHeight;\r\n    if (typeof maxHeight === 'number') {\r\n        return \"max-height: \" + maxHeight + \"px;\";\r\n    }\r\n    else if (maxHeight) {\r\n        return \"max-height: \" + maxHeight + \";\";\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}, function (p) {\r\n    var maxWidth = p.maxWidth;\r\n    if (typeof maxWidth === 'number') {\r\n        return \"max-width: \" + maxWidth + \"px;\";\r\n    }\r\n    else if (maxWidth) {\r\n        return \"max-width: \" + maxWidth + \";\";\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n});\r\nvar ContentBase = function (_a) {\r\n    var _contentMinHeight = _a.contentMinHeight, _contentMinWidth = _a.contentMinWidth, _direction = _a.direction, _maxHeight = _a.maxHeight, _maxWidth = _a.maxWidth, props = __rest(_a, [\"contentMinHeight\", \"contentMinWidth\", \"direction\", \"maxHeight\", \"maxWidth\"]);\r\n    return createElement(\"div\", __assign({}, props));\r\n};\r\nvar Content = styled(ContentBase)(templateObject_2$3 || (templateObject_2$3 = __makeTemplateObject([\"\\n  \", \"\\n  \", \"\\n\"], [\"\\n  \",\r\n    \"\\n  \",\r\n    \"\\n\"\r\n    /**\r\n     * You can use a ScrollContainer to create a verticall or horizontally scrollable div with content of a fixed minimum\r\n     * height/width. Scroll containers are very convenient ways to prevent <Table>s from becoming unmanageable on\r\n     * responsive devices.\r\n     *\r\n     * https://chadlavi.github.io/clear/#/layout#scrollcontainer\r\n     */\r\n])), function (p) {\r\n    var contentMinHeight = p.contentMinHeight;\r\n    if (typeof contentMinHeight === 'number') {\r\n        return \"min-height: \" + contentMinHeight + \"px;\";\r\n    }\r\n    else if (contentMinHeight) {\r\n        return \"min-height: \" + contentMinHeight + \";\";\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}, function (p) {\r\n    var contentMinWidth = p.contentMinWidth;\r\n    if (typeof contentMinWidth === 'number') {\r\n        return \"min-width: \" + contentMinWidth + \"px;\";\r\n    }\r\n    else if (contentMinWidth) {\r\n        return \"min-width: \" + contentMinWidth + \";\";\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n});\r\n/**\r\n * You can use a ScrollContainer to create a verticall or horizontally scrollable div with content of a fixed minimum\r\n * height/width. Scroll containers are very convenient ways to prevent <Table>s from becoming unmanageable on\r\n * responsive devices.\r\n *\r\n * https://chadlavi.github.io/clear/#/layout#scrollcontainer\r\n */\r\nvar ScrollContainer = function (props) {\r\n    return createElement(Container$2, { direction: props.direction, maxHeight: props.maxHeight, maxWidth: props.maxWidth },\r\n        createElement(Content, __assign({ contentMinHeight: props.contentMinHeight, contentMinWidth: props.contentMinWidth }, props)));\r\n};\r\nvar templateObject_1$g, templateObject_2$3;\n\nvar SelectBase = function (_a) {\r\n    var _error = _a.error, props = __rest(_a, [\"error\"]);\r\n    return createElement(\"select\", __assign({}, props));\r\n};\r\nvar StyledSelect = styled(SelectBase)(templateObject_1$h || (templateObject_1$h = __makeTemplateObject([\"\\n  background-color: var(--clear-background);\\n  color: var(--clear-\", \");\\n  border: 1px solid var(--clear-\", \");\\n  border-radius: var(--clear-unit);\\n  padding: calc(var(--clear-unit) * 1.5);\\n  font-size: inherit;\\n  margin: calc(var(--clear-unit) / 2) 0;\\n  width: 100%;\\n  -webkit-appearance: none;\\n  \", \"\\n  \", \"\\n  cursor: \", \";\\n  opacity: \", \";\\n\"], [\"\\n  background-color: var(--clear-background);\\n  color: var(--clear-\", \");\\n  border: 1px solid var(--clear-\", \");\\n  border-radius: var(--clear-unit);\\n  padding: calc(var(--clear-unit) * 1.5);\\n  font-size: inherit;\\n  margin: calc(var(--clear-unit) / 2) 0;\\n  width: 100%;\\n  -webkit-appearance: none;\\n  \", \"\\n  \", \"\\n  cursor: \", \";\\n  opacity: \", \";\\n\"])), function (p) { return p.error ? 'error' : 'textColor'; }, function (p) { return p.error ? 'error' : 'border'; }, focusStyle, function (p) { return p.error ? errorFocusStyle : ''; }, function (p) { return p.disabled ? 'not-allowed' : 'pointer'; }, function (p) { return p.disabled ? '0.5' : '1'; });\r\nvar SelectOptions = function (_a) {\r\n    var options = _a.options;\r\n    return (createElement(Fragment, null, options.map(function (o) { return (createElement(\"option\", { key: o.label + \":\" + o.value, value: o.value }, o.label)); })));\r\n};\r\n/**\r\n * A simple styled HTML `<select>`\r\n *\r\n * https://chadlavi.github.io/clear/#/input#select\r\n */\r\nvar Select = function (props) {\r\n    var multiple = props.multiple, options = props.options, other = __rest(props, [\"multiple\", \"options\"]);\r\n    return (createElement(StyledSelect, __assign({}, other, { defaultValue: multiple ? undefined : '', multiple: multiple }),\r\n        multiple ? '' : createElement(\"option\", { hidden: true, disabled: true, value: '' }),\r\n        createElement(SelectOptions, { options: options })));\r\n};\r\n/**\r\n * handles update logic to update the value of a `<Select>` with `multiple={true}`\r\n *\r\n * Requires one argument, the function to set the `<select>` value. Defaults to\r\n * expecting a React `useState` hook, but you can optionally specify a type for the\r\n * setter function.\r\n */\r\nvar handleMutliSelectOnChange = function (setter) { return function (e) {\r\n    var updatedOptions = Array.from(e.target.options)\r\n        .filter(function (option) { return option.selected; })\r\n        .map(function (x) { return x.value; });\r\n    setter(updatedOptions);\r\n}; };\r\nvar templateObject_1$h;\n\nvar jumpTo = function (id) { return function () {\r\n    var el = document.getElementById(id);\r\n    if (el) {\r\n        el.scrollIntoView();\r\n        el.focus();\r\n    }\r\n}; };\r\nvar SkipLinkButton = styled(Button)(templateObject_1$i || (templateObject_1$i = __makeTemplateObject([\"\\n  position: absolute;\\n  top: var(--clear-unit);\\n  left: var(--clear-unit);\\n  opacity: 0;\\n  pointer-events: none;\\n  user-select: none;\\n  :focus {\\n    opacity: 1;\\n    pointer-events: unset;\\n    user-select: unset;\\n  }\\n  \\n\"], [\"\\n  position: absolute;\\n  top: var(--clear-unit);\\n  left: var(--clear-unit);\\n  opacity: 0;\\n  pointer-events: none;\\n  user-select: none;\\n  :focus {\\n    opacity: 1;\\n    pointer-events: unset;\\n    user-select: unset;\\n  }\\n  \\n\"])));\r\nvar SkipLink = function (_a) {\r\n    var id = _a.id;\r\n    return (createElement(SkipLinkButton, { onClick: jumpTo(id), primary: true }, \"Skip to main content\"));\r\n};\r\nvar templateObject_1$i;\n\n/**\r\n * A simple styled `<table>`\r\n *\r\n * https://chadlavi.github.io/clear/#/table#table\r\n */\r\nvar Table = styled('table')(templateObject_1$j || (templateObject_1$j = __makeTemplateObject([\"\\n  border-collapse: collapse;\\n  flex-basis: 100%;\\n  width: 100%;\\n  margin-bottom: var(--clear-font-size-default);\\n\"], [\"\\n  border-collapse: collapse;\\n  flex-basis: 100%;\\n  width: 100%;\\n  margin-bottom: var(--clear-font-size-default);\\n\"])));\r\nvar templateObject_1$j;\n\n/**\r\n * A simple styled `<td>`\r\n *\r\n * Can also be used to create a `<th>`:\r\n *\r\n * ```tsx\r\n * <TableCell as='th'>\r\n *  This will be rendered as a `<th>`\r\n * </TableCell>\r\n * ```\r\n *\r\n * https://chadlavi.github.io/clear/#/table#tablecell\r\n */\r\nvar TableCell = styled('td')(templateObject_1$k || (templateObject_1$k = __makeTemplateObject([\"\\n  text-align: left;\\n  padding: var(--clear-unit);\\n\"], [\"\\n  text-align: left;\\n  padding: var(--clear-unit);\\n\"])));\r\nvar templateObject_1$k;\n\n/**\r\n * A simple styled `<thead>`\r\n *\r\n * https://chadlavi.github.io/clear/#/table#tablehead\r\n */\r\nvar TableHead = styled('thead')(templateObject_1$l || (templateObject_1$l = __makeTemplateObject([\"\\n  \", \" {\\n    font-size: var(--clear-font-size-label);\\n    text-align: left;\\n    padding: var(--clear-unit);\\n    padding-bottom: calc(var(--clear-unit) / 2);\\n  }\\n\"], [\"\\n  \", \" {\\n    font-size: var(--clear-font-size-label);\\n    text-align: left;\\n    padding: var(--clear-unit);\\n    padding-bottom: calc(var(--clear-unit) / 2);\\n  }\\n\"])), TableCell);\r\nvar templateObject_1$l;\n\n/**\r\n * A simple styled `<tbody>`\r\n *\r\n * https://chadlavi.github.io/clear/#/table#tablebody\r\n */\r\nvar TableBody = styled('tbody')(templateObject_1$m || (templateObject_1$m = __makeTemplateObject([\"\"], [\"\"])));\r\nvar templateObject_1$m;\n\n/**\r\n * A simple styled `<tr>`\r\n *\r\n * https://chadlavi.github.io/clear/#/table#tablerow\r\n */\r\nvar TableRow = styled('tr')(templateObject_1$n || (templateObject_1$n = __makeTemplateObject([\"\\n  &:nth-child(even) {\\n    \", \" {\\n      background-color: var(--clear-zebra);\\n    }\\n    \", \":first-child {\\n      border-radius: var(--clear-unit) 0 0 var(--clear-unit);\\n    }\\n    \", \":last-child {\\n      border-radius: 0 var(--clear-unit) var(--clear-unit) 0;\\n    }\\n  }\\n\"], [\"\\n  &:nth-child(even) {\\n    \", \" {\\n      background-color: var(--clear-zebra);\\n    }\\n    \", \":first-child {\\n      border-radius: var(--clear-unit) 0 0 var(--clear-unit);\\n    }\\n    \", \":last-child {\\n      border-radius: 0 var(--clear-unit) var(--clear-unit) 0;\\n    }\\n  }\\n\"])), TableCell, TableCell, TableCell);\r\nvar templateObject_1$n;\n\n/**\r\n * Generates a table using Clear's `<Table>`, `<TableHead>`, `<TableBody>`, `<TableRow>`, and `<TableCell>` components\r\n * based on the `data` array and `headers` array passed to it.\r\n *\r\n * https://chadlavi.github.io/clear/#/table#generatetable\r\n */\r\nvar GenerateTable = function (_a) {\r\n    var data = _a.data, headers = _a.headers;\r\n    return (createElement(Table, null,\r\n        createElement(TableHead, null,\r\n            createElement(TableRow, null, headers.map(function (h, i) { return (createElement(TableCell, { key: h + \"-\" + i, as: 'th' }, typeof h === 'string' ? \"\" + h.charAt(0).toUpperCase() + h.slice(1) : h.label || h.key)); }))),\r\n        createElement(TableBody, null, data.map(function (r) { return (createElement(TableRow, { key: JSON.stringify(r) }, headers.map(function (c, i) { return (createElement(TableCell, { key: c + \"-\" + i }, r[typeof c === 'string' ? c : c.key])); }))); }))));\r\n};\n\nvar uuid = function () {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        var r = Math.random() * 16 | 0;\r\n        var v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n};\n\nexport { Button, CSSVariables, Checkbox, Code, CodeBlock, GenerateTable, GlobalStyles, Grid, GridItem, Header, Input, Label, Link, Notification, Page, Paragraph, Radio, ScrollContainer, Select, SkipLink, Table, TableBody, TableCell, TableHead, TableRow, colors, complimentaryColors, errorFocusStyle, focusStyle, handleMutliSelectOnChange, numbers, useBreakpoint, useDarkMode, useMediaQuery, useResponsiveColor, uuid };\n","import * as React from 'react'\nimport {Link} from './component-lib'\nimport {HashLink, HashLinkProps} from 'react-router-hash-link'\n\nconst jumpToID = (path: string): void => {\n  const hashes = path.split('#')\n  if (hashes.length > 1) {\n    const id = hashes[hashes.length - 1]\n    const h = `#${id}`\n    setTimeout(() => {\n      const e = document.querySelector(h)\n      const p = e?.parentElement\n      if (p) {\n        const a = document.createElement('span')\n        a.setAttribute('aria-hidden', 'true')\n        a.setAttribute('tabIndex', '0')\n        p.insertBefore(a, e)\n        a.focus()\n        a.addEventListener('blur', () => {\n          p.removeChild(a)\n        })\n      }\n    }, 1)\n  } else {\n    window.scrollTo({top: 0})\n  }\n}\n\nconst focusTarget = (to: HashLinkProps['to']) => (): void => {\n  if (typeof to === 'string') {\n    jumpToID(to)\n  } else if (typeof to === 'object' && to.hash) {\n    jumpToID(`#${to.hash}`)\n  }\n}\n\nexport const AccessibleHashlink = (props: HashLinkProps): JSX.Element => (\n  <Link\n    as={HashLink}\n    {...props}\n    onClick={focusTarget(props.to)}\n  />\n)\n","import * as React from 'react'\nimport {AccessibleHashlink} from '../AccessibleHashlink'\nimport {\n  Button,\n  Code,\n  Header,\n  Link,\n  Notification,\n  Paragraph,\n} from '../component-lib'\n\nconst onClick = (copy: string) =>  (e: React.MouseEvent<HTMLButtonElement>): void => {\n  e.preventDefault()\n  alert(copy)\n}\n\nexport const ButtonPage: React.FC = () => {\n  const [standard, setStandard] = React.useState<boolean>(false)\n  const [primary, setPrimary] = React.useState<boolean>(false)\n  return (\n    <>\n      <Header id='button'><Code>{'<Button>'}</Code></Header>\n      <Paragraph>\n      The <Code>Button</Code> component is a simple styled wrapper around an HTML <Code>{'<button>'}</Code>.\n      </Paragraph>\n      <Header as='h2' id='props'>Props: <Code>ButtonProps</Code></Header>\n      <Paragraph>\n      Besides the standard props an HTML <Code>{'<button>'}</Code> accepts, <Code>Button</Code> also accepts the\n      prop <Code>primary?: boolean</Code> to mark a button as a primary call to action button.\n      </Paragraph>\n      <Header as='h2' id='customization'>Customization</Header>\n      <Paragraph>\n      See <AccessibleHashlink to={'/start#customization'}>Customization</AccessibleHashlink> discussion on the Getting\n      started page.\n      </Paragraph>\n      <Header as='h2' id='examples'>\n        <Link href={'https://github.com/chadlavi/clear/blob/master/playground/src/Pages/ButtonPage.tsx#L39'}>\n        Examples\n        </Link>\n      </Header>\n      <Header as='h3' id='standard-button'>Standard button</Header>\n      <Paragraph as='div'>\n        <Button\n          onClick={(): void => setStandard(true)}\n        >\n          This is a standard button\n        </Button>\n        <Notification\n          open={standard}\n          setOpen={setStandard}\n          transient\n        >\n          You clicked the standard button\n        </Notification>\n      </Paragraph>\n      <Header as='h3' id='primary-button'>Primary button</Header>\n      <Paragraph as='div'>\n        <Button\n          primary\n          onClick={(): void => setPrimary(true)}\n        >\n          This is a primary button\n        </Button>\n        <Notification\n          open={primary}\n          setOpen={setPrimary}\n          transient\n        >\n          You clicked the primary button\n        </Notification>\n      </Paragraph>\n      <Header as='h3' id='disabled-button'>Disabled button</Header>\n      <Paragraph>\n        <Button\n          disabled\n          onClick={onClick('You\\'ll never see this alert because this button is disabled')}\n        >\n        This is a disabled standard button\n        </Button>\n      </Paragraph>\n      <Paragraph>\n        <Button\n          disabled\n          primary\n          onClick={onClick('You\\'ll never see this alert because this button is disabled')}\n        >\n        This is a disabled primary button\n        </Button>\n      </Paragraph>\n    </>\n  )\n}\n","import * as React from 'react'\nimport {AccessibleHashlink} from '../AccessibleHashlink'\nimport styled from 'styled-components'\nimport {\n  Code,\n  Colors,\n  Grid,\n  GridItem,\n  Header,\n  Link,\n  Paragraph,\n  Themes,\n  colors,\n  complimentaryColors,\n  numbers,\n  useDarkMode,\n} from '../component-lib'\n\nconst colorDescription: {[key in Colors]?: React.ReactNode} = {\n  background: <>Used for page backgrounds and text on <Code>blue</Code>, <Code>\n    error</Code>, <Code>green</Code>, <Code>link</Code>, <Code>textColor</Code>,\n    and <Code>violet</Code> colored elements</>,\n  border: <>Used for borders in <AccessibleHashlink to='/input#inputs'>input</AccessibleHashlink> components\n    and standard <AccessibleHashlink to='/button#button'>{'<Button>'}</AccessibleHashlink> background</>,\n  error: <>Used for error state borders and text in <AccessibleHashlink to='/input#inputs'>input\n  </AccessibleHashlink> components and for error <AccessibleHashlink to='/notification#notification'><Code>\n    {'<Notification>'}</Code></AccessibleHashlink> background</>,\n  green: <>Used for success <AccessibleHashlink to='/notification#notification'><Code>{'<Notification>'}</Code>\n  </AccessibleHashlink> background</>,\n  link: <>Used for <AccessibleHashlink to='/link#link'><Code>{'<Link>'}</Code></AccessibleHashlink> text and\n    primary <AccessibleHashlink to='/button#button'>{'<Button>'}</AccessibleHashlink> and\n    standard <AccessibleHashlink to='/notification#notification'><Code>{'<Notification>'}</Code>\n  </AccessibleHashlink> backgrounds</>,\n  textColor: <>Used for text when it appears on a <Code>background</Code>, <Code>\n    border</Code>, or <Code>zebra</Code> colored background</>,\n  zebra: <>Used as the background for even-numbered <AccessibleHashlink to='/table#examples'><Code>{'<TableRow>'}</Code>\n  </AccessibleHashlink></>,\n}\n\ninterface ColorTileProps extends React.HTMLAttributes<HTMLDivElement> {\n  color: Colors\n  textColor?: string\n  theme: Themes\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst StyledTile = styled(({color, textColor, theme, ...props}: ColorTileProps) => (\n  <div {...props} />\n))`\n  background-color: ${(p): string => colors[p.theme as Themes][p.color]};\n  color: ${(p): string => complimentaryColors[p.theme as Themes][p.color]};\n  height: calc(100% - calc(var(--clear-unit) * 2));\n  margin-bottom: calc(var(--clear-unit) * 2);\n  @media (min-width: ${numbers.breakpoint.xs}px) {\n    margin-right: calc(var(--clear-unit) * 2);\n  }\n  padding: calc(var(--clear-unit) * 2);\n  border-radius: var(--clear-unit);\n  a {\n    color: inherit;\n  }\n  h3 {\n    margin: 0;\n  }\n  code {\n    background: none;\n    padding: 0;\n  }\n  & > div {\n    font-size: var(--clear-font-size-label);\n    &:not(:last-child) {\n      margin-bottom: var(--clear-unit);\n    }\n  }\n`\n\nconst ColorTile = (props: ColorTileProps): JSX.Element => (\n  <GridItem size={6} id={`${props.theme}mode-${props.color}`}>\n    <StyledTile theme={props.theme} color={props.color}>\n      <Header as='h3'>\n        {props.color}: <Code>{colors[props.theme][props.color]}</Code>\n      </Header>\n      <div>contrast color: <Code>{complimentaryColors[props.theme][props.color]}</Code></div>\n      {colorDescription[props.color] && <div>{colorDescription[props.color]}</div>}\n    </StyledTile>\n  </GridItem>\n)\n\nexport const ColorsPage: React.FC = () => {\n  const dark = useDarkMode()\n  return (\n    <>\n      <Header>Colors</Header>\n      <Paragraph>\n        All the colors used by Clear are shown below, along with the color that\n        can be paired with each\n        for <Link href={'https://www.w3.org/TR/WCAG20/#visual-audio-contrast-contrast'}>\n          WCAG AA accessible text contrast</Link>.\n      </Paragraph>\n      <Paragraph>\n        The current light/dark mode variant of each color can be accessed as a global\n        CSS variable in the format <Code>var(--clear-COLORNAME)</Code>.\n      </Paragraph>\n      <Paragraph>\n        Your browser is currently using the {dark ? 'dark' : 'light'} mode variants.\n      </Paragraph>\n      <Paragraph>\n        See also: <AccessibleHashlink to='/global-styles#cssvariables'><Code>{'<CSSVariables>'}</Code>\n        </AccessibleHashlink>\n      </Paragraph>\n      <Header as ='h2' id='lightmode'>\n      Light mode {dark ? '' : '(current theme)'}\n      </Header>\n      <Grid>\n        {(Object.keys(colors.light) as Colors[]).map((c) => (\n          <ColorTile key={c} theme={'light'} color={c}/>\n        ))\n        }\n      </Grid>\n      <Header as ='h2' id='darkmode'>\n      Dark mode {dark ? '(current theme)' : ''}\n      </Header>\n      <Grid>\n        {(Object.keys(colors.dark) as Colors[]).map((c) => (\n          <ColorTile key={c} theme={'dark'} color={c}/>\n        ))\n        }\n      </Grid>\n    </>\n  )\n}\n","import * as React from 'react'\nimport {AccessibleHashlink} from '../AccessibleHashlink'\nimport styled from 'styled-components'\nimport {\n  Button,\n  ButtonProps,\n  Code,\n  CodeBlock,\n  Header,\n  Notification,\n  Paragraph,\n  colors,\n  errorFocusStyle,\n  numbers,\n  useDarkMode,\n  useResponsiveColor,\n} from '../component-lib'\n\nconst ErrorButton = styled(Button)`\nbackground: var(--clear-error);\ncolor: var(--clear-background);\n`\nconst BigErrorButton = styled(Button)`\nbackground: ${colors.light.error};\ncolor: ${colors.light.background};\nfont-size: ${numbers.fontSize.default * 2}px;\nborder-radius: ${numbers.unit * 2}px;\npadding: ${numbers.unit * 4}px ${numbers.unit * 8}px;\n`\n\ninterface ExtendedButtonProps extends ButtonProps {\n  background: string\n  color: string\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst ExtendedButton = ({background, color, ...props}: ExtendedButtonProps): JSX.Element => <Button {...props} />\n\nconst ResponsiveBigErrorButton = styled(ExtendedButton)`\n  background: ${(p): string => p.background};\n  color: ${(p): string => p.color};\n  font-size: ${numbers.fontSize.default * 2}px;\n  border-radius: ${numbers.unit * 2}px;\n  padding: ${numbers.unit * 4}px ${numbers.unit * 8}px;\n`\n\nconst FocusableResponsiveBigErrorButton = styled(ExtendedButton)`\n  background: ${(p): string => p.background};\n  color: ${(p): string => p.color};\n  font-size: ${numbers.fontSize.default * 2}px;\n  border-radius: ${numbers.unit * 2}px;\n  padding: ${numbers.unit * 4}px ${numbers.unit * 8}px;\n  ${errorFocusStyle}\n`\n\nexport const GettingStartedPage: React.FC = () => {\n  const [showNotification, setShowNotification] = React.useState(false)\n  const [notificationCopy, setNotificationCopy] = React.useState<string>()\n  const [notificationIndex, setNotificationIndex] = React.useState<number>()\n\n  return (\n    <>\n      <Header>Getting started</Header>\n      <Header as ='h2'>Contents</Header>\n      <Paragraph as={'nav'}>\n        <AccessibleHashlink to={'#npmrc'}>Editing your <Code>.npmrc</Code></AccessibleHashlink><br />\n        <AccessibleHashlink to={'#installing'}>Installing</AccessibleHashlink><br />\n        <AccessibleHashlink to={'#usage'}>Usage</AccessibleHashlink><br />\n        <AccessibleHashlink to={'#globals'}>Globals</AccessibleHashlink><br />\n        <AccessibleHashlink to={'#structure'}>Structure</AccessibleHashlink><br />\n        <AccessibleHashlink to={'#customization'}>Customization</AccessibleHashlink><br />\n      </Paragraph>\n      <Header as='h2' id='npmrc'>Editing your <Code>.npmrc</Code></Header>\n      <Paragraph>\n      Clear is hosted on GitHub package registry. To install it, add the following to your project's <Code>.npmrc\n        </Code>:\n      </Paragraph>\n      <CodeBlock>registry=https://npm.pkg.github.com/chadlavi</CodeBlock>\n      <Header as='h2' id='installing'>Installing</Header>\n      <Paragraph>\n      After editing your <Code>.npmrc</Code>, run the following to install Clear and its required peer\n      dependency, <Code>styled-components</Code>.\n      </Paragraph>\n      <CodeBlock>{`npm i @chadlavi/clear styled-components\n\n# only necessary if you use TypeScript\nnpm i -D @types/styled-components`}</CodeBlock>\n      <Paragraph>\n      (Note: we assume here that you have already installed <Code>react</Code>. If not, install that too! Clear only\n      works in React applications.)\n      </Paragraph>\n      <Header as='h2' id='usage'>Usage</Header>\n      <Header as='h3' id='globals'>Globals</Header>\n      <Paragraph>\n      When using Clear, you need to include a single instance\n      of <AccessibleHashlink to={'/global-styles#cssvariables'}><Code>{'<CSSVariables />'}</Code>\n        </AccessibleHashlink> at the top level of your application. You should also include an instance\n      of <AccessibleHashlink to={'/global-styles#globalstyles'}><Code>{'<GlobalStyles />'}</Code>\n        </AccessibleHashlink>. Something like:\n      </Paragraph>\n      <CodeBlock>{`// inside your index.js file\n\nimport * as React from 'react'\nimport {MyApp} from './MyApp'\nimport ReactDOM from 'react-dom'\nimport {\n  CSSVariables,\n  GlobalStyles,\n} from '@chadlavi/clear'\n\nReactDOM.render(\n  <React.StrictMode>\n    <CSSVariables/>\n    <GlobalStyles />\n    <MyApp />\n  </React.StrictMode>,\ndocument.getElementById('root')\n)`}</CodeBlock>\n      <Header as='h3' id='structure'>Structure</Header>\n      <Paragraph>\n      You should wrap content in your app with a <AccessibleHashlink to ={'/layout#page'}><Code>{'<Page>'}</Code>\n        </AccessibleHashlink>.\n      </Paragraph>\n      <Paragraph>\n      Use the <AccessibleHashlink to ={'/layout#grid'}><Code>{'<Grid>'}</Code> and <Code>{'<GridItem>'}</Code>\n        </AccessibleHashlink> components to organize content on a 12-column grid.\n      </Paragraph>\n      <Header as='h3'>Import statements</Header>\n      <Paragraph>\n      All components in Clear are exported at the top level in the library, so you can write import statements like\n      </Paragraph>\n      <CodeBlock>{`import {\n  CSSVariables,\n  GlobalStyles,\n  Header,\n  Link,\n  Page,\n} from '@chadlavi/clear'`}\n      </CodeBlock>\n      <Header as='h3' id='customization'>Customization</Header>\n      <Paragraph>\n      Since <AccessibleHashlink to={'/global-styles#cssvariables'}><Code>{'<CSSVariables />'}</Code>\n        </AccessibleHashlink> creates global CSS variables, you can access them in your app's styles.\n      </Paragraph>\n      <Paragraph>\n      Let's say you want to create an error button. You can access the Clear CSS variable <Code>var(--clear-error)\n        </Code> like this:\n      </Paragraph>\n      <CodeBlock>{`// ErrorButton.tsx\n\nimport * as React from 'react'\nimport styled from 'styled-components'\nimport {Button} from '@chadlavi/clear'\n\nexport const ErrorButton = styled(Button)\\`\n  background: var(--clear-error);\n  color: var(--clear-background);\n\\``}</CodeBlock>\n      <CodeBlock>{`// somewhere in your app\n\n<ErrorButton\n  onClick={(): void => alert('You clicked the error button')}\n>\n  Error button\n</ErrorButton>`}</CodeBlock>\n      <Paragraph as='div'>\n        <ErrorButton\n          onClick={(): void => {\n            setNotificationIndex(0)\n            setShowNotification(true)\n            setNotificationCopy('You clicked the error button')\n          }}\n        >\n        Error button\n        </ErrorButton>\n        <Notification\n          error\n          open={showNotification && notificationIndex === 0}\n          setOpen={setShowNotification}\n        >\n          {notificationCopy}\n        </Notification>\n      </Paragraph>\n      <Paragraph>\n      Note that CSS variables from Clear automatically change to accommodate dark mode; the variable <Code>\n      var(--clear-error)</Code> will yield <Code>{colors.light.error}</Code> in light mode\n      and <Code>{colors.dark.error}</Code> in dark mode. Your browser is currently\n      in {useDarkMode() ? 'dark' : 'light'} mode, so the button above should have background\n      color <Code>{useResponsiveColor('error')}</Code>.\n      </Paragraph>\n      <Header as='h4'>Accessing theme values in code</Header>\n      <Paragraph>\n      If you use JSS or just need access to a theme value in your code, you can also access color and number values\n      from Clear directly in your code with the exported <Code>colors</Code> and <Code>numbers</Code> objects:\n      </Paragraph>\n      <CodeBlock>{`// BigErrorButton.tsx\n\nimport * as React from 'react'\nimport styled from 'styled-components'\nimport {\n  Button,\n  colors,\n  numbers,\n} from '@chadlavi/clear'\n\nexport const BigErrorButton = styled(Button)\\`\n  background: \\${colors.light.error};\n  border-radius: \\${numbers.unit * 2}px;\n  color: \\${colors.light.background};\n  font-size: \\${numbers.fontSize.default * 2}px;\n  padding: \\${numbers.unit * 4}px \\${numbers.unit * 8}px;\n\\``}</CodeBlock>\n      <CodeBlock>{`// somewhere in your app\n\n<BigErrorButton\n  onClick={(): void => alert('You clicked the big error button')}\n>\n  Big error button (BEB)\n</BigErrorButton>`}</CodeBlock>\n      <Paragraph as='div'>\n        <BigErrorButton\n          onClick={(): void => {\n            setNotificationIndex(1)\n            setShowNotification(true)\n            setNotificationCopy('You clicked the big error button')\n          }}\n        >\n        Big error button (BEB)\n        </BigErrorButton>\n        <Notification\n          error\n          open={showNotification && notificationIndex === 1}\n          setOpen={setShowNotification}\n        >\n          {notificationCopy}\n        </Notification>\n      </Paragraph>\n      <Paragraph>\n      Note that in this case, the colors used will <i>not</i> respond to system dark/light mode changes. If you toggle\n      your device back and forth between light and dark mode, you'll see that the big error button example above does\n      not change.\n      </Paragraph>\n      <Paragraph>\n      You can solve this by using the React hook <Code>useResponsiveColor: (name: Color) => string</Code> inside a React\n      functional component to select a color value.\n      </Paragraph>\n      <CodeBlock>{`// ResponsiveBigErrorButton.tsx\n\nimport * as React from 'react'\nimport styled from 'styled-components'\nimport {\n  ButtonProps,\n  Button,\n  numbers,\n  useResponsiveColor,\n} from '@chadlavi/clear'\n\ninterface ExtendedButtonProps extends ButtonProps {\n  background: string\n  color: string\n}\n\nconst ExtendedButton = (\n  {background, color, ...props}: ExtendedButtonProps\n): JSX.Element => <Button {...props} />\n\nexport const ResponsiveBigErrorButton = styled(ExtendedButton)\\`\n  background: \\${(p): string => p.background};\n  color: \\${(p): string => p.color};\n  font-size: \\${numbers.fontSize.default * 2}px;\n  border-radius: \\${numbers.unit * 2}px;\n  padding: \\${numbers.unit * 4}px ${numbers.unit * 8}px;\n\\``}</CodeBlock>\n      <CodeBlock>{`// somewhere inside your React functional component\n    \n<ResponsiveBigErrorButton\n  background={useResponsiveColor('error')}\n  color={useResponsiveColor('background')}\n  onClick={(): void => alert('You clicked the responsive big error button')}\n>\n  Responsive BEB\n</ResponsiveBigErrorButton>`}</CodeBlock>\n      <Paragraph as='div'>\n        <ResponsiveBigErrorButton\n          background={useResponsiveColor('error')}\n          color={useResponsiveColor('background')}\n          onClick={(): void => {\n            setNotificationIndex(2)\n            setShowNotification(true)\n            setNotificationCopy('You clicked the responsive big error button')\n          }}\n        >\n        Responsive BEB\n        </ResponsiveBigErrorButton>\n        <Notification\n          error\n          open={showNotification && notificationIndex === 2}\n          setOpen={setShowNotification}\n        >\n          {notificationCopy}\n        </Notification>\n      </Paragraph>\n      <Paragraph>\n      You can also access the standard Clear focus style and error focus style with <Code>focusStyle</Code> and <Code>\n      errorFocusStyle</Code>. Let's give our responsive big error button an error focus style:\n      </Paragraph>\n      <CodeBlock>{`// FocusableResponsiveBigErrorButton.tsx\n \nimport * as React from 'react'\nimport styled from 'styled-components'\nimport {\n  ButtonProps,\n  Button,\n  numbers,\n  useResponsiveColor,\n} from '@chadlavi/clear'\n\ninterface ExtendedButtonProps extends ButtonProps {\n  background: string\n  color: string\n}\n\nconst ExtendedButton = (\n  {background, color, ...props}: ExtendedButtonProps\n): JSX.Element => <Button {...props} />\n\nexport const FocusableResponsiveBigErrorButton = styled(ExtendedButton)\\`\n  background: \\${(p): string => p.background};\n  color: \\${(p): string => p.color};\n  font-size: \\${numbers.fontSize.default * 2}px;\n  border-radius: \\${numbers.unit * 2}px;\n  padding: \\${numbers.unit * 4}px ${numbers.unit * 8}px;\n  \\${errorFocusStyle}\n\\``}</CodeBlock>\n      <CodeBlock>{`// somewhere inside your React functional component\n\n<FocusableResponsiveBigErrorButton\n  background={useResponsiveColor('error')}\n  color={useResponsiveColor('background')}\n  onClick={(): void => alert(\n    'Focus this button and the last one to see the difference'\n  )}\n>\n  Responsive BEB with error focus\n</FocusableResponsiveBigErrorButton>`}</CodeBlock>\n      <Paragraph as='div'>\n        <FocusableResponsiveBigErrorButton\n          background={useResponsiveColor('error')}\n          color={useResponsiveColor('background')}\n          onClick={(): void => {\n            setNotificationIndex(3)\n            setShowNotification(true)\n            setNotificationCopy('Focus this button and the last one to see the difference')\n          }}\n        >\n        Responsive BEB with error focus\n        </FocusableResponsiveBigErrorButton>\n        <Notification\n          error\n          open={showNotification && notificationIndex === 3}\n          setOpen={setShowNotification}\n        >\n          {notificationCopy}\n        </Notification>\n      </Paragraph>\n    </>\n  )\n}\n","import * as React from 'react'\nimport {\n  Code,\n  Header,\n  Link,\n  Paragraph,\n} from '../component-lib'\n\nexport const HomePage: React.FC = () => (\n  <>\n    <Header>Clear</Header>\n    <Paragraph>\n      <Link href={'https://github.com/chadlavi/clear'}>Clear</Link> is a simple personal Design System for TypeScript\n      React apps created by <Link href={'https://github.com/chadlavi'}>Chad Lavimoniere</Link>.\n    </Paragraph>\n    <Paragraph>\n      Clear features automatic dark mode support and minimalist styling via <Code>styled-components</Code>.\n    </Paragraph>\n  </>\n)\n","import * as React from 'react'\nimport {AccessibleHashlink} from '../AccessibleHashlink'\nimport styled from 'styled-components'\nimport {\n  Checkbox,\n  Code,\n  CodeBlock,\n  Grid,\n  GridItem,\n  Header,\n  Input,\n  Label,\n  Link,\n  Paragraph,\n  Radio,\n  Select,\n  SelectProps,\n  handleMutliSelectOnChange,\n} from '../component-lib'\n\nconst FancyPinkParagraph = styled(Paragraph)`\n  border-radius: var(--clear-unit);\n  color: purple;\n  padding: var(--clear-unit);\n  background: pink;\n  label {\n    font-style: italic;\n  }\n`\n\nconst FancyPinkInput = styled(Input)`\n  border-color: purple;\n  border-radius: var(--clear-unit);\n  background: pink;\n  color: purple;\n  font-size: calc(var(--clear-unit) * 3);\n  ::selection {\n    color: pink;\n    background: purple;\n  }\n  &:focus {\n    box-shadow: 0 0 0 calc(var(--clear-unit) / 2 - 1px) pink,\n    0 0 0 calc(var(--clear-unit) / 2) purple;\n  }\n`\n\nconst selectOptions: SelectProps['options'] = [\n  {label: 'Buzz cola', value: 'buzz'},\n  {label: 'Slurm', value: 'slurm'},\n  {label: 'Slurm loco', value: 'slurm loco'},\n  {label: 'Oil-ade', value: 'oilade'},\n  {label: 'José Servo tequila', value: 'jose servo'},\n  {label: '\\'66 Thunderschewitz', value: 'thunderschewitz'},\n  {label: 'Löwenbrau', value: 'lowenbrau'},\n  {label: 'Dr. Jitter', value: 'dr jitter'},\n  {label: '100 coffees', value: '100 coffees'},\n  {label: 'Maltese liquor', value: 'maltese liquor'},\n]\n\nexport const InputPage: React.FC = () => {\n  const [numericValue, setNumericValue] = React.useState<number | undefined>()\n  const [textValue, setTextValue] = React.useState<string | undefined>()\n  const [errorValue, setErrorValue] = React.useState<string | undefined>()\n  const [disabledValue] = React.useState<string | undefined>()\n  const [requiredValue, setRequiredValue] = React.useState<string | undefined>()\n  const [customValue, setCustomValue] = React.useState<string | undefined>()\n  const [textAreaValue, setTextAreaValue] = React.useState<string | undefined>()\n\n  const [singleSelectValue, setSingleSelectValue] = React.useState<string | number | string[] | undefined>()\n  const [errorSingleSelectValue, setErrorSingleSelectValue] = React.useState<string | number | string[] | undefined>()\n  const [\n    requiredSingleSelectValue,\n    setRequiredSingleSelectValue\n  ] = React.useState<string | number | string[] | undefined>()\n\n  const [multiSelectValue, setMultiSelectValue] = React.useState<string[] | undefined>()\n  const [errorMultiSelectValue, setErrorMultiSelectValue] = React.useState<string[] | undefined>()\n  const [requiredMultiSelectValue, setRequiredMultiSelectValue] = React.useState<string[] | undefined>()\n\n  const [checked, setChecked] = React.useState(false)\n  const [errorChecked, setErrorChecked] = React.useState(false)\n\n  const [radioValue, setRadioValue] = React.useState<string>()\n\n  const handleFancyChange = (e: React.ChangeEvent<HTMLInputElement>): void => setCustomValue(e.currentTarget.value)\n\n  return (\n    <>\n      <Header id='inputs'>Inputs</Header>\n      <Paragraph as={'nav'}>\n        <AccessibleHashlink to={'#input'}><Code>{'<Input>'}</Code></AccessibleHashlink>{' \\u00b7 '}\n        <AccessibleHashlink to={'#inputprops'}><Code>InputProps</Code></AccessibleHashlink>{' \\u00b7 '}\n        <AccessibleHashlink to={'#select'}><Code>{'<Select>'}</Code></AccessibleHashlink>{' \\u00b7 '}\n        <AccessibleHashlink to={'#selectprops'}><Code>SelectProps</Code></AccessibleHashlink>{' \\u00b7 '}\n        <AccessibleHashlink to={'#checkbox'}><Code>{'<Checkbox>'}</Code></AccessibleHashlink>{' \\u00b7 '}\n        <AccessibleHashlink to={'#checkboxprops'}><Code>CheckBoxProps</Code></AccessibleHashlink>{' \\u00b7 '}\n        <AccessibleHashlink to={'#radio'}><Code>{'<Radio>'}</Code></AccessibleHashlink>{' \\u00b7 '}\n        <AccessibleHashlink to={'#radioprops'}><Code>RadioProps</Code></AccessibleHashlink>{' \\u00b7 '}\n        <AccessibleHashlink to={'#customization'}>Customization</AccessibleHashlink>{' \\u00b7 '}\n        <AccessibleHashlink to={'#examples'}>Examples</AccessibleHashlink>\n      </Paragraph>\n      <Header as='h2' id='input'><Code>{'<Input>'}</Code></Header>\n      <Paragraph>\n        The <Code>Input</Code> component is a styled wrapper around an HTML <Code>{'<input>'}</Code> element.\n      </Paragraph>\n      <Paragraph>\n        Note that <Code>Input</Code> should always be paired with\n        a <AccessibleHashlink to={'/text#label'}><Code>{'<Label>'}</Code></AccessibleHashlink>.\n      </Paragraph>\n      <Header as='h2' id='props'>Props: <Code>InputProps</Code></Header>\n      <Paragraph>\n        <Code>Input</Code> accepts all the props you'd expect for an HTML <Code>{'<input>'}</Code>, plus the\n        prop <Code>error?: boolean</Code> to toggle an error state.\n      </Paragraph>\n      <Paragraph>\n        You can also use\n        the <Link href={'https://styled-components.com/docs/api#as-polymorphic-prop'}><Code>as</Code> prop</Link> to\n        render a <Code>{'<textarea>'}</Code> instead of an <Code>{'<input>'}</Code>, as shown in\n        the <AccessibleHashlink to={'#examples'}>examples</AccessibleHashlink> below.\n      </Paragraph>\n      <Header as='h2' id='select'><Code>{'<Select>'}</Code></Header>\n      <Paragraph>\n        <Code>{'<Select>'}</Code> is a wrapper around HTML <Code>{'<select>'}</Code>. Instead of manually building a\n        set of child <Code>{'<option>'}</Code>s as in HTML, you pass an array of options to\n        the <Code>options</Code> prop.\n      </Paragraph>\n      <Header as='h3' id='selectprops'>Props: <Code>SelectProps</Code></Header>\n      <Paragraph>\n        Besides the normal props that could be passed to an HTML<Code>{'<select>'}</Code> in any React app,\n        Clear's <Code>{'<Select>'}</Code> also has the required prop <Code>options</Code>, which expects a value of\n        type\n      </Paragraph>\n      <CodeBlock>{'{label: string; value: string | number | string[]}[]'}</CodeBlock>\n      <Paragraph>\n        <Code>{'<Select>'}</Code> also accepts the props <Code>error?: boolean</Code> to control whether it appears in\n        an error state, and <Code>label?: string</Code> to provide label content for the field.\n      </Paragraph>\n\n      <Header as='h2' id='checkbox'><Code>{'<Checkbox>'}</Code></Header>\n      <Paragraph>\n        <Code>{'<Checkbox>'}</Code> is a wrapper around HTML <Code>{'<input type=\\'checkbox\\'>'}</Code>.\n      </Paragraph>\n      <Header as='h3' id='checkboxprops'>Props: <Code>CheckboxProps</Code></Header>\n      <Paragraph>\n        <Code>{'<Checkbox>'}</Code> accepts the normal props that could be passed to an\n        HTML <Code>{'<input type=\\'checkbox\\'>'}</Code>. You can also pass the props <Code>label?: string</Code> to\n        define a label for the checkbox, and <Code>error?: boolean</Code> to toggle an error state.\n      </Paragraph>\n      <Header as='h2' id='radio'><Code>{'<Radio>'}</Code></Header>\n      <Paragraph>\n        <Code>{'<Radio>'}</Code> is a wrapper around HTML <Code>{'<input type=\\'radio\\'>'}</Code>.\n      </Paragraph>\n      <Header as='h3' id='radioprops'>Props: <Code>RadioProps</Code></Header>\n      <Paragraph>\n        Identically to <Code>{'<Checkbox>'}</Code>, <Code>{'<Radio>'}</Code> accepts the normal props that could be\n        passed to an HTML <Code>{'<input type=\\'checkbox\\'>'}</Code>. You can also pass the\n        props <Code>label?: string</Code> to define a label for the radio option,\n        and <Code>error?: boolean</Code> to toggle an error state for the option.\n      </Paragraph>\n      <Header as='h2' id='customization'>Customization</Header>\n      <Paragraph>\n        See <AccessibleHashlink to={'/start#customization'}>Customization</AccessibleHashlink> discussion on the\n        Getting started page.\n      </Paragraph>\n      <Paragraph>\n        Here's an example of a customized Input:\n      </Paragraph>\n      <CodeBlock>{`const FancyPinkParagraph = styled(Paragraph)\\`\n  border-radius: var(--clear-unit);\n  color: purple;\n  padding: var(--clear-unit);\n  background: pink;\n  label {\n    font-style: italic;\n  }\n\\`\n\nconst FancyPinkInput = styled(Input)\\`\n  border-color: purple;\n  border-radius: var(--clear-unit);\n  background: pink;\n  color: purple;\n  font-size: calc(var(--clear-unit) * 3);\n  ::selection {\n    color: pink;\n    background: purple;\n  }\n  &:focus {\n    box-shadow: 0 0 0 calc(var(--clear-unit) / 2 - 1px) pink,\n    0 0 0 calc(var(--clear-unit) / 2) purple;\n  }\n\\`\n\n<FancyPinkParagraph>\n  <Label htmlFor={'fancy-input'}>Fancy pink input</Label>\n  <FancyPinkInput\n    id={'fancy-input'}\n    value={customValue}\n    onChange={handleFancyChange}\n  />\n</FancyPinkParagraph>`}</CodeBlock>\n      <FancyPinkParagraph>\n        <Label\n          htmlFor={'fancy-input'}>\n          {`Fancy pink input${customValue?.match(/fancy/i) ? '🌸' :''}`}\n        </Label>\n        <FancyPinkInput\n          id={'fancy-input'}\n          value={customValue}\n          onChange={handleFancyChange}\n        />\n      </FancyPinkParagraph>\n      <Header as='h2' id='examples'>\n        <Link href={'https://github.com/chadlavi/clear/blob/master/playground/src/Pages/InputPage.tsx#L216'}>\n          Examples\n        </Link>\n      </Header>\n      <Paragraph as={'nav'}>\n        <AccessibleHashlink to={'#input-examples'}>\n          <Code>{'<Input>'}</Code> examples\n        </AccessibleHashlink>{' \\u00b7 '}\n        <AccessibleHashlink to={'#select-examples'}>\n          <Code>{'<Select>'}</Code> examples\n        </AccessibleHashlink>{' \\u00b7 '}\n        <AccessibleHashlink to={'#checkbox-examples'}>\n          <Code>{'<Checkbox>'}</Code> examples\n        </AccessibleHashlink>{' \\u00b7 '}\n        <AccessibleHashlink to={'#radio-examples'}><Code>{'<Radio>'}</Code> examples</AccessibleHashlink>\n      </Paragraph>\n      <Grid spacing={8}>\n        <GridItem>\n          <Header as='h3' id='input-examples'><Code>{'<Input>'}</Code></Header>\n        </GridItem>\n        <GridItem size={6}>\n          <Label htmlFor={'numeric-input'}>Numeric input</Label>\n          <Input\n            value={numericValue}\n            id={'numeric-input'}\n            type={'number'}\n            inputMode={'numeric'}\n            onChange={(e): void => setNumericValue(parseInt(e.currentTarget.value || '0', 10))}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label htmlFor={'text-input'}>Basic text input</Label>\n          <Input\n            id={'text-input'}\n            value={textValue}\n            onChange={(e): void => setTextValue(e.currentTarget.value)}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label error htmlFor={'error-input'}>Input with error</Label>\n          <Input\n            id={'error-input'}\n            value={errorValue}\n            error\n            onChange={(e): void => setErrorValue(e.currentTarget.value)}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label disabled htmlFor={'disabled-input'}>Disabled input</Label>\n          <Input\n            id={'disabled-input'}\n            value={disabledValue}\n            disabled\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label required htmlFor={'required-input'}>Input</Label>\n          <Input\n            id={'required-input'}\n            value={requiredValue}\n            required\n            onChange={(e): void => setRequiredValue(e.currentTarget.value)}\n          />\n        </GridItem>\n        <GridItem>\n          <Label htmlFor={'textarea-input'}>Input with <Code>{'as={\\'textarea\\'}'}</Code></Label>\n          <Input\n            as={'textarea'}\n            id={'textarea-input'}\n            value={textAreaValue}\n            rows={7}\n            onChange={(e: React.ChangeEvent<HTMLTextAreaElement>): void => setTextAreaValue(e.currentTarget.value)}\n          />\n        </GridItem>\n        <GridItem>\n          <Header as='h3' id='select-examples'><Code>{'<Select>'}</Code></Header>\n        </GridItem>\n        <GridItem size={6}>\n          <Label htmlFor={'single-select'}>Single select</Label>\n          <Select\n            id={'single-select'}\n            value={singleSelectValue}\n            onChange={(e): void => setSingleSelectValue(e.currentTarget.value)}\n            options={selectOptions}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label error htmlFor={'single-select-error'}>Single select with error</Label>\n          <Select\n            error\n            id={'single-select-error'}\n            value={errorSingleSelectValue}\n            onChange={(e): void => setErrorSingleSelectValue(e.currentTarget.value)}\n            options={selectOptions}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label required htmlFor={'single-select'}>Single select</Label>\n          <Select\n            id={'single-select'}\n            value={requiredSingleSelectValue}\n            onChange={(e): void => setRequiredSingleSelectValue(e.currentTarget.value)}\n            options={selectOptions}\n            required\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label disabled htmlFor={'disabled-select'}>Disabled single select</Label>\n          <Select\n            id={'disabled-select'}\n            disabled\n            options={selectOptions}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label htmlFor={'multiple-select'}>Multiple select</Label>\n          <Select\n            id={'multiple-select'}\n            multiple\n            onChange={handleMutliSelectOnChange(setMultiSelectValue)}\n            options={selectOptions}\n            size={3}\n            value={multiSelectValue}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label error htmlFor={'multiple-select-error'}>Multiple select with error</Label>\n          <Select\n            error\n            id={'multiple-select-error'}\n            multiple\n            onChange={handleMutliSelectOnChange(setErrorMultiSelectValue)}\n            options={selectOptions}\n            size={3}\n            value={errorMultiSelectValue}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label required htmlFor={'required-multiple-select'}>Multiple select</Label>\n          <Select\n            id={'required-multiple-select'}\n            multiple\n            onChange={handleMutliSelectOnChange(setRequiredMultiSelectValue)}\n            options={selectOptions}\n            required\n            size={3}\n            value={requiredMultiSelectValue}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label disabled htmlFor={'disabled-multiple-select'}>Disabled multiple select</Label>\n          <Select\n            id={'disabled-multiple-select'}\n            multiple\n            options={selectOptions}\n            disabled\n            size={3}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Header as='h3' id='checkbox-examples'><Code>{'<Checkbox>'}</Code></Header>\n          <Checkbox\n            checked={checked}\n            onChange={(e): void => setChecked(e.target.checked)}\n            id={'basic-checkbox'}\n            label={'Checkbox'}\n          />\n          <Checkbox\n            checked={errorChecked}\n            onChange={(e): void => setErrorChecked(e.target.checked)}\n            id={'error-checkbox'}\n            error\n            label={'Checkbox with error'}\n          />\n          <Checkbox\n            checked={false}\n            id={'disabled-checkbox'}\n            disabled\n            label={'Disabled checkbox'}\n          />\n          <Checkbox\n            checked={true}\n            id={'disabled-checkbox-checked'}\n            disabled\n            label={'Disabled checkbox (checked)'}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Header as='h3' id='radio-examples'><Code>{'<Radio>'}</Code></Header>\n          <form role={'radiogroup'}>\n            <Radio\n              checked={radioValue === 'standard'}\n              onChange={(e): void => setRadioValue(e.target.value)}\n              id={'basic-radio'}\n              label={'Radio button'}\n              name={'radio'}\n              value={'standard'}\n            />\n            <Radio\n              checked={radioValue === 'error'}\n              onChange={(e): void => setRadioValue(e.target.value)}\n              id={'error-radio'}\n              error\n              label={'Radio button with error'}\n              name={'radio'}\n              value={'error'}\n            />\n            <Radio\n              checked={radioValue === 'disabled'}\n              onChange={(e): void => setRadioValue(e.target.value)}\n              disabled\n              id={'disabled-radio'}\n              label={'Disabled radio button'}\n              name={'radio'}\n              value={'disabled'}\n            />\n          </form>\n        </GridItem>\n      </Grid>\n    </>\n  )\n}\n","import * as React from 'react'\nimport {AccessibleHashlink} from '../AccessibleHashlink'\nimport styled from 'styled-components'\nimport {\n  Code,\n  CodeBlock,\n  Grid,\n  GridItem,\n  GridItemSize,\n  Header,\n  Input,\n  Label,\n  Link,\n  Paragraph,\n  ScrollContainer,\n  numbers,\n} from '../component-lib'\n\ninterface ExampleContainerProps extends React.HTMLAttributes<HTMLDivElement> {\n  background?: string\n  color: string\n  padded?: boolean\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst ExampleContainer = ({background, color, padded, ...props}: ExampleContainerProps): JSX.Element =>\n  <div {...props} />\n\n\nconst ExampleBorder = styled(ExampleContainer)`\nwidth: 100%;\nborder: 1px solid ${(p): string => p.color};\npadding: ${(p): string => p.padded === false ? '0' : 'var(--clear-unit)'};\nbackground: ${(p): string => p.background || 'var(--clear-background)'};\nborder-radius: var(--clear-unit);\n`\n\nexport const LayoutPage: React.FC = () => {\n  const [gridSpacing, setGridSpacing] = React.useState<number>(8)\n  const [gridItem1, setGridItem1] = React.useState<GridItemSize>(6)\n  const [gridItem2, setGridItem2] = React.useState<GridItemSize>(6)\n  const [gridItem3, setGridItem3] = React.useState<GridItemSize>(12)\n\n  const gridItemOnChange = (\n    setter: React.Dispatch<React.SetStateAction<GridItemSize>>\n  ) => (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const newValue = parseInt(e.currentTarget.value, 10)\n    if (newValue > 0 && newValue <= 12) {\n      setter(newValue as GridItemSize)\n    }\n  }\n\n  return (\n    <>\n      <Header>Layout components</Header>\n      <Paragraph>\n        <AccessibleHashlink to={'#page'}><Code>{'<Page>'}</Code></AccessibleHashlink>{' \\u00b7 '}\n        <AccessibleHashlink to={'#skiplink'}><Code>{'<Skiplink>'}</Code></AccessibleHashlink>{' \\u00b7 '}\n        <AccessibleHashlink to={'#grid'}><Code>{'<Grid>'}</Code></AccessibleHashlink>{' \\u00b7 '}\n        <AccessibleHashlink to={'#griditem'}><Code>{'<GridItem>'}</Code></AccessibleHashlink>{' \\u00b7 '}\n        <AccessibleHashlink to={'#scrollcontainer'}><Code>{'<ScrollContainer>'}</Code></AccessibleHashlink>{' \\u00b7 '}\n        <AccessibleHashlink to={'#responsive-sizing'}>Responsive sizing</AccessibleHashlink>{' \\u00b7 '}\n        <AccessibleHashlink to={'#customization'}>Customization</AccessibleHashlink>{' \\u00b7 '}\n        <AccessibleHashlink to={'#examples'}>Examples</AccessibleHashlink>\n      </Paragraph>\n      <Header as='h2' id='page'><Code>{'<Page>'}</Code></Header>\n      <Paragraph>\n        The <Code>Page</Code> component renders a horizontally\n        centered <Code>{'<main>'}</Code> HTML element (though you can use\n        the <Link href={'https://styled-components.com/docs/api#as-polymorphic-prop'}>\n          <Code>as</Code> prop</Link> to render a div or other block-level lement as necessary).\n      </Paragraph>\n      <Paragraph>\n        <Code>Page</Code>s have a width of {numbers.width.main}px or the full\n        screen width, whichever is lower.\n      </Paragraph>\n      <Paragraph>\n        All content in your app should be contained within a <Code>Page</Code>.\n      </Paragraph>\n      <Header as='h3'>Props: <Code>PageProps</Code></Header>\n      <Paragraph>\n        <Code>{'<Page>'}</Code> accepts the props that could normally be passed to an\n        HTML <Code>{'<main>'}</Code> element.\n      </Paragraph>\n      <Paragraph>\n        <Code>{'<Page>'}</Code> also accepts the optional\n        prop <Code>size?: 'main' | 'lg' | 'xl'</Code> that controls the width of\n        the <Code>{'<Page>'}</Code>. If nothing is provided, the width defaults\n        to <Code>main</Code>.\n      </Paragraph>\n      <CodeBlock>{`Page size values:\n  main: ${numbers.width.main}px (default)\n    lg: ${numbers.width.lg}px\n    xl: ${numbers.width.xl}px`}</CodeBlock>\n      <Header as='h2' id='skiplink'><Code>{'<Skiplink>'}</Code></Header>\n      <Paragraph>\n        Use a <Code>{'<Skiplink>'}</Code> to enable users who rely on keyboard\n        navigation to skip over menus/navigational\n        elements on your site. <Code>{'<Skiplink>'}</Code> renders a button that\n        is hidden until it gets focus, and on click\n        it will move focus to the element whose id is passed to its <Code>id</Code> prop.\n      </Paragraph>\n      <Paragraph>\n        The <Code>{'<Skiplink>'}</Code> component should be inserted before the\n        navigational elements of your application. You can see an example of\n        a <Code>{'<Skiplink>'}</Code> by reloading this page and hitting\n        the <Code>Tab</Code> key on your keyboard.\n      </Paragraph>\n      <Header as='h3'>Props: <Code>SkipLinkProps</Code></Header>\n      <Paragraph>\n        <Code>{'<Skiplink>'}</Code> accepts only one\n        prop: <Code>id: string</Code>. Pass the id of the element to which\n        the <Code>{'<Skiplink>'}</Code> should skip.\n      </Paragraph>\n      <Header as='h2' id='grid'><Code>{'<Grid>'}</Code></Header>\n      <Paragraph>\n        Use the <Code>{'<Grid>'}</Code> component to create a 12-column layout,\n        with <Code>{'<GridItem>'}</Code> children that occupy a specified\n        number of columns.\n      </Paragraph>\n      <Header as='h3'>Props: <Code>GridProps</Code></Header>\n      <Paragraph>\n        Besides children, <Code>{'<Grid>'}</Code> accepts the\n        prop <Code>spacing?: number</Code>. If spacing is supplied, that number\n        of pixels of space will be shown around all <Code>{'<GridItem>'}</Code>s.\n      </Paragraph>\n      <Header as='h2' id='griditem'><Code>{'<GridItem>'}</Code></Header>\n      <Paragraph>\n        Every child of a <Code>{'<Grid>'}</Code> should be a <Code>{'<GridItem>'}</Code>.\n      </Paragraph>\n      <Header as='h3'>Props: <Code>GridItemProps</Code></Header>\n      <Paragraph>\n        Besides children, <Code>{'<GridItem>'}</Code>s accept the\n        prop <Code>size?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12</Code>.\n        The <Code>size</Code> prop defines how many columns\n        the <Code>{'<GridItem>'}</Code> occupies. This prop defaults to <Code>12</Code>.\n      </Paragraph>\n      <Header as='h3' id='responsive-sizing'>Responsive sizing of <Code>{'<GridItem>'}</Code>s</Header>\n      <Paragraph>\n        Note that below the <Code>xs</Code> breakpoint ({numbers.breakpoint.xs}px),\n        the <Code>size</Code> prop is ignored and all <Code>{'<GridItem>'}</Code>s are full-width.\n      </Paragraph>\n      <Header as='h2' id='scrollcontainer'><Code>{'<ScrollContainer>'}</Code></Header>\n      <Paragraph>\n        You can use a <Code>ScrollContainer</Code> to create a verticall or\n        horizontally scrollable div with content of\n        a fixed minimum height/width. Scroll containers are very convenient ways\n        to prevent <AccessibleHashlink to={'/table#table'}><Code>{'<Table>'}</Code>\n        </AccessibleHashlink>s from becoming unmanageable on responsive devices.\n      </Paragraph>\n      <Header as='h3'>Props: <Code>ScrollContainerProps</Code></Header>\n      <Paragraph>\n        Besides the props that can be passed to an\n        HTML <Code>{'<div>'}</Code>, <Code>ScrollContainer</Code> accepts the following props:\n      </Paragraph>\n      <CodeBlock>{`contentMinHeight?: number | string\ncontentMinWidth?: number | string\ndirection: 'horizontal' | 'vertical'\nmaxHeight?: number | string\nmaxWidth?: number | string`}</CodeBlock>\n      <Header as='h2' id='customization'>Customization</Header>\n      <Paragraph>\n        See <AccessibleHashlink to={'/start#customization'}>Customization</AccessibleHashlink> discussion on the\n        Getting started page.\n      </Paragraph>\n      <Header as='h2' id='examples'>\n        <Link href={'https://github.com/chadlavi/clear/blob/master/playground/src/Pages/LayoutPage.tsx#L169'}>\n          Examples\n        </Link>\n      </Header>\n      <Header as='h3'><Code>{'<Grid>'}</Code></Header>\n      <Paragraph>\n        The following interactive example grid has colored borders on the\n        outside of the <Code>{'<Grid>'}</Code> and the content of\n        each <Code>{'<GridItem>'}</Code> to illustrate how <Code>{'<Grid>'}\n        </Code>'s <Code>spacing</Code> prop and <Code>{'<GridItem>'}\n        </Code>'s <Code>size</Code> prop work. Change the values below to\n        increase/decrease the Grid spacing and change the column size of each item.\n      </Paragraph>\n      <ExampleBorder color='var(--clear-border)' background='var(--clear-zebra)' padded={false}>\n        <Grid spacing={gridSpacing}>\n          <GridItem>\n            <ExampleBorder color='dodgerblue'>\n              <Label htmlFor={'grid-spacing'}>Grid spacing</Label>\n              <Input\n                id={'grid-spacing'}\n                inputMode={'numeric'}\n                min={0}\n                onChange={(e): void => setGridSpacing(parseInt(e.currentTarget.value || '0', 10))}\n                type={'number'}\n                value={gridSpacing}\n              />\n            </ExampleBorder>\n          </GridItem>\n          <GridItem size={gridItem1}>\n            <ExampleBorder color='forestgreen'>\n              <Label htmlFor={'grid-item-1'}>Green GridItem's size</Label>\n              <Input\n                id={'grid-item-1'}\n                inputMode={'numeric'}\n                onChange={gridItemOnChange(setGridItem1)}\n                type={'number'}\n                value={gridItem1}\n              />\n            </ExampleBorder>\n          </GridItem>\n          <GridItem size={gridItem2}>\n            <ExampleBorder color='red'>\n              <Label htmlFor={'grid-item-2'}>Red GridItem's size</Label>\n              <Input\n                id={'grid-item-2'}\n                inputMode={'numeric'}\n                onChange={gridItemOnChange(setGridItem2)}\n                type={'number'}\n                value={gridItem2}\n              />\n            </ExampleBorder>\n          </GridItem>\n          <GridItem size={gridItem3}>\n            <ExampleBorder color='violet'>\n              <Label htmlFor={'grid-item-3'}>Violet GridItem's size</Label>\n              <Input\n                id={'grid-item-3'}\n                inputMode={'numeric'}\n                onChange={gridItemOnChange(setGridItem3)}\n                type={'number'}\n                value={gridItem3}\n              />\n            </ExampleBorder>\n          </GridItem>\n        </Grid>\n      </ExampleBorder>\n      <Header as='h3'><Code>ScrollContainer</Code></Header>\n      <ScrollContainer direction={'horizontal'}>\n        <div\n          style={{\n            background: 'violet',\n            borderRadius: 8,\n            color: 'black',\n            padding: 20,\n            position: 'relative',\n            width: 2000,\n          }}\n        >\n          This div has a min-width of 2000px, but\n          its <Code style={{color: 'var(--clear-textColor)'}}>ScrollContainer</Code> is only 100% width\n          <div\n            style={{\n              bottom: 20,\n              fontWeight: 'bold',\n              position: 'absolute',\n              right: 20,\n            }}\n          >\n            neat!\n          </div>\n        </div>\n      </ScrollContainer>\n      <br/>\n      <ScrollContainer direction={'vertical'} maxHeight={58}>\n        <div\n          style={{\n            background: 'dodgerblue',\n            borderRadius: 8,\n            color: 'black',\n            padding: 20,\n            position: 'relative',\n            height: 1000,\n          }}\n        >\n          This div has a min-height of 1000px, but\n          its <Code style={{color: 'var(--clear-textColor)'}}>ScrollContainer</Code> is only 58px tall\n          <div\n            style={{\n              bottom: 20,\n              fontWeight: 'bold',\n              position: 'absolute',\n              right: 20,\n            }}\n          >\n            neat!\n          </div>\n        </div>\n      </ScrollContainer>\n    </>\n  )\n}\n","import * as React from 'react'\nimport {AccessibleHashlink} from '../AccessibleHashlink'\nimport {\n  Code,\n  CodeBlock,\n  GenerateTable,\n  Header,\n  Link,\n  Paragraph,\n  ScrollContainer,\n  Table,\n  TableBody,\n  TableCell,\n  TableData,\n  TableHead,\n  TableHeaderType,\n  TableRow,\n} from '../component-lib'\n\ntype TableHeaders = 'name' | 'email' | 'occupation'\n\nconst tableHeaders: TableHeaderType<TableHeaders>[] = [\n  'name',\n  'email',\n  'occupation',\n]\n\nconst tableData: TableData<TableHeaders> = [\n  {\n    name: 'Phillip J. Fry',\n    email: 'cosmicphil@panuccispizza.net',\n    occupation: 'Delivery boy',\n  },\n  {\n    name: 'Turanga Leela',\n    email: '1bdi@planetexpress.biz',\n    occupation: 'Captain',\n  },\n  {\n    name: 'Hubert J. Farnsworth',\n    email: 'hubie@planetexpress.biz',\n    occupation: 'Professor',\n  },\n  {\n    name: 'Bender \"Bending\" Rodriguez',\n    email: 'bender@benderisgreat.com',\n    occupation: 'Bending unit',\n  },\n  {\n    name: 'Dr. Amy Wong',\n    email: 'awong@marsu.edu',\n    occupation: 'Intern',\n  },\n  {\n    name: 'Dr. John A. Zoidberg',\n    email: 'woopwoopwoopwoop@drzoidberg.biz',\n    occupation: 'Staff doctor',\n  },\n  {\n    name: 'Hermes Conrad',\n    email: 'bureaucratman@limbo.org',\n    occupation: 'Grade 39 bureaucrat',\n  }\n]\n\nexport const TablePage: React.FC = () =>\n  <>\n    <Header>Table</Header>\n    <Paragraph as={'nav'}>\n      <AccessibleHashlink to={'#props'}>Props</AccessibleHashlink>{' \\u00b7 '}\n      <AccessibleHashlink to={'#table'}><Code>{'<Table>'}</Code></AccessibleHashlink>{' \\u00b7 '}\n      <AccessibleHashlink to={'#tablehead'}><Code>{'<TableHead>'}</Code></AccessibleHashlink>{' \\u00b7 '}\n      <AccessibleHashlink to={'#tablebody'}><Code>{'<TableBody>'}</Code></AccessibleHashlink>{' \\u00b7 '}\n      <AccessibleHashlink to={'#tablerow'}><Code>{'<TableRow>'}</Code></AccessibleHashlink>{' \\u00b7 '}\n      <AccessibleHashlink to={'#tablecell'}><Code>{'<TableCell>'}</Code></AccessibleHashlink>{' \\u00b7 '}\n      <AccessibleHashlink to={'#generatetable'}><Code>{'<GenerateTable>'}</Code></AccessibleHashlink>{' \\u00b7 '}\n      <AccessibleHashlink to={'#customization'}>Customization</AccessibleHashlink>{' \\u00b7 '}\n      <AccessibleHashlink to={'#examples'}>Examples</AccessibleHashlink>\n    </Paragraph>\n    <Paragraph>\n      Clear provides styled versions of the table primitives <Code>{'<table>'}</Code>, <Code>{'<thead>'}</Code>,\n      <Code>{'<tbody>'}</Code>, <Code>{'<tr>'}</Code>, and <Code>{'<td>'}</Code> (which can be extended to\n      cover <Code>{'<th>'}</Code>).\n    </Paragraph>\n    <Header as='h2' id='props'>Props</Header>\n    <Paragraph>\n      All of Clear's table-related components accept the standard props that could normally be passed to their HTML\n      equivalents.\n    </Paragraph>\n    <Header as='h2' id='table'><Code>{'<Table>'}</Code></Header>\n    <Paragraph>\n      Use the <Code>Table</Code> component where you would use an HTML <Code>{'<table>'}</Code>.\n    </Paragraph>\n    <Header as='h2' id='tablehead'><Code>{'<TableHead>'}</Code></Header>\n    <Paragraph>\n      Use the <Code>TableHead</Code> component where you would use an HTML <Code>{'<thead>'}</Code>.\n    </Paragraph>\n    <Header as='h2' id='tablebody'><Code>{'<TableBody>'}</Code></Header>\n    <Paragraph>\n      Use the <Code>TableBody</Code> component where you would use an HTML <Code>{'<tbody>'}</Code>.\n    </Paragraph>\n    <Header as='h2' id='tablerow'><Code>{'<TableRow>'}</Code></Header>\n    <Paragraph>\n      Use the <Code>TableRow</Code> component where you would use an HTML <Code>{'<tr>'}</Code>.\n    </Paragraph>\n    <Header as='h2' id='tablecell'><Code>{'<TableCell>'}</Code></Header>\n    <Paragraph>\n      Use the <Code>TableCell</Code> component where you would use an HTML <Code>{'<td>'}</Code>.\n    </Paragraph>\n    <Paragraph>\n      <Code>TableCell</Code> can also be used for <Code>{'<th>'}</Code> (table header cell) by extending it with\n      the <Link href={'https://styled-components.com/docs/api#as-polymorphic-prop'}><Code>as</Code> prop</Link> like\n      so:\n    </Paragraph>\n    <CodeBlock>{`<TableCell as='th'>\n  This will render in the DOM as a th\n</TableCell>`}\n    </CodeBlock>\n    <Header as='h2' id='generatetable'><Code>{'<GenerateTable>'}</Code></Header>\n    <Paragraph>\n      You can also generate a table from an array of headers and an array of row data with\n      the <Code>GenerateTable</Code> component. Using this component is much terser in terms of JSX, but requires more\n      thoroughly typed data.\n    </Paragraph>\n    <Header as='h2' id='customization'>Customization</Header>\n    <Paragraph>\n      See <AccessibleHashlink to={'/start#customization'}>Customization</AccessibleHashlink> discussion on the\n      Getting started page.\n    </Paragraph>\n    <Header as='h2' id='examples'>\n      <Link href={'https://github.com/chadlavi/clear/blob/master/playground/src/Pages/TablePage.tsx#L133'}>\n        Examples\n      </Link>\n    </Header>\n    <Paragraph>\n      Both <Code>Table</Code>s below are wrapped\n      in <AccessibleHashlink to={'/layout#scrollcontainer'}><Code>{'<ScrollContainer>'}</Code></AccessibleHashlink>s\n      and has a of 600px. In narrow viewports, they will be horizontally scrollable.\n    </Paragraph>\n    <Paragraph>\n      Normally constructed table:\n    </Paragraph>\n    <ScrollContainer direction='horizontal' maxWidth={'100%'} contentMinWidth={600}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell as={'th'}>Name</TableCell>\n            <TableCell as={'th'}>Email</TableCell>\n            <TableCell as={'th'}>Occupation</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {tableData.map((r) => (\n            <TableRow key={r.name?.toString()}>\n              <TableCell>{r.name}</TableCell>\n              <TableCell>{r.email}</TableCell>\n              <TableCell>{r.occupation}</TableCell>\n            </TableRow>\n          ))\n          }\n        </TableBody>\n      </Table>\n    </ScrollContainer>\n    <Paragraph>\n      Here's the same table, generated with the <Code>GenerateTable</Code> component:\n    </Paragraph>\n    <ScrollContainer direction='horizontal' maxWidth={'100%'} contentMinWidth={600}>\n      <GenerateTable data={tableData} headers={tableHeaders} />\n    </ScrollContainer>\n  </>\n","import * as React from 'react'\nimport {ComponentPage} from './ComponentPage'\nimport {version} from '../package.json'\nimport {\n  ButtonPage,\n  ColorsPage,\n  GettingStartedPage,\n  GlobalStylesPage,\n  HelpersPage,\n  HomePage,\n  InputPage,\n  LayoutPage,\n  LinkPage,\n  NotificationPage,\n  TablePage,\n  TextPage,\n} from './Pages'\nimport {\n  Grid,\n  GridItem,\n  Link,\n  Page,\n  Paragraph,\n  SkipLink,\n} from './component-lib'\nimport {\n  HashRouter,\n  NavLink,\n  Route,\n  Switch,\n} from 'react-router-dom'\n\nconst headerRoutes = [\n  {\n    label: `Clear (${version})`,\n    exact: true,\n    route: '/',\n    component: <ComponentPage content={HomePage} />,\n  },\n  {\n    label: 'Getting started',\n    route: '/start',\n    component: <ComponentPage title='Getting started' content={GettingStartedPage} />,\n  },\n]\n\nconst routes = [\n  {\n    label: 'Globals',\n    route: '/global-styles',\n    component: <ComponentPage title='Globals' content={GlobalStylesPage} />,\n  },\n  {\n    label: 'Colors',\n    route: '/colors',\n    component: <ComponentPage title='Colors' content={ColorsPage} />,\n  },\n  {\n    label: 'Layout',\n    route: '/layout',\n    component: <ComponentPage title='Layout' content={LayoutPage} />,\n  },\n  {\n    label: 'Input',\n    route: '/input',\n    component: <ComponentPage title='Input' content={InputPage} />,\n  },\n  {\n    label: 'Button',\n    route: '/button',\n    component: <ComponentPage title='Button' content={ButtonPage} />,\n  },\n  {\n    label: 'Link',\n    route: '/link',\n    component: <ComponentPage title='Link' content={LinkPage} />,\n  },\n  {\n    label: 'Text',\n    route: '/text',\n    component: <ComponentPage title='Text' content={TextPage} />,\n  },\n  {\n    label: 'Table',\n    route: '/table',\n    component: <ComponentPage title='Table' content={TablePage} />,\n  },\n  {\n    label: 'Notification',\n    route: '/notification',\n    component: <ComponentPage title='Notification' content={NotificationPage} />,\n  },\n  {\n    label: 'Helpers',\n    route: '/helpers',\n    component: <ComponentPage title='Helpers' content={HelpersPage} />,\n  },\n]\n\nexport const Routes: React.FC = () => {\n\n  const scrollinate = async (id: string): Promise<void> => {\n    const anchor = document.getElementById(id)\n    if (anchor) anchor.scrollIntoView(true)\n  }\n\n  /**\n   * Scroll to the designated anchor if one is present in the URL.\n   */\n  const scrollToHash = async (): Promise<void> => {\n    window.location.hash = window.location.hash.replace('%23', '#')\n    const hash = window.location.hash\n    const id = hash.substr(1).split('#')[1]\n    if(id) {\n      setTimeout(async () => {\n        await scrollinate(id)\n      }, 1)\n    }\n  }\n\n  React.useEffect(() => {\n    scrollToHash()\n  })\n\n  return (\n    <Page>\n      <HashRouter basename='/'>\n        <SkipLink id={'main'} />\n        <Grid spacing={16}>\n          <GridItem as='nav' aria-label='primary'>\n            <Paragraph>\n              {headerRoutes.map((r, i) => (\n                <React.Fragment key={r.label}>\n                  <Link\n                    as={NavLink}\n                    to={r.route}\n                    exact={r.exact}\n                  >\n                    {r.label}\n                  </Link>\n                  {i !== headerRoutes.length - 1 ? ' \\u00b7 ' : ''}\n                </React.Fragment>\n              ))\n              }\n            </Paragraph>\n            {routes\n              .sort(\n                (a, b) => (\n                  a.label < b.label\n                ) ? -1 : 1\n              )\n              .map((r, i) =>\n                <React.Fragment key={r.label}>\n                  <Link\n                    as={NavLink}\n                    to={r.route}\n                  >\n                    {r.label}\n                  </Link>\n                  {i !== routes.length - 1 ? ' \\u00b7 ' : ''}\n                </React.Fragment>\n              )}\n          </GridItem>\n          <GridItem>\n            <span tabIndex={-1} id='main' />\n            <Switch>\n              {[...headerRoutes, ...routes].map((r) =>\n                <Route\n                  key={r.label}\n                  exact\n                  path={r.route}\n                >\n                  {r.component}\n                </Route>\n              )}\n              <Route>\n                <HomePage/>\n              </Route>\n            </Switch>\n          </GridItem>\n        </Grid>\n      </HashRouter>\n    </Page>\n  )\n}\n","import * as React from 'react'\nimport {AccessibleHashlink} from '../AccessibleHashlink'\nimport {\n  Code,\n  Header,\n  Paragraph,\n} from '../component-lib'\n\nexport const GlobalStylesPage: React.FC = () =>\n  <>\n    <Header>Globals</Header>\n    <Paragraph as={'nav'}>\n      <AccessibleHashlink to={'#cssvariables'}><Code>{'<CSSVariables>'}</Code></AccessibleHashlink>{' \\u00b7 '}\n      <AccessibleHashlink to={'#dark-mode'}>dark mode</AccessibleHashlink>{' \\u00b7 '}\n      <AccessibleHashlink to={'#globalstyles'}><Code>{'<GlobalStyles>'}</Code></AccessibleHashlink>\n    </Paragraph>\n    <Header as='h2' id='cssvariables'><Code>{'<CSSVariables>'}</Code></Header>\n    <Paragraph>\n      Clear uses CSS variables extensively, so an instance of the <Code>CSSVariables</Code> component is\n      required at the top level in your application for Clear to work correctly. The component declares a set of CSS\n      variables with names that start with <Code>--clear-*</Code> that define the colors and measurements used in Clear\n      components.\n    </Paragraph>\n    <Header as='h3' id='dark-mode'>Dark mode</Header>\n    <Paragraph>\n      The <Code>CSSVariables</Code> component uses <Code>@media (prefers-color-scheme: dark)</Code> to define a set of\n      colors for use when the user's device is in dark mode. Switching between light and dark mode is handled\n      automatically.\n    </Paragraph>\n    <Paragraph>\n      See also: <AccessibleHashlink to='/colors'>Colors</AccessibleHashlink>\n    </Paragraph>\n    <Header as='h2' id='globalstyles'><Code>{'<GlobalStyles>'}</Code></Header>\n    <Paragraph>\n      The <Code>GlobalStyles</Code> component applies styles to the <Code>{'<body>'}</Code> tag. As such, <strong>this\n      component has side effects</strong>, because it creates CSS rules that affect elements outside the Clear design\n      system.\n    </Paragraph>\n    <Paragraph>\n      Omitting the <Code>GlobalStyles</Code> component in your application will mean that any content not contained in\n      a <AccessibleHashlink to={'/layout#page'}><Code>Page</Code></AccessibleHashlink> component may have unpredictable\n      colors, background colors, font sizes, and margins. Omitting <Code>GlobalStyles</Code> is not recommended.\n    </Paragraph>\n  </>\n","import * as React from 'react'\nimport {AccessibleHashlink} from '../AccessibleHashlink'\nimport {Link as RouterLink} from 'react-router-dom'\nimport {\n  Code,\n  CodeBlock,\n  Header,\n  Link,\n  Paragraph,\n} from '../component-lib'\n\nexport const LinkPage: React.FC = () =>\n  <>\n    <Header id={'link'}><Code>{'<Link>'}</Code></Header>\n    <Paragraph as={'nav'}>\n      <AccessibleHashlink to={'#external'}>External vs internal links</AccessibleHashlink>{' \\u00b7 '}\n      <AccessibleHashlink to={'#router'}>Router</AccessibleHashlink>{' \\u00b7 '}\n      <AccessibleHashlink to={'#props'}>Props</AccessibleHashlink>{' \\u00b7 '}\n      <AccessibleHashlink to={'#customization'}>Customization</AccessibleHashlink>{' \\u00b7 '}\n      <AccessibleHashlink to={'#examples'}>Examples</AccessibleHashlink>\n    </Paragraph>\n    <Paragraph>\n      The <Code>Link</Code> component is a simple styled wrapper around an HTML <Code>{'<a>'}</Code> element.\n    </Paragraph>\n    <Header as='h2' id='external'>External vs internal links</Header>\n    <Paragraph>\n      Links with an <Code>href</Code> that matches <Code>/^http/</Code> are marked as external, and will automatically\n      open in a new tab. External links are decorated with a \"{'\\u2197'}\" icon.\n    </Paragraph>\n    <Header as='h2' id='router'>Router links</Header>\n    <Paragraph>\n      Use the <Link href={'https://styled-components.com/docs/api#as-polymorphic-prop'}><Code>as</Code> prop</Link> to\n      substitute the Link component of your choice:\n    </Paragraph>\n    <CodeBlock>\n      {'<Link as={RouterLink} to={\\'/\\'}>Router link</Link>'}\n    </CodeBlock>\n    <Header as='h2' id='props'>Props: <Code>LinkProps</Code></Header>\n    <Paragraph>\n      <Code>Link</Code> accepts standard HTML anchor element props. Note that if you use\n      the <Link href={'https://styled-components.com/docs/api#as-polymorphic-prop'}><Code>as</Code> prop</Link> to\n      substitute a different component, then your instance of <Code>Link</Code> will change to accept the props of the\n      substituted component. For example, a RouterLink will accept the prop <Code>to: string</Code> which is not\n      accepted by <Code>{'<a>'}</Code>.\n    </Paragraph>\n    <Header as='h2' id='customization'>Customization</Header>\n    <Paragraph>\n      See <AccessibleHashlink to={'/start#customization'}>Customization</AccessibleHashlink> discussion on the\n      Getting started page.\n    </Paragraph>\n    <Header as='h2' id='examples'>\n      <Link href={'https://github.com/chadlavi/clear/blob/master/playground/src/Pages/LinkPage.tsx#L54'}>Examples</Link>\n    </Header>\n    <Paragraph>\n      <Link href={'/clear/'}>Internal HTML link</Link> (causes page load)\n    </Paragraph>\n    <Paragraph>\n      <Link as={RouterLink} to={'/'}>Router link</Link> (does not cause page load)\n    </Paragraph>\n    <Paragraph>\n      <Link href={'https://github.com/chadlavi/clear'}>External link</Link>\n    </Paragraph>\n  </>\n","import * as React from 'react'\nimport {AccessibleHashlink} from '../AccessibleHashlink'\nimport {\n  Code,\n  CodeBlock,\n  Header,\n  Link,\n  Paragraph,\n  numbers,\n} from '../component-lib'\n\nexport const TextPage: React.FC = () =>\n  <>\n    <Header>Text formatting components</Header>\n    <Paragraph as={'nav'}>\n      <AccessibleHashlink to={'#header'}><Code>{'<Header>'}</Code></AccessibleHashlink>{' \\u00b7 '}\n      <AccessibleHashlink to={'#paragraph'}><Code>{'<Paragraph>'}</Code></AccessibleHashlink>{' \\u00b7 '}\n      <AccessibleHashlink to={'#label'}><Code>{'<Label>'}</Code></AccessibleHashlink>{' \\u00b7 '}\n      <AccessibleHashlink to={'#code'}><Code>{'<Code>'}</Code></AccessibleHashlink>{' \\u00b7 '}\n      <AccessibleHashlink to={'#codeblock'}><Code>{'<CodeBlock>'}</Code></AccessibleHashlink>{' \\u00b7 '}\n      <AccessibleHashlink to={'#customization'}>Customization</AccessibleHashlink>\n    </Paragraph>\n    <Paragraph>\n      Clear offers various components for formatting text.\n      See <Link href={'https://github.com/chadlavi/clear/blob/master/playground/src/Pages/TextPage.tsx'}>the source code\n      for this page</Link> for examples.\n    </Paragraph>\n    <Header as='h2' id='header'><Code>{'<Header>'}</Code></Header>\n    <Paragraph>\n      <Code>Header</Code> can be used to create HTML header elements like <Code>{'<h1>'}</Code>, <Code>{'<h2>'}</Code>,\n      etc. With no props passed, the <Code>Header</Code> defaults to rendering an <Code>{'<h1>'}</Code>.\n    </Paragraph>\n    <Header as='h3' id='header-props'>Props: <Code>HeaderProps</Code></Header>\n    <Paragraph>\n      <Code>Header</Code> accepts any props that could normally be passed to an HTML header element.\n    </Paragraph>\n    <Paragraph>\n      Use the <Link href={'https://styled-components.com/docs/api#as-polymorphic-prop'}><Code>as</Code> prop</Link> to\n      substitute a different header element like so:\n    </Paragraph>\n    <CodeBlock>{`<Header as='h2'>\n  This will render in the DOM as an h2\n</Header>\n<Header as='h3'>\n  This will render in the DOM as an h3\n</Header>\n`}\n    </CodeBlock>\n    <Header as='h2' id='paragraph'><Code>{'<Paragraph>'}</Code></Header>\n    <Paragraph>\n      <Code>Paragraph</Code> is a simple styled wrapper around <Code>{'<p>'}</Code>.\n    </Paragraph>\n    <Header as='h3'>Props: <Code>ParagraphProps</Code></Header>\n    <Paragraph>\n      Besides the standard props that can be passed to an HTML <Code>{'<p>'}</Code> element, <Code>Paragraph</Code> also\n      accepts the prop <Code>margins?: boolean</Code>. If <Code>margins</Code> is false, the <Code>Paragraph</Code> will\n      not have margins; if it is true or undefined, the <Code>Paragraph</Code> will default to\n      having {numbers.fontSize.default}px margins at the top and bottom.\n    </Paragraph>\n    <Header as='h2' id='label'><Code>{'<Label>'}</Code></Header>\n    <Paragraph>\n      <Code>Label</Code> is a simple styled wrapper around <Code>{'<label>'}</Code>, used for formatting the label of\n      a form field like <AccessibleHashlink to={'/input#input'}><Code>{'<Input>'}</Code></AccessibleHashlink>.\n    </Paragraph>\n    <Header as='h3'>Props: <Code>LabelProps</Code></Header>\n    <Paragraph>\n      <Code>Label</Code> accepts the props that could normally be passed to an HTML <Code>{'<label>'}</Code>, plus\n      three special display props: <Code>disabled?: boolean</Code> to style the label of a disabled\n      input, <Code>error?: boolean</Code> to style the label of an input field in an error state,\n      and <Code>required?: boolean</Code> to style the label of a required field.\n    </Paragraph>\n    <Header as='h2' id='code'><Code>{'<Code>'}</Code></Header>\n    <Paragraph>\n      <Code>Code</Code> is a simple styled wrapper around <Code>{'<code>'}</Code>, used for formatting inline code\n      snippets.\n    </Paragraph>\n    <Header as='h3'>Props: <Code>CodeProps</Code></Header>\n    <Paragraph>\n      <Code>Code</Code> accepts any props that could normally be passed to an HTML <Code>{'<code>'}</Code> element.\n    </Paragraph>\n    <Header as='h2' id='codeblock'><Code>{'<CodeBlock>'}</Code></Header>\n    <Paragraph>\n      <Code>CodeBlock</Code> is a simple styled wrapper around <Code>{'<pre>'}</Code>, used for formatting block code\n      snippets.\n    </Paragraph>\n    <Header as='h3'>Props: <Code>CodeBlockProps</Code></Header>\n    <Paragraph>\n      <Code>CodeBlock</Code> accepts any props that could normally be passed to an HTML <Code>{'<pre>'}</Code> element.\n    </Paragraph>\n    <Header as='h2' id='customization'>Customization</Header>\n    <Paragraph>\n      See <AccessibleHashlink to={'/start#customization'}>Customization</AccessibleHashlink> discussion on the\n      Getting started page.\n    </Paragraph>\n  </>\n","import * as React from 'react'\nimport {AccessibleHashlink} from '../AccessibleHashlink'\nimport {\n  Button,\n  Code,\n  CodeBlock,\n  Header,\n  Notification,\n  Paragraph,\n} from '../component-lib'\n\nexport const NotificationPage: React.FC = () => {\n  const [standard, setStandard] = React.useState(false)\n  const [success, setSuccess] = React.useState(false)\n  const [error, setError] = React.useState(false)\n  const [transient, setTransient] = React.useState(false)\n  const [transientUndismissible, setTransientUndismissible] = React.useState(false)\n  const [mini, setMini] = React.useState(false)\n\n  const setAllFalse = (): void => {\n    setStandard(false)\n    setSuccess(false)\n    setError(false)\n    setTransient(false)\n    setTransientUndismissible(false)\n    setMini(false)\n  }\n\n  return (\n    <>\n      <Header id='notification'><Code>{'<Notification>'}</Code></Header>\n      <Paragraph as={'nav'}>\n        <AccessibleHashlink to={'#props'}>Props</AccessibleHashlink>{' \\u00b7 '}\n        <AccessibleHashlink to={'#customization'}>Customization</AccessibleHashlink>{' \\u00b7 '}\n        <AccessibleHashlink to={'#examples'}>Examples</AccessibleHashlink>\n      </Paragraph>\n      <Paragraph>\n        Use a <Code>{'<Notification>'}</Code> to show users a short, timely message that might automatically disappear\n        and that the user may be able to manually dismiss (or both).\n      </Paragraph>\n      <Paragraph>\n        For accessibility reasons, it's best to insert the <Code>{'<Notification>'}</Code> component in your code\n        within the context it's relevant to. In the <AccessibleHashlink to='#examples'>examples\n        </AccessibleHashlink> below, you can\n        see that the <Code>{'<Notification>'}</Code> immediately follows the <Code>{'<Button>'}</Code> that invokes it.\n      </Paragraph>\n      <Header as='h2' id='props'>Props: <Code>NotificationProps</Code></Header>\n      <Paragraph>\n        <Code>{'<Notification>'}</Code> has two required props:\n      </Paragraph>\n      <CodeBlock>{`/**\n * Control whether or not the Notification is open\n */\nopen: boolean`}</CodeBlock>\n      <Paragraph>and</Paragraph>\n      <CodeBlock>{`/**\n * Pass a function to set the value of \\`open\\` to this prop\n */\nsetOpen: React.Dispatch<React.SetStateAction<boolean>> | (() => void)`}</CodeBlock>\n      <Paragraph>\n      You can also pass these props:\n      </Paragraph>\n      <CodeBlock>{`/**\n * Optional props to pass to the dismiss button\n */\nbuttonProps?: ButtonProps\n/**\n * If true or undefined, a dismiss button will be shown that the user can use\n * to manually dismiss the Notification.\n */\ndismissible?: boolean\n/**\n * If true, the Notification will be styled with error coloring\n */\nerror?: boolean\n/**\n * If true, the notification will be narrower, with centered text, and a\n * dismiss button will not be shown regardless of the value of \\`dismissible\\`.\n */\nmini?: boolean\n/**\n * If true, the Notification will be styled with success coloring\n */\nsuccess?: boolean\n/**\n * Overrides the default timeout duration of a transient Notification.\n * Defaults to 1500ms.\n */\ntimeOut?: number\n/**\n * If true, the Notification will self-dismiss after either 1500ms or the\n * number of milliseconds passed to \\`timeOut\\`.\n *\n * Note: this prop and \\`dismissible\\` can be used together.\n */\ntransient?: boolean`}</CodeBlock>\n      <Header as='h2' id='customization'>Customization</Header>\n      <Paragraph>\n      See <AccessibleHashlink to={'/start#customization'}>Customization</AccessibleHashlink> discussion on the\n      Getting started page.\n      </Paragraph>\n      <Paragraph>\n        To make customization easier, some fixed class names are applied to elements\n        inside <Code>{'<Notification>'}</Code>. The base component has class <Code>notification</Code>. The content has\n        class <Code>notification-content</Code>. The dismiss button, if present, has\n        class <Code>notification-dismiss-button</Code>.\n      </Paragraph>\n      <Header as ='h2' id='examples'>Examples</Header>\n      <Paragraph as='div'>\n        <Button\n          onClick={(): void => {setAllFalse(); setStandard(true)}}\n        >\n          Show standard Notification\n        </Button>\n        <Notification\n          open={standard}\n          setOpen={setStandard}\n        >\n          This is a standard notification\n        </Notification>\n      </Paragraph>\n      <Paragraph as='div'>\n        <Button\n          onClick={(): void => {setAllFalse(); setSuccess(true)}}\n        >\n          Show success Notification\n        </Button>\n        <Notification\n          open={success}\n          setOpen={setSuccess}\n          success\n        >\n          This is a success notification\n        </Notification>\n      </Paragraph>\n      <Paragraph as='div'>\n        <Button\n          onClick={(): void => {setAllFalse(); setError(true)}}\n        >\n          Show error Notification\n        </Button>\n        <Notification\n          open={error}\n          setOpen={setError}\n          error\n        >\n          This is an error notification\n        </Notification>\n      </Paragraph>\n      <Paragraph as='div'>\n        <Button\n          onClick={(): void => {setAllFalse(); setTransient(true)}}\n        >\n          Show transient dismissible Notification\n        </Button>\n        <Notification\n          open={transient}\n          setOpen={setTransient}\n          transient\n          timeOut={1000 * 3}\n        >\n          This is a transient notification you can dismiss manually too\n        </Notification>\n      </Paragraph>\n      <Paragraph as='div'>\n        <Button\n          onClick={(): void => {setAllFalse(); setTransientUndismissible(true)}}\n        >\n          Show transient-only Notification\n        </Button>\n        <Notification\n          open={transientUndismissible}\n          setOpen={setTransientUndismissible}\n          transient\n          dismissible={false}\n        >\n          This is a transient-only notification\n        </Notification>\n      </Paragraph>\n      <Paragraph as='div'>\n        <Button\n          onClick={(): void => {setAllFalse(); setMini(true)}}\n        >\n          Show mini Notification\n        </Button>\n        <Notification\n          open={mini}\n          setOpen={setMini}\n          mini\n        >\n          Mini notification\n        </Notification>\n      </Paragraph>\n    </>\n  )\n}\n","import * as React from 'react'\nimport {\n  Code,\n  CodeBlock,\n  Header,\n  Link,\n  Paragraph,\n  numbers,\n  useBreakpoint,\n  useDarkMode,\n  useMediaQuery,\n  useResponsiveColor,\n} from '../component-lib'\n\nexport const HelpersPage: React.FC = () =>\n  <>\n    <Header>Helpers</Header>\n    <Paragraph>\n      The following <Link href='https://reactjs.org/docs/hooks-intro.html'>React hooks</Link> are available in Clear.\n      When using them, please bear in mind the <Link href='https://reactjs.org/docs/hooks-rules.html'>rules of\n      hooks</Link> &mdash; most importantly, that <i>React hooks can only be used inside functional React\n      components</i>.\n    </Paragraph>\n    <Header as='h3' id='usemediaquery'><Code>useMediaQuery</Code></Header>\n    <CodeBlock>{'useMediaQuery(query: string) => boolean'}</CodeBlock>\n    <Paragraph>\n      This basic React hook returns a boolean value that reflects whether or not the given <Code>query</Code> matches.\n    </Paragraph>\n    <CodeBlock>\n      {'Your browser is in {useMediaQuery(\\'(orientation: landscape)\\') ? \\'landscape\\' : \\'portrait\\'} orientation.'}\n    </CodeBlock>\n    <Paragraph>\n      Your browser is in {useMediaQuery('(orientation: landscape)') ? 'landscape' : 'portrait'} orientation.\n    </Paragraph>\n    <Header as='h3' id='usebreakpoint'><Code>useBreakpoint</Code></Header>\n    <CodeBlock>{`type Breakpoint = 'xs' | 'sm' | 'md' | 'lg'\n\nuseBreakpoint(breakpoint: Breakpoint) => boolean`}</CodeBlock>\n    <Paragraph>\n      Returns a boolean value that reflects whether or not the user's viewport is smaller than the given breakpoint.\n    </Paragraph>\n    <CodeBlock>\n      {'Your browser is {useBreakpoint(\\'sm\\') ? \\'narrower\\' : \\'wider\\'} than {numbers.breakpoint.sm}px.'}\n    </CodeBlock>\n    <Paragraph>\n      Your browser is {useBreakpoint('sm') ? 'narrower' : 'wider'} than {numbers.breakpoint.sm}px.\n    </Paragraph>\n    <Header as='h3' id='usedarkmode'><Code>useDarkMode</Code></Header>\n    <CodeBlock>{'useDarkMode() => boolean'}</CodeBlock>\n    <Paragraph>\n      Returns a boolean value that reflects whether or not the user's browser is currently in dark mode.\n    </Paragraph>\n    <CodeBlock>\n      {'Your browser is in {useDarkMode() ? \\'dark\\' : \\'light\\'} mode.'}\n    </CodeBlock>\n    <Paragraph>\n      Your browser is in {useDarkMode() ? 'dark' : 'light'} mode.\n    </Paragraph>\n    <Header as='h3' id='useresponsivecolor'><Code>useResponsiveColor</Code></Header>\n    <CodeBlock>{`type Colors = 'background' | 'blue' | 'border' | 'error' | 'link' |\n  'textColor' | 'violet' | 'zebra'\n\nuseResponsiveColor(color: Colors) => string`}</CodeBlock>\n    <Paragraph>\n      Returns the CSS color value that matches the user's browser's current theme (light or dark mode) for the given\n      color.\n    </Paragraph>\n    <CodeBlock>\n      {`<Paragraph style={{color: useResponsiveColor('violet')}}>\n  This paragraph is <b>'{useResponsiveColor('violet')}'</b>, the tone of violet\n  that has appropriate contrast on <b>{useResponsiveColor('background')}</b>,\n  the current background color.\n</Paragraph>`}\n    </CodeBlock>\n    <Paragraph style={{color: useResponsiveColor('violet')}}>\n      This paragraph is <b>'{useResponsiveColor('violet')}'</b>, the tone of violet that has appropriate contrast\n      on <b>{useResponsiveColor('background')}</b>, the current background color.\n    </Paragraph>\n  </>\n","import * as React from 'react'\nimport * as serviceWorker from './serviceWorker'\nimport ReactDOM from 'react-dom'\nimport {Routes} from './Routes'\nimport {CSSVariables, GlobalStyles} from './component-lib'\n\nReactDOM.render(\n  <React.StrictMode>\n    <CSSVariables/>\n    <GlobalStyles />\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}