{"version":3,"sources":["serviceWorker.ts","utils.ts","component-lib/index.js","Pages/ButtonPage.tsx","Pages/GettingStartedPage.tsx","Pages/GlobalStylesPage.tsx","Pages/HelpersPage.tsx","Pages/HomePage.tsx","Pages/InputPage.tsx","Pages/LayoutPage.tsx","Pages/LinkPage.tsx","Pages/TablePage.tsx","Pages/TextPage.tsx","Routes.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","setTitle","title","document","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__makeTemplateObject","cooked","raw","defineProperty","value","templateObject_1","templateObject_1$1","templateObject_1$2","templateObject_1$3","templateObject_1$4","templateObject_1$5","templateObject_1$6","templateObject_1$7","templateObject_1$8","templateObject_1$9","templateObject_1$a","templateObject_1$b","templateObject_1$c","templateObject_1$d","templateObject_2","templateObject_1$e","templateObject_1$f","templateObject_1$g","templateObject_1$h","templateObject_1$i","templateObject_1$j","templateObject_1$k","templateObject_1$l","templateObject_2$1","templateObject_3","templateObject_4","templateObject_5","templateObject_1$m","templateObject_2$2","templateObject_3$1","templateObject_4$1","templateObject_5$1","templateObject_6","colors","light","background","blue","border","error","link","textColor","violet","zebra","dark","focusStyle","errorFocusStyle","numbers","breakpoint","xs","sm","md","lg","fontSize","default","unit","label","width","main","CSSVariables","createGlobalStyle","keys","map","c","k","GlobalStyles","useMediaQuery","query","_a","useState","matchMedia","matches","result","setResult","callback","useCallback","matchMediaResult","useEffect","addListener","removeListener","useDarkMode","useResponsiveColor","color","theme","Button","styled","primary","props","createElement","disabled","Code","CodeBlock","GridItem","size","Grid","spacing","Header","forwardOnFocus","func","currentTarget","setTimeout","select","Input","onClick","onFocus","type","Label","required","Fragment","children","Link","isExternal","href","target","rel","Page","Paragraph","margins","Container$2","contentMinHeight","contentMinWidth","direction","maxHeight","maxWidth","Content","ScrollContainer","StyledSelect","SelectOptions","options","o","key","Select","multiple","other","defaultValue","undefined","hidden","handleMutliSelectOnChange","setter","updatedOptions","Array","from","filter","option","selected","x","jumpTo","id","el","getElementById","scrollIntoView","focus","SkipLinkButton","SkipLink","Table","TableCell","TableHead","TableBody","TableRow","GenerateTable","data","headers","h","as","charAt","toUpperCase","slice","r","JSON","stringify","Wrapper","div","InputWrapper","StyledInput","checked","Icon","version","xmlns","y","StyledLabel","Checkbox","viewBox","points","htmlFor","Wrapper$1","InputWrapper$1","StyledInput$1","SVGContainer","Icon$1","cx","cy","stroke","fill","strokeWidth","StyledLabel$1","Radio","role","tabIndex","copy","preventDefault","alert","ButtonPage","HashLink","to","ErrorButton","BigErrorButton","ExtendedButton","ResponsiveBigErrorButton","FocusableResponsiveBigErrorButton","GettingStartedPage","GlobalStylesPage","HelpersPage","style","HomePage","FancyPinkParagraph","FancyPinkInput","selectOptions","InputPage","React","numericValue","setNumericValue","textValue","setTextValue","errorValue","setErrorValue","disabledValue","requiredValue","setRequiredValue","customValue","setCustomValue","textAreaValue","setTextAreaValue","singleSelectValue","setSingleSelectValue","errorSingleSelectValue","setErrorSingleSelectValue","requiredSingleSelectValue","setRequiredSingleSelectValue","multiSelectValue","setMultiSelectValue","errorMultiSelectValue","setErrorMultiSelectValue","requiredMultiSelectValue","setRequiredMultiSelectValue","setChecked","errorChecked","setErrorChecked","radioValue","setRadioValue","onChange","inputMode","parseInt","rows","name","ExampleBorder","padded","LayoutPage","gridSpacing","setGridSpacing","gridItem1","setGridItem1","gridItem2","setGridItem2","gridItem3","setGridItem3","gridItemOnChange","newValue","min","borderRadius","padding","position","bottom","fontWeight","right","height","LinkPage","RouterLink","tableHeaders","tableData","email","occupation","TablePage","toString","TextPage","routes","exact","route","component","Routes","scrollinate","a","anchor","scrollToHash","hash","replace","substr","split","basename","aria-label","NavLink","path","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"wOAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,6DClBOC,EAAW,SAACC,GACvBC,SAASD,MAAT,eAAyBA,EAAM,MAAD,OAAQA,GAAU,K,OCkB9CE,EAAW,WAQX,OAPAA,EAAWC,OAAOC,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,IAE9E,OAAON,IAEKU,MAAMC,KAAMP,YAGhC,SAASQ,EAAOX,EAAGY,GACf,IAAIb,EAAI,GACR,IAAK,IAAIM,KAAKL,EAAOH,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,IAAMO,EAAEC,QAAQR,GAAK,IAC9EN,EAAEM,GAAKL,EAAEK,IACb,GAAS,MAALL,GAAqD,oBAAjCH,OAAOiB,sBACtB,KAAIb,EAAI,EAAb,IAAgBI,EAAIR,OAAOiB,sBAAsBd,GAAIC,EAAII,EAAED,OAAQH,IAC3DW,EAAEC,QAAQR,EAAEJ,IAAM,GAAKJ,OAAOS,UAAUS,qBAAqBP,KAAKR,EAAGK,EAAEJ,MACvEF,EAAEM,EAAEJ,IAAMD,EAAEK,EAAEJ,KAE1B,OAAOF,EAGX,SAASiB,EAAqBC,EAAQC,GAElC,OADIrB,OAAOsB,eAAkBtB,OAAOsB,eAAeF,EAAQ,MAAO,CAAEG,MAAOF,IAAiBD,EAAOC,IAAMA,EAClGD,EAGX,IAoDII,EAQAC,EAqDAC,EAQAC,EAQAC,EAaAC,EAcAC,EAgBAC,EAuCAC,EAgBAC,EAaAC,EAQAC,EAcAC,EA4FAC,EAAoBC,EAoCpBC,EAcAC,EAQAC,EAgBAC,EAQAC,EAQAC,EAQAC,EAgDAC,EAAoBC,EAAoBC,EAAkBC,EAAkBC,EAuC5EC,EAAoBC,EAAoBC,EAAoBC,EAAoBC,EAAoBC,EA3hBpGC,EAAS,CACTC,MAAO,CACHC,WAAY,QACZC,KAAM,UACNC,OAAQ,OACRC,MAAO,UACPC,KAAM,OACNC,UAAW,OACXC,OAAQ,UACRC,MAAO,WAEXC,KAAM,CACFR,WAAY,OACZC,KAAM,aACNC,OAAQ,OACRC,MAAO,UACPC,KAAM,UACNC,UAAW,QACXC,OAAQ,SACRC,MAAO,YAIXE,EAAa,8MACbC,EAAkB,+MAGlBC,EAAU,CACVC,WAAY,CACRC,GAAI,IACJC,GAAI,IACJC,GAAI,KACJC,GAAI,MAERC,SAAU,CACNC,QAASC,GACTC,MAAOD,IAEXE,MAAO,CACHC,KAAM,KAEVH,KAfO,GAwBPI,EAAeC,YAAkB3D,IAAqBA,EAAmBL,EAAqB,CAAC,oBAAqB,yBAA0B,gCAAiC,uCAAwC,qCAAsC,cAAe,0VAA2V,oBAAqB,CAAC,oBAAqB,yBAA0B,gCAAiC,uCAAwC,qCAAsC,cAC3xB,0VAA2V,sBAAuBnB,OAAOoF,KAAK3B,EAAOC,OAAO2B,KAAI,SAAUC,GAAK,MAAO,WAAaA,EAAI,KAAO7B,EAAOC,MAAM4B,GAAK,OAAShB,EAAQQ,KAAMR,EAAQU,MAAMC,KAAMX,EAAQM,SAASC,QAASP,EAAQM,SAASG,MAAO/E,OAAOoF,KAAKd,EAAQC,YAAYc,KAAI,SAAUE,GAAK,MAAO,sBAAwBA,EAAI,KAAOjB,EAAQC,WAAWgB,GAAK,SAAWvF,OAAOoF,KAAK3B,EAAOU,MAAMkB,KAAI,SAAUC,GAAK,MAAO,WAAaA,EAAI,KAAO7B,EAAOU,KAAKmB,GAAK,QAQzwBE,GAAeL,YAAkB1D,IAAuBA,EAAqBN,EAAqB,CAAC,sXAAuX,CAAC,yXAQ3dsE,GAAgB,SAAUC,GAC1B,IAAIC,EAAKC,mBAASC,WAAWH,GAAOI,SAAUC,EAASJ,EAAG,GAAIK,EAAYL,EAAG,GACzEM,EAAWC,uBAAY,SAAUC,GAAoB,OAAOH,EAAUG,EAAiBL,WAAa,CAACE,IAOzG,OANAI,qBAAU,WACN,IAAID,EAAmBN,WAAWH,GAGlC,OAFAO,EAASE,GACTA,EAAiBE,YAAYJ,GACtB,WAAc,OAAOE,EAAiBG,eAAeL,MAC7D,CAACA,IACGF,GAaPQ,GAAc,WAAc,OAAOd,GAAc,iCAMjDe,GAAqB,SAAUC,GAC/B,IAAIC,EAAQH,KAAgB,OAAS,QACrC,OAAO9C,EAAOiD,GAAOD,IAarBE,GAASC,aATI,SAAUjB,GACTA,EAAGkB,QAAjB,IAA0BC,EAAQhG,EAAO6E,EAAI,CAAC,YAC9C,OAAOoB,wBAAc,SAAUhH,EAAS,GAAI+G,MAOnCF,CAAmBlF,IAAuBA,EAAqBP,EAAqB,CAAC,oHAAqH,4BAA6B,kMAAmM,MAAO,CAAC,oHAC3b,4BACA,kMAAmM,SAAS,SAAUX,GAAK,OAAOA,EAAEqG,QAAU,gFAAkF,MAAO,SAAUrG,GAAK,OAAOA,EAAEwG,SAAW,oDAAsD,KAAO5C,GAQva6C,GAAOL,YAAO,OAAPA,CAAejF,IAAuBA,EAAqBR,EAAqB,CAAC,oRAAqR,CAAC,uRAQ9W+F,GAAYN,YAAO,MAAPA,CAAchF,IAAuBA,EAAqBT,EAAqB,CAAC,mWAAoW,CAAC,sWAajcgG,GAAWP,aATC,SAAUjB,GACXA,EAAGyB,KAAd,IAAoBN,EAAQhG,EAAO6E,EAAI,CAAC,SACxC,OAAOoB,wBAAc,MAAOhH,EAAS,GAAI+G,MAO9BF,CAAkB/E,IAAuBA,EAAqBV,EAAqB,CAAC,+BAAgC,iCAAkC,qCAAsC,iDAAkD,+EAAgF,CAAC,+BAAgC,iCAAkC,qCAAsC,iDAAkD,kFAAkF,SAAUX,GAAK,OAAOA,EAAE4G,MAAQ,MAAO,SAAU5G,GAAK,OAAOA,EAAE4G,MAAQ,MAAO,SAAU5G,GAAK,OAAOA,EAAE4G,MAAQ,KAAO9C,EAAQC,WAAWC,IAc9rB6C,GAAOT,aAVO,SAAUjB,GACVA,EAAG2B,QAAjB,IAA0BR,EAAQhG,EAAO6E,EAAI,CAAC,YAC9C,OAAOoB,wBAAc,MAAOhH,EAAS,GAAI+G,MAQlCF,CAAoB9E,IAAuBA,EAAqBX,EAAqB,CAAC,sDAAuD,cAAe,oBAAqB,cAAe,CAAC,sDAAuD,cAAe,oBAAqB,iBAAiB,SAAUX,GAAK,OAAOA,EAAE8G,QAAU9G,EAAE8G,QAAU,EAAI,IAAMH,IAAU,SAAU3G,GAAK,OAAOA,EAAE8G,QAAU9G,EAAE8G,QAAU,EAAI,KAgBxaC,GAASX,YAAO,KAAPA,CAAa7E,IAAuBA,EAAqBZ,EAAqB,CAAC,IAAK,CAAC,OAoB9FqG,GAAiB,SAAUC,GAAQ,OAAO,SAAU1G,GACpD,IAAIb,EAAIa,EAAE2G,cACND,GACAA,EAAK1G,GACLb,EAAEqB,OACFoG,YAAW,WACPzH,EAAE0H,WACH,KAYPC,GAAQjB,aATI,SAAUjB,GACVA,EAAG7B,MAAf,IAxB2B2D,EAwBLX,EAAQhG,EAAO6E,EAAI,CAAC,UAC1C,OAAOoB,wBAAc,QAAShH,EAAS,GAAI+G,EAAO,CAAEgB,SAzBzBL,EAyBiDX,EAAMgB,QAzBxC,SAAU/G,GACpD,IAAIb,EAAIa,EAAE2G,cACND,GACAA,EAAK1G,GACLb,EAAEqB,OACFoG,YAAW,WACPzH,EAAE0H,WACH,KAkBqFG,QAASP,GAAeV,EAAMiB,SAAUxG,MAAOuF,EAAMvF,QAAyB,WAAfuF,EAAMkB,KAAoB,IAAM,SAOnLpB,CAAkB5E,IAAuBA,EAAqBb,EAAqB,CAAC,wEAAyE,uCAAwC,sQAAuQ,OAAQ,OAAQ,MAAO,CAAC,wEAAyE,uCAAwC,sQAAuQ,OAAQ,OAAQ,SAAS,SAAUX,GAAK,OAAOA,EAAEsD,MAAQ,QAAU,eAAgB,SAAUtD,GAAK,OAAOA,EAAEsD,MAAQ,QAAU,WAAaM,GAAY,SAAU5D,GAAK,OAAOA,EAAEsD,MAAQO,EAAkB,MAAO,SAAU7D,GAAK,OAAOA,EAAEwG,SAAW,uBAAyB,MAe/mCiB,GAAQrB,aAXI,SAAUjB,GACPA,EAAGqB,SAAkBrB,EAAG7B,MAAvC,IAA8CoE,EAAWvC,EAAGuC,SAAUpB,EAAQhG,EAAO6E,EAAI,CAAC,WAAY,QAAS,aAC/G,OAAQoB,wBAAc,QAAShH,EAAS,GAAI+G,GAAQoB,EAAWnB,wBAAcoB,WAAU,KACnFrB,EAAMsB,SACN,eAAiBtB,EAAMsB,YAOnBxB,CAAkB3E,IAAuBA,EAAqBd,EAAqB,CAAC,cAAe,QAAS,mEAAoE,CAAC,cAAe,QACxM,sEAAsE,SAAUX,GAAK,OAAOA,EAAEsD,MAAQ,qBAAuB,aAAc,SAAUtD,GAAK,OAAOA,EAAEwG,SAAW,0BAA4B,MAa1MqB,GAAOzB,aAVE,SAAUE,GACnB,IAAInB,EACA2C,EAAa/I,QAA8B,QAArBoG,EAAKmB,EAAMyB,YAAyB,IAAP5C,OAAgB,EAASA,EAAGhG,MAAM,UACzF,OAAQoH,wBAAc,IAAKhH,EAAS,GAAI+G,EAAO,CAAE0B,OAAQF,EAAa,SAAWxB,EAAM0B,OAAQC,IAAKH,EAAa,sBAAwBxB,EAAM2B,IAAK5I,MAAOiH,EAAMjH,OAAS,SAAYiH,EAAMyB,KAAO,KAAQD,EAAa,gBAAkB,SAOnO1B,CAAe1E,IAAuBA,EAAqBf,EAAqB,CAAC,oCAAqC,qEAAsE,CAAC,oCAAqC,wEAAyEiD,GAQlTsE,GAAO9B,YAAO,OAAPA,CAAezE,IAAuBA,EAAqBhB,EAAqB,CAAC,wGAAyG,8SAA+S,CAAC,wGAAyG,gTAAiTmD,EAAQU,MAAMC,MAaz5B0D,GAAY/B,aATI,SAAUjB,GACZA,EAAGiD,QAAjB,IAA0B9B,EAAQhG,EAAO6E,EAAI,CAAC,YAC9C,OAAOoB,wBAAc,IAAKhH,EAAS,GAAI+G,MAO3BF,CAAsBxE,IAAuBA,EAAqBjB,EAAqB,CAAC,4BAA6B,MAAO,CAAC,4BACzI,SAAS,SAAUX,GAAK,OAAqB,IAAdA,EAAEoI,QAAoB,6DAA+D,oEASpHC,GAAcjC,aANE,SAAUjB,GAGPA,EAAGmD,iBAAoCnD,EAAGoD,gBAAsBpD,EAAGqD,UAAuBrD,EAAGsD,UAAsBtD,EAAGuD,SAFzI,IAEmJpC,EAAQhG,EAAO6E,EAAI,CAAC,mBAAoB,kBAAmB,YAAa,YAAa,aACxO,OAAOoB,wBAAc,MAAOhH,EAAS,GAAI+G,MAE3BF,CAAsBvE,IAAuBA,EAAqBlB,EAAqB,CAAC,uBAAwB,OAAQ,SAAU,MAAO,CAAC,uBACxJ,OACA,SACA,SAAS,SAAUX,GAEnB,MAAkB,eADFA,EAAEwI,UAEP,qCAGA,yCAEZ,SAAUxI,GACT,IAAIyI,EAAYzI,EAAEyI,UAClB,MAAyB,kBAAdA,EACA,eAAiBA,EAAY,MAE/BA,EACE,eAAiBA,EAAY,IAG7B,MAEZ,SAAUzI,GACT,IAAI0I,EAAW1I,EAAE0I,SACjB,MAAwB,kBAAbA,EACA,cAAgBA,EAAW,MAE7BA,EACE,cAAgBA,EAAW,IAG3B,MASXC,GAAUvC,aANI,SAAUjB,GAGLA,EAAGmD,iBAAoCnD,EAAGoD,gBAAsBpD,EAAGqD,UAAuBrD,EAAGsD,UAAsBtD,EAAGuD,SAFzI,IAEmJpC,EAAQhG,EAAO6E,EAAI,CAAC,mBAAoB,kBAAmB,YAAa,YAAa,aACxO,OAAOoB,wBAAc,MAAOhH,EAAS,GAAI+G,MAE/BF,CAAoBtE,IAAqBA,EAAmBnB,EAAqB,CAAC,OAAQ,OAAQ,MAAO,CAAC,OACpH,OACA,SAQC,SAAUX,GACX,IAAIsI,EAAmBtI,EAAEsI,iBACzB,MAAgC,kBAArBA,EACA,eAAiBA,EAAmB,MAEtCA,EACE,eAAiBA,EAAmB,IAGpC,MAEZ,SAAUtI,GACT,IAAIuI,EAAkBvI,EAAEuI,gBACxB,MAA+B,kBAApBA,EACA,cAAgBA,EAAkB,MAEpCA,EACE,cAAgBA,EAAkB,IAGlC,MAUXK,GAAkB,SAAUtC,GAC5B,OAAOC,wBAAc8B,GAAa,CAAEG,UAAWlC,EAAMkC,UAAWC,UAAWnC,EAAMmC,UAAWC,SAAUpC,EAAMoC,UACxGnC,wBAAcoC,GAASpJ,EAAS,CAAE+I,iBAAkBhC,EAAMgC,iBAAkBC,gBAAiBjC,EAAMiC,iBAAmBjC,MAS1HuC,GAAezC,aAJF,SAAUjB,GACXA,EAAG7B,MAAf,IAAsBgD,EAAQhG,EAAO6E,EAAI,CAAC,UAC1C,OAAOoB,wBAAc,SAAUhH,EAAS,GAAI+G,MAE7BF,CAAmBrE,IAAuBA,EAAqBpB,EAAqB,CAAC,wEAAyE,uCAAwC,uMAAwM,OAAQ,eAAgB,iBAAkB,OAAQ,CAAC,wEAAyE,uCAAwC,uMAAwM,OAAQ,eAAgB,iBAAkB,UAAU,SAAUX,GAAK,OAAOA,EAAEsD,MAAQ,QAAU,eAAgB,SAAUtD,GAAK,OAAOA,EAAEsD,MAAQ,QAAU,WAAaM,GAAY,SAAU5D,GAAK,OAAOA,EAAEsD,MAAQO,EAAkB,MAAO,SAAU7D,GAAK,OAAOA,EAAEwG,SAAW,cAAgB,aAAc,SAAUxG,GAAK,OAAOA,EAAEwG,SAAW,MAAQ,OAC/lCsC,GAAgB,SAAU3D,GAC1B,IAAI4D,EAAU5D,EAAG4D,QACjB,OAAQxC,wBAAcoB,WAAU,KAAMoB,EAAQlE,KAAI,SAAUmE,GAAK,OAAQzC,wBAAc,SAAU,CAAE0C,IAAKD,EAAEzE,MAAQ,IAAMyE,EAAEjI,MAAOA,MAAOiI,EAAEjI,OAASiI,EAAEzE,YAOrJ2E,GAAS,SAAU5C,GACnB,IAAI6C,EAAW7C,EAAM6C,SAAUJ,EAAUzC,EAAMyC,QAASK,EAAQ9I,EAAOgG,EAAO,CAAC,WAAY,YAC3F,OAAQC,wBAAcsC,GAActJ,EAAS,GAAI6J,EAAO,CAAEC,aAAcF,OAAWG,EAAY,GAAIH,SAAUA,IACzGA,EAAW,GAAK5C,wBAAc,SAAU,CAAEgD,QAAQ,EAAM/C,UAAU,EAAMzF,MAAO,KAC/EwF,wBAAcuC,GAAe,CAAEC,QAASA,MAS5CS,GAA4B,SAAUC,GAAU,OAAO,SAAUlJ,GACjE,IAAImJ,EAAiBC,MAAMC,KAAKrJ,EAAEyH,OAAOe,SACpCc,QAAO,SAAUC,GAAU,OAAOA,EAAOC,YACzClF,KAAI,SAAUmF,GAAK,OAAOA,EAAEjJ,SACjC0I,EAAOC,KAIPO,GAAS,SAAUC,GAAM,OAAO,WAChC,IAAIC,EAAK7K,SAAS8K,eAAeF,GAC7BC,IACAA,EAAGE,iBACHF,EAAGG,WAGPC,GAAiBnE,YAAOD,GAAPC,CAAepE,IAAuBA,EAAqBrB,EAAqB,CAAC,6OAA8O,CAAC,gPACjV6J,GAAW,SAAUrF,GACrB,IAAI+E,EAAK/E,EAAG+E,GACZ,OAAQ3D,wBAAcgE,GAAgB,CAAEjD,QAAS2C,GAAOC,GAAK7D,SAAS,GAAQ,yBAS9EoE,GAAQrE,YAAO,QAAPA,CAAgBnE,IAAuBA,EAAqBtB,EAAqB,CAAC,2HAA4H,CAAC,8HAgBvN+J,GAAYtE,YAAO,KAAPA,CAAalE,IAAuBA,EAAqBvB,EAAqB,CAAC,0DAA2D,CAAC,6DAQvJgK,GAAYvE,YAAO,QAAPA,CAAgBjE,IAAuBA,EAAqBxB,EAAqB,CAAC,OAAQ,qKAAsK,CAAC,OAAQ,uKAAwK+J,IAQ7bE,GAAYxE,YAAO,QAAPA,CAAgBhE,IAAuBA,EAAqBzB,EAAqB,CAAC,IAAK,CAAC,OAQpGkK,GAAWzE,YAAO,KAAPA,CAAa/D,IAAuBA,EAAqB1B,EAAqB,CAAC,gCAAiC,+DAAgE,6FAA8F,8FAA+F,CAAC,gCAAiC,+DAAgE,6FAA8F,gGAAiG+J,GAAWA,GAAWA,IAS/qBI,GAAgB,SAAU3F,GAC1B,IAAI4F,EAAO5F,EAAG4F,KAAMC,EAAU7F,EAAG6F,QACjC,OAAQzE,wBAAckE,GAAO,KACzBlE,wBAAcoE,GAAW,KACrBpE,wBAAcsE,GAAU,KAAMG,EAAQnG,KAAI,SAAUoG,EAAGrL,GAAK,OAAQ2G,wBAAcmE,GAAW,CAAEzB,IAAKgC,EAAI,IAAMrL,EAAGsL,GAAI,MAAqB,kBAAND,EAAiB,GAAKA,EAAEE,OAAO,GAAGC,cAAgBH,EAAEI,MAAM,GAAKJ,EAAE1G,OAAS0G,EAAEhC,UACpN1C,wBAAcqE,GAAW,KAAMG,EAAKlG,KAAI,SAAUyG,GAAK,OAAQ/E,wBAAcsE,GAAU,CAAE5B,IAAKsC,KAAKC,UAAUF,IAAMN,EAAQnG,KAAI,SAAUC,EAAGlF,GAAK,OAAQ2G,wBAAcmE,GAAW,CAAEzB,IAAKnE,EAAI,IAAMlF,GAAK0L,EAAe,kBAANxG,EAAiBA,EAAIA,EAAEmE,gBAG5OwC,GAAUrF,IAAOsF,IAAIpJ,IAAuBA,EAAqB3B,EAAqB,CAAC,8EAA+E,CAAC,iFACvKgL,GAAevF,IAAOsF,IAAInJ,IAAuBA,EAAqB5B,EAAqB,CAAC,iIAAkI,CAAC,oIAQ/NiL,GAAcxF,aAJA,SAAUjB,GACZA,EAAG7B,MAAe6B,EAAGZ,MAAjC,IAAwC+B,EAAQhG,EAAO6E,EAAI,CAAC,QAAS,UACrE,OAAQoB,wBAAc,QAAShH,EAAS,GAAI+G,EAAO,CAAEkB,KAAM,gBAE7CpB,CAAoB5D,IAAqBA,EAAmB7B,EAAqB,CAAC,4DAA6D,sFAAuF,oIAAqI,gBAAiB,QAAS,OAAQ,MAAO,CAAC,4DAA6D,sFAAuF,oIAAqI,gBAAiB,QAAS,OAAQ,SAAS,SAAUX,GAAK,OAAOA,EAAE6L,QAAW7L,EAAEsD,MAAQ,QAAU,OAAU,gBAAiB,SAAUtD,GAAK,OAAOA,EAAEsD,MAAQ,QAAWtD,EAAE6L,QAAU,OAAS,eAAiB,SAAU7L,GAAK,OAAOA,EAAEwG,SAAW,MAAQ,OAAQ,SAAUxG,GAAK,OAAOA,EAAEwG,SAAW,cAAgB,YAAc5C,GAAY,SAAU5D,GAAK,OAAOA,EAAEsD,MAAQO,EAAkB,MAM5jCiI,GAAO1F,aAJG,SAAUjB,GACNA,EAAG0G,QAAjB,IAA0BvF,EAAQhG,EAAO6E,EAAI,CAAC,YAC9C,OAAQoB,wBAAc,MAAOhH,EAAS,CAAEwM,QAAS,MAAOC,MAAO,6BAA8BhC,EAAG,IAAKiC,EAAG,KAAO3F,MAExGF,CAAgB3D,IAAqBA,EAAmB9B,EAAqB,CAAC,8LAA+L,MAAO,CAAC,8LAA+L,SAAS,SAAUX,GAAK,OAAOA,EAAE6L,QAAU,QAAU,UAMhhBK,GAAc9F,aAJA,SAAUjB,GACTA,EAAGqB,SAAkBrB,EAAG7B,MAAvC,IAA8CgD,EAAQhG,EAAO6E,EAAI,CAAC,WAAY,UAC9E,OAAQoB,wBAAc,QAAShH,EAAS,GAAI+G,MAE9BF,CAAoB1D,IAAqBA,EAAmB/B,EAAqB,CAAC,OAAQ,iBAAkB,gBAAiB,0CAA2C,CAAC,OAAQ,iBAAkB,gBAAiB,6CAA6C,SAAUX,GAAK,OAAOA,EAAEsD,MAAQ,4BAA8B,MAAO,SAAUtD,GAAK,OAAOA,EAAEwG,SAAW,MAAQ,OAAQ,SAAUxG,GAAK,OAAOA,EAAEwG,SAAW,cAAgB,aAC1b2F,GAAW,SAAU7F,GACrB,IAAIhD,EAAQgD,EAAMhD,MAAOiB,EAAQ+B,EAAM/B,MAAO6E,EAAQ9I,EAAOgG,EAAO,CAAC,QAAS,UAC9E,OAAQC,wBAAckF,GAAS,KAC3BlF,wBAAcoF,GAAc,KACxBpF,wBAAcqF,GAAarM,EAAS,CAAE+D,MAAOA,GAAS8F,IACtD7C,wBAAcuF,GAAM,CAAED,QAASzC,EAAMyC,QAASO,QAAS,aACnD7F,wBAAc,WAAY,CAAE8F,OAAQ,qBAC5C9H,GACIgC,wBAAc2F,GAAa,CAAE1F,SAAU4C,EAAM5C,SAAUlD,MAAOA,EAAOgJ,QAASlD,EAAMc,IAAM3F,KAIlGgI,GAAYnG,IAAOsF,IAAI/I,IAAuBA,EAAqBhC,EAAqB,CAAC,8EAA+E,CAAC,iFACzK6L,GAAiBpG,IAAOsF,IAAI9I,IAAuBA,EAAqBjC,EAAqB,CAAC,iIAAkI,CAAC,oIAQjO8L,GAAgBrG,aAJF,SAAUjB,GACZA,EAAG7B,MAAe6B,EAAGZ,MAAjC,IAAwC+B,EAAQhG,EAAO6E,EAAI,CAAC,QAAS,UACrE,OAAQoB,wBAAc,QAAShH,EAAS,GAAI+G,EAAO,CAAEkB,KAAM,aAE3CpB,CAAoBvD,IAAuBA,EAAqBlC,EAAqB,CAAC,4DAA6D,uFAAwF,oIAAqI,gBAAiB,QAAS,OAAQ,MAAO,CAAC,4DAA6D,uFAAwF,oIAAqI,gBAAiB,QAAS,OAAQ,SAAS,SAAUX,GAAK,OAAOA,EAAE6L,QAAW7L,EAAEsD,MAAQ,QAAU,OAAU,gBAAiB,SAAUtD,GAAK,OAAOA,EAAEsD,MAAQ,QAAWtD,EAAE6L,QAAU,OAAS,eAAiB,SAAU7L,GAAK,OAAOA,EAAEwG,SAAW,MAAQ,OAAQ,SAAUxG,GAAK,OAAOA,EAAEwG,SAAW,cAAgB,YAAc5C,GAAY,SAAU5D,GAAK,OAAOA,EAAEsD,MAAQO,EAAkB,MACpkC6I,GAAetG,IAAOsF,IAAI5I,IAAuBA,EAAqBnC,EAAqB,CAAC,kTAAmT,CAAC,qTAWhZgM,GAASvG,aAPG,SAAUjB,GACRA,EAAG0G,QAAjB,IAA0BvF,EAAQhG,EAAO6E,EAAI,CAAC,YAC9C,OAAQoB,wBAAcmG,GAAc,KAChCnG,wBAAc,MAAO,KACjBA,wBAAc,MAAOhH,EAAS,CAAE6M,QAAS,eAAiB9F,GACtDC,wBAAc,SAAU,CAAEqG,GAAI,KAAMC,GAAI,KAAMvB,EAAG,KAAMwB,OAAQ,QAASC,KAAM,OAAQC,YAAa,YAEtG5G,CAAkBrD,IAAuBA,EAAqBpC,EAAqB,CAAC,gBAAiB,MAAO,CAAC,gBAAiB,SAAS,SAAUX,GAAK,OAAOA,EAAE6L,QAAU,QAAU,UAM5LoB,GAAgB7G,aAJF,SAAUjB,GACTA,EAAGqB,SAAkBrB,EAAG7B,MAAvC,IAA8CgD,EAAQhG,EAAO6E,EAAI,CAAC,WAAY,UAC9E,OAAQoB,wBAAc,QAAShH,EAAS,GAAI+G,MAE5BF,CAAoBpD,IAAqBA,EAAmBrC,EAAqB,CAAC,OAAQ,iBAAkB,gBAAiB,0CAA2C,CAAC,OAAQ,iBAAkB,gBAAiB,6CAA6C,SAAUX,GAAK,OAAOA,EAAEsD,MAAQ,4BAA8B,MAAO,SAAUtD,GAAK,OAAOA,EAAEwG,SAAW,MAAQ,OAAQ,SAAUxG,GAAK,OAAOA,EAAEwG,SAAW,cAAgB,aAC5b0G,GAAQ,SAAU5G,GAClB,IAAIhD,EAAQgD,EAAMhD,MAAOiB,EAAQ+B,EAAM/B,MAAO6E,EAAQ9I,EAAOgG,EAAO,CAAC,QAAS,UAC9E,OAAQC,wBAAcgG,GAAW,CAAEY,KAAM,SACrC5G,wBAAciG,GAAgB,CAAEW,KAAM,SAClC5G,wBAAckG,GAAelN,EAAS,CAAE+D,MAAOA,EAAO8J,SAAU,GAAKhE,IACrE7C,wBAAcoG,GAAQ,CAAEd,QAASzC,EAAMyC,WAC3CtH,GACIgC,wBAAc0G,GAAe,CAAEzG,SAAU4C,EAAM5C,SAAUlD,MAAOA,EAAOgJ,QAASlD,EAAMc,IAAM3F,KC7jBlG+C,GAAU,SAAC+F,GAAD,OAAmB,SAAC9M,GAClCA,EAAE+M,iBACFC,MAAMF,KAGKG,GAAuB,kBAClC,gCACGpO,EAAS,UACV,gBAAC2H,GAAD,KAAQ,gBAACN,GAAD,KAAO,aACf,gBAAC0B,GAAD,YACM,gBAAC1B,GAAD,eADN,wDAC8E,gBAACA,GAAD,KAAO,YADrF,KAGA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,SAAnB,UAAkC,gBAACzD,GAAD,qBAClC,gBAAC0B,GAAD,2CACqC,gBAAC1B,GAAD,KAAO,YAD5C,aACwE,gBAACA,GAAD,eADxE,0BAEO,gBAACA,GAAD,0BAFP,yDAIA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,iBAAnB,iBACA,gBAAC/B,GAAD,YACM,gBAACN,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,wBAAxB,iBADN,4CAGA,gBAAC3G,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,YACjB,gBAACrC,GAAD,CAAME,KAAM,yFAAZ,aAIF,gBAAChB,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,mBAAnB,mBACA,gBAAC/B,GAAD,KACE,gBAAChC,GAAD,CACEmB,QAASA,GAAQ,oCADnB,8BAMF,gBAACP,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,kBAAnB,kBACA,gBAAC/B,GAAD,KACE,gBAAChC,GAAD,CACEE,SAAO,EACPiB,QAASA,GAAQ,mCAFnB,6BAOF,gBAACP,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,mBAAnB,mBACA,gBAAC/B,GAAD,KACE,gBAAChC,GAAD,CACEK,UAAQ,EACRc,QAASA,GAAQ,gEAFnB,uCAOF,gBAACa,GAAD,KACE,gBAAChC,GAAD,CACEK,UAAQ,EACRH,SAAO,EACPiB,QAASA,GAAQ,gEAHnB,wC,srBC7CN,IAAMqG,GAAcvH,YAAOD,GAAPC,CAAH,MAIXwH,GAAiBxH,YAAOD,GAAPC,CAAH,KACNnD,EAAOC,MAAMI,MAClBL,EAAOC,MAAMC,WACkB,EAA3BW,EAAQM,SAASC,QACE,EAAfP,EAAQQ,KACC,EAAfR,EAAQQ,KAA6B,EAAfR,EAAQQ,MASnCuJ,GAAiB,SAAC,GAAD,EAAE1K,WAAF,EAAc8C,MAAd,IAAwBK,EAAxB,8CAAqE,gBAACH,GAAWG,IAElGwH,GAA2B1H,YAAOyH,GAAPzH,CAAH,MACd,SAACpG,GAAD,OAAeA,EAAEmD,cACtB,SAACnD,GAAD,OAAeA,EAAEiG,QACc,EAA3BnC,EAAQM,SAASC,QACE,EAAfP,EAAQQ,KACC,EAAfR,EAAQQ,KAA6B,EAAfR,EAAQQ,MAGrCyJ,GAAoC3H,YAAOyH,GAAPzH,CAAH,MACvB,SAACpG,GAAD,OAAeA,EAAEmD,cACtB,SAACnD,GAAD,OAAeA,EAAEiG,QACc,EAA3BnC,EAAQM,SAASC,QACE,EAAfP,EAAQQ,KACC,EAAfR,EAAQQ,KAA6B,EAAfR,EAAQQ,KACvCT,GAGSmK,GAA+B,kBAC1C,gCACG5O,EAAS,mBACV,gBAAC2H,GAAD,wBACA,gBAACA,GAAD,CAAQmE,GAAI,MAAZ,YACA,gBAAC/C,GAAD,CAAW+C,GAAI,OACb,gBAACrD,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,UAAxB,gBAA+C,gBAACjH,GAAD,gBAA0B,2BACzE,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,eAAxB,cAAwD,2BACxD,gBAAC7F,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,UAAxB,SAA8C,2BAC9C,gBAAC7F,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,YAAxB,WAAkD,2BAClD,gBAAC7F,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,cAAxB,aAAsD,2BACtD,gBAAC7F,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,kBAAxB,iBAA8D,4BAEhE,gBAAC3G,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,SAAnB,gBAAwC,gBAACzD,GAAD,gBACxC,gBAAC0B,GAAD,uGACiG,gBAAC1B,GAAD,eADjG,KAIA,gBAACC,GAAD,qDACA,gBAACK,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,cAAnB,cACA,gBAAC/B,GAAD,2BACqB,gBAAC1B,GAAD,eADrB,0EAEc,gBAACA,GAAD,0BAFd,KAIA,gBAACC,GAAD,6HAIA,gBAACyB,GAAD,8DACwD,gBAAC1B,GAAD,cADxD,wEAIA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,SAAnB,SACA,gBAACnD,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,WAAnB,WACA,gBAAC/B,GAAD,mEAEK,gBAACN,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,+BAA+B,gBAACjH,GAAD,KAAO,qBAFnE,iFAIK,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,+BAA+B,gBAACjH,GAAD,KAAO,qBAJnE,qBAOA,gBAACC,GAAD,8WAkBA,gBAACK,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,aAAnB,aACA,gBAAC/B,GAAD,mDAC6C,gBAACN,GAAD,CAAMqD,GAAIuC,WAAUC,GAAK,gBAAgB,gBAACjH,GAAD,KAAO,WAD7F,KAIA,gBAAC0B,GAAD,gBACU,gBAACN,GAAD,CAAMqD,GAAIuC,WAAUC,GAAK,gBAAgB,gBAACjH,GAAD,KAAO,UAAhD,QAAqE,gBAACA,GAAD,KAAO,eADtF,wDAIA,gBAACM,GAAD,CAAQmE,GAAG,MAAX,qBACA,gBAAC/C,GAAD,sHAGA,gBAACzB,GAAD,0GAQA,gBAACK,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,iBAAnB,iBACA,gBAAC/B,GAAD,cACQ,gBAACN,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,+BAA+B,gBAACjH,GAAD,KAAO,qBADtE,4EAIA,gBAAC0B,GAAD,4FACsF,gBAAC1B,GAAD,2BADtF,eAIA,gBAACC,GAAD,oQAUA,gBAACA,GAAD,mJAOA,gBAACyB,GAAD,KACE,gBAACwF,GAAD,CACErG,QAAS,kBAAYiG,MAAM,kCAD7B,iBAMF,gBAACpF,GAAD,uGACiG,gBAAC1B,GAAD,2BADjG,eAEuC,gBAACA,GAAD,KAAOxD,EAAOC,MAAMI,OAF3D,sBAGM,gBAACmD,GAAD,KAAOxD,EAAOU,KAAKL,OAHzB,+CAIMyC,KAAgB,OAAS,QAJ/B,2DAKQ,gBAACU,GAAD,KAAOT,GAAmB,UALlC,KAOA,gBAACe,GAAD,CAAQmE,GAAG,MAAX,kCACA,gBAAC/C,GAAD,yKAEqD,gBAAC1B,GAAD,eAFrD,QAE6E,gBAACA,GAAD,gBAF7E,aAIA,gBAACC,GAAD,icAiBA,gBAACA,GAAD,uKAOA,gBAACyB,GAAD,KACE,gBAACyF,GAAD,CACEtG,QAAS,kBAAYiG,MAAM,sCAD7B,2BAMF,gBAACpF,GAAD,qDAC+C,gCAD/C,yLAKA,gBAACA,GAAD,mDAC6C,gBAAC1B,GAAD,oDAD7C,iEAIA,gBAACC,GAAD,0sBAyB+C,EAAf5C,EAAQQ,KAzBxC,WA2BA,gBAACoC,GAAD,qTASA,gBAACyB,GAAD,KACE,gBAAC2F,GAAD,CACE3K,WAAY6C,GAAmB,SAC/BC,MAAOD,GAAmB,cAC1BsB,QAAS,kBAAYiG,MAAM,iDAH7B,mBAQF,gBAACpF,GAAD,sFACgF,gBAAC1B,GAAD,mBADhF,QAC4G,gBAACA,GAAD,wBAD5G,sEAIA,gBAACC,GAAD,6tBAyB+C,EAAf5C,EAAQQ,KAzBxC,iCA4BA,gBAACoC,GAAD,2WAWA,gBAACyB,GAAD,KACE,gBAAC4F,GAAD,CACE5K,WAAY6C,GAAmB,SAC/BC,MAAOD,GAAmB,cAC1BsB,QAAS,kBAAYiG,MAAM,8DAH7B,sCC5SOU,GAA6B,kBACxC,gCACG7O,EAAS,WACV,gBAAC2H,GAAD,gBACA,gBAACoB,GAAD,CAAW+C,GAAI,OACb,gBAACrD,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,iBAAiB,gBAACjH,GAAD,KAAO,mBAAgC,SAChF,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,cAAxB,aAAuD,SACvD,gBAAC7F,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,iBAAiB,gBAACjH,GAAD,KAAO,oBAElD,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,gBAAe,gBAACzD,GAAD,KAAO,mBACzC,gBAAC0B,GAAD,oEAC8D,gBAAC1B,GAAD,qBAD9D,qKAGuC,gBAACA,GAAD,kBAHvC,sEAMA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,aAAnB,aACA,gBAAC/B,GAAD,YACM,gBAAC1B,GAAD,qBADN,mBAC+C,gBAACA,GAAD,4CAD/C,8IAKA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,gBAAe,gBAACzD,GAAD,KAAO,mBACzC,gBAAC0B,GAAD,YACM,gBAAC1B,GAAD,qBADN,oCACgE,gBAACA,GAAD,KAAO,UADvE,kBACsG,iEADtG,wFAKA,gBAAC0B,GAAD,qBACe,gBAAC1B,GAAD,qBADf,gFAEI,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,gBAAgB,gBAACjH,GAAD,cAF5C,kGAGuD,gBAACA,GAAD,qBAHvD,0BCvBSyH,GAAwB,kBACnC,gCACG9O,EAAS,WACV,gBAAC2H,GAAD,gBACA,gBAACoB,GAAD,sBACgB,gBAACN,GAAD,CAAME,KAAK,6CAAX,eADhB,qEAE2C,gBAACF,GAAD,CAAME,KAAK,6CAAX,kBAF3C,kCAG8C,4FAH9C,KAMA,gBAAChB,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,iBAAgB,gBAACzD,GAAD,uBACnC,gBAACC,GAAD,KAAY,2CACZ,gBAACyB,GAAD,6FACuF,gBAAC1B,GAAD,cADvF,aAGA,gBAACC,GAAD,KACG,0GAEH,gBAACyB,GAAD,2BACsBlD,GAAc,4BAA8B,YAAc,WADhF,iBAGA,gBAAC8B,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,iBAAgB,gBAACzD,GAAD,uBACnC,gBAACC,GAAD,wGAGA,gBAACyB,GAAD,uHAGA,gBAACzB,GAAD,KACG,gGAEH,gBAACyB,GAAD,wBJoF+ClD,GAAc,eAAiBnB,EAAQC,WInFrD,MJmF8E,OInFtE,WAAa,QADtD,SACqED,EAAQC,WAAWE,GADxF,OAGA,gBAAC8C,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,eAAc,gBAACzD,GAAD,qBACjC,gBAACC,GAAD,KAAY,4BACZ,gBAACyB,GAAD,2GAGA,gBAACzB,GAAD,KACG,+DAEH,gBAACyB,GAAD,2BACsBpC,KAAgB,OAAS,QAD/C,UAGA,gBAACgB,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,sBAAqB,gBAACzD,GAAD,4BACxC,gBAACC,GAAD,+JAIA,gBAACyB,GAAD,8HAIA,gBAACzB,GAAD,iRAOA,gBAACyB,GAAD,CAAWgG,MAAO,CAAClI,MAAOD,GAAmB,YAA7C,qBACoB,6BAAKA,GAAmB,UAAxB,KADpB,yDAEK,yBAAIA,GAAmB,eAF5B,qCCnESoI,GAAqB,kBAChC,gCACGhP,IACD,gBAAC2H,GAAD,cACA,gBAACoB,GAAD,KACE,gBAACN,GAAD,CAAME,KAAM,qCAAZ,SADF,4EAEwB,gBAACF,GAAD,CAAME,KAAM,+BAAZ,oBAFxB,KAIA,gBAACI,GAAD,8EACwE,gBAAC1B,GAAD,0BADxE,O,ioBCIJ,IAAM4H,GAAqBjI,YAAO+B,GAAP/B,CAAH,MAUlBkI,GAAiBlI,YAAOiB,GAAPjB,CAAH,MAgBdmI,GAAwC,CAC5C,CAAChK,MAAO,YAAaxD,MAAO,QAC5B,CAACwD,MAAO,QAASxD,MAAO,SACxB,CAACwD,MAAO,aAAcxD,MAAO,cAC7B,CAACwD,MAAO,UAAWxD,MAAO,UAC1B,CAACwD,MAAO,wBAAsBxD,MAAO,cACrC,CAACwD,MAAO,sBAAwBxD,MAAO,mBACvC,CAACwD,MAAO,eAAaxD,MAAO,aAC5B,CAACwD,MAAO,aAAcxD,MAAO,aAC7B,CAACwD,MAAO,cAAexD,MAAO,eAC9B,CAACwD,MAAO,iBAAkBxD,MAAO,mBAGtByN,GAAsB,WAAO,IAAD,EACCC,aADD,oBAChCC,EADgC,KAClBC,EADkB,OAELF,aAFK,oBAEhCG,EAFgC,KAErBC,EAFqB,OAGHJ,aAHG,oBAGhCK,EAHgC,KAGpBC,EAHoB,OAIfN,aAAjBO,EAJgC,uBAKGP,aALH,oBAKhCQ,EALgC,KAKjBC,EALiB,OAMDT,aANC,oBAMhCU,EANgC,KAMnBC,EANmB,OAOGX,aAPH,oBAOhCY,EAPgC,KAOjBC,EAPiB,OASWb,aATX,oBAShCc,EATgC,KASbC,EATa,OAUqBf,aAVrB,oBAUhCgB,EAVgC,KAURC,EAVQ,OAcnCjB,aAdmC,oBAYrCkB,EAZqC,KAarCC,EAbqC,OAgBSnB,aAhBT,oBAgBhCoB,EAhBgC,KAgBdC,EAhBc,OAiBmBrB,aAjBnB,oBAiBhCsB,EAjBgC,KAiBTC,EAjBS,OAkByBvB,aAlBzB,oBAkBhCwB,EAlBgC,KAkBNC,EAlBM,OAoBTzB,YAAe,GApBN,qBAoBhC5C,GApBgC,MAoBvBsE,GApBuB,SAqBC1B,YAAe,GArBhB,sBAqBhC2B,GArBgC,MAqBlBC,GArBkB,SAuBH5B,aAvBG,sBAuBhC6B,GAvBgC,MAuBpBC,GAvBoB,MA2BvC,OACE,gCACGnR,EAAS,SACV,gBAAC2H,GAAD,CAAQmD,GAAG,SAAX,UACA,gBAAC/B,GAAD,CAAW+C,GAAI,OACb,gBAACrD,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,UAAU,gBAACjH,GAAD,KAAO,YAAyB,SAClE,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,eAAe,gBAACjH,GAAD,oBAA+B,SACtE,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,WAAW,gBAACjH,GAAD,KAAO,aAA0B,SACpE,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,gBAAgB,gBAACjH,GAAD,qBAAgC,SACxE,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,aAAa,gBAACjH,GAAD,KAAO,eAA4B,SACxE,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,kBAAkB,gBAACjH,GAAD,uBAAkC,SAC5E,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,UAAU,gBAACjH,GAAD,KAAO,YAAyB,SAClE,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,eAAe,gBAACjH,GAAD,oBAA+B,SACtE,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,kBAAxB,iBAA+D,SAC/D,gBAAC7F,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,aAAxB,aAEF,gBAAC3G,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,SAAQ,gBAACzD,GAAD,KAAO,YAClC,gBAAC0B,GAAD,YACM,gBAAC1B,GAAD,cADN,iDACsE,gBAACA,GAAD,KAAO,WAD7E,aAGA,gBAAC0B,GAAD,kBACY,gBAAC1B,GAAD,cADZ,mCAEI,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,eAAe,gBAACjH,GAAD,KAAO,YAFlD,KAIA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,SAAnB,UAAkC,gBAACzD,GAAD,oBAClC,gBAAC0B,GAAD,KACE,gBAAC1B,GAAD,cADF,mDACoE,gBAACA,GAAD,KAAO,WAD3E,mBAEO,gBAACA,GAAD,wBAFP,8BAIA,gBAAC0B,GAAD,6BAEM,gBAACN,GAAD,CAAME,KAAM,8DAA8D,gBAACtB,GAAD,WAA1E,SAFN,gBAGW,gBAACA,GAAD,KAAO,cAHlB,kBAGqD,gBAACA,GAAD,KAAO,WAH5D,qBAIM,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,aAAxB,YAJN,WAMA,gBAAC3G,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,UAAS,gBAACzD,GAAD,KAAO,aACnC,gBAAC0B,GAAD,KACE,gBAAC1B,GAAD,KAAO,YADT,6BACqD,gBAACA,GAAD,KAAO,YAD5D,iDAEe,gBAACA,GAAD,KAAO,YAFtB,qDAGM,gBAACA,GAAD,gBAHN,UAKA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,eAAnB,UAAwC,gBAACzD,GAAD,qBACxC,gBAAC0B,GAAD,gEAC0D,gBAAC1B,GAAD,KAAO,YADjE,8BAEU,gBAACA,GAAD,KAAO,YAFjB,+BAE+D,gBAACA,GAAD,gBAF/D,mCAKA,gBAACC,GAAD,KAAY,wDACZ,gBAACyB,GAAD,KACE,gBAAC1B,GAAD,KAAO,YADT,2BACmD,gBAACA,GAAD,wBADnD,yDAEsB,gBAACA,GAAD,uBAFtB,4CAKA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,YAAW,gBAACzD,GAAD,KAAO,eACrC,gBAAC0B,GAAD,KACE,gBAAC1B,GAAD,KAAO,cADT,6BACuD,gBAACA,GAAD,KAAO,2BAD9D,KAGA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,eAAnB,UAAwC,gBAACzD,GAAD,uBACxC,gBAAC0B,GAAD,KACE,gBAAC1B,GAAD,KAAO,cADT,6DAEO,gBAACA,GAAD,KAAO,2BAFd,iCAE+E,gBAACA,GAAD,uBAF/E,4CAGuC,gBAACA,GAAD,wBAHvC,8BAKA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,SAAQ,gBAACzD,GAAD,KAAO,YAClC,gBAAC0B,GAAD,KACE,gBAAC1B,GAAD,KAAO,WADT,6BACoD,gBAACA,GAAD,KAAO,wBAD3D,KAGA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,eAAnB,UAAwC,gBAACzD,GAAD,oBACxC,gBAAC0B,GAAD,uBACiB,gBAAC1B,GAAD,KAAO,cADxB,KAC8C,gBAACA,GAAD,KAAO,WADrD,6DAEoB,gBAACA,GAAD,KAAO,2BAF3B,iCAGQ,gBAACA,GAAD,uBAHR,gDAIM,gBAACA,GAAD,wBAJN,6CAMA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,iBAAnB,iBACA,gBAAC/B,GAAD,YACM,gBAACN,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,wBAAxB,iBADN,4CAGA,gBAACvF,GAAD,iDAGA,gBAACzB,GAAD,gyBAkCA,gBAAC2H,GAAD,KACE,gBAAC5G,GAAD,CACE6E,QAAS,eADX,2BAEiC,OAAX6C,QAAW,IAAXA,OAAA,EAAAA,EAAahQ,MAAM,WAAY,eAAM,KAE3D,gBAACmP,GAAD,CACEpE,GAAI,cACJnJ,MAAOoO,EACPqB,SA7HkB,SAACjQ,GAAD,OAAkD6O,EAAe7O,EAAE2G,cAAcnG,WAgIvG,gBAACgG,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,YACjB,gBAACrC,GAAD,CAAME,KAAM,yFAAZ,aAIF,gBAAClB,GAAD,CAAMC,QAAS,GACb,gBAACH,GAAD,KACE,gBAACI,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,kBAAiB,gBAACzD,GAAD,KAAO,aAE7C,gBAACE,GAAD,CAAUC,KAAM,GACd,gBAACa,GAAD,CAAO6E,QAAS,iBAAhB,iBACA,gBAACjF,GAAD,CACEtG,MAAO2N,EACPxE,GAAI,gBACJ1C,KAAM,SACNiJ,UAAW,UACXD,SAAU,SAACjQ,GAAD,OAAaoO,EAAgB+B,SAASnQ,EAAE2G,cAAcnG,OAAS,IAAK,SAGlF,gBAAC4F,GAAD,CAAUC,KAAM,GACd,gBAACa,GAAD,CAAO6E,QAAS,cAAhB,oBACA,gBAACjF,GAAD,CACE6C,GAAI,aACJnJ,MAAO6N,EACP4B,SAAU,SAACjQ,GAAD,OAAasO,EAAatO,EAAE2G,cAAcnG,WAGxD,gBAAC4F,GAAD,CAAUC,KAAM,GACd,gBAACa,GAAD,CAAOnE,OAAK,EAACgJ,QAAS,eAAtB,oBACA,gBAACjF,GAAD,CACE6C,GAAI,cACJnJ,MAAO+N,EACPxL,OAAK,EACLkN,SAAU,SAACjQ,GAAD,OAAawO,EAAcxO,EAAE2G,cAAcnG,WAGzD,gBAAC4F,GAAD,CAAUC,KAAM,GACd,gBAACa,GAAD,CAAOjB,UAAQ,EAAC8F,QAAS,kBAAzB,kBACA,gBAACjF,GAAD,CACE6C,GAAI,iBACJnJ,MAAOiO,EACPxI,UAAQ,KAGZ,gBAACG,GAAD,CAAUC,KAAM,GACd,gBAACa,GAAD,CAAOC,UAAQ,EAAC4E,QAAS,kBAAzB,SACA,gBAACjF,GAAD,CACE6C,GAAI,iBACJnJ,MAAOkO,EACPvH,UAAQ,EACR8I,SAAU,SAACjQ,GAAD,OAAa2O,EAAiB3O,EAAE2G,cAAcnG,WAG5D,gBAAC4F,GAAD,KACE,gBAACc,GAAD,CAAO6E,QAAS,kBAAhB,cAA6C,gBAAC7F,GAAD,KAAO,oBACpD,gBAACY,GAAD,CACE6D,GAAI,WACJhB,GAAI,iBACJnJ,MAAOsO,EACPsB,KAAM,EACNH,SAAU,SAACjQ,GAAD,OAAqD+O,EAAiB/O,EAAE2G,cAAcnG,WAGpG,gBAAC4F,GAAD,KACE,gBAACI,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,mBAAkB,gBAACzD,GAAD,KAAO,cAE9C,gBAACE,GAAD,CAAUC,KAAM,GACd,gBAACa,GAAD,CAAO6E,QAAS,iBAAhB,iBACA,gBAAC,GAAD,CACEpC,GAAI,gBACJnJ,MAAOwO,EACPiB,SAAU,SAACjQ,GAAD,OAAaiP,EAAqBjP,EAAE2G,cAAcnG,QAC5DgI,QAASwF,MAGb,gBAAC5H,GAAD,CAAUC,KAAM,GACd,gBAACa,GAAD,CAAOnE,OAAK,EAACgJ,QAAS,uBAAtB,4BACA,gBAAC,GAAD,CACEhJ,OAAK,EACL4G,GAAI,sBACJnJ,MAAO0O,EACPe,SAAU,SAACjQ,GAAD,OAAamP,EAA0BnP,EAAE2G,cAAcnG,QACjEgI,QAASwF,MAGb,gBAAC5H,GAAD,CAAUC,KAAM,GACd,gBAACa,GAAD,CAAOC,UAAQ,EAAC4E,QAAS,iBAAzB,iBACA,gBAAC,GAAD,CACEpC,GAAI,gBACJnJ,MAAO4O,EACPa,SAAU,SAACjQ,GAAD,OAAaqP,EAA6BrP,EAAE2G,cAAcnG,QACpEgI,QAASwF,GACT7G,UAAQ,KAGZ,gBAACf,GAAD,CAAUC,KAAM,GACd,gBAACa,GAAD,CAAOjB,UAAQ,EAAC8F,QAAS,mBAAzB,0BACA,gBAAC,GAAD,CACEpC,GAAI,kBACJ1D,UAAQ,EACRuC,QAASwF,MAGb,gBAAC5H,GAAD,CAAUC,KAAM,GACd,gBAACa,GAAD,CAAO6E,QAAS,mBAAhB,mBACA,gBAAC,GAAD,CACEpC,GAAI,kBACJf,UAAQ,EACRqH,SAAUhH,GAA0BsG,GACpC/G,QAASwF,GACT3H,KAAM,EACN7F,MAAO8O,KAGX,gBAAClJ,GAAD,CAAUC,KAAM,GACd,gBAACa,GAAD,CAAOnE,OAAK,EAACgJ,QAAS,yBAAtB,8BACA,gBAAC,GAAD,CACEhJ,OAAK,EACL4G,GAAI,wBACJf,UAAQ,EACRqH,SAAUhH,GAA0BwG,GACpCjH,QAASwF,GACT3H,KAAM,EACN7F,MAAOgP,KAGX,gBAACpJ,GAAD,CAAUC,KAAM,GACd,gBAACa,GAAD,CAAOC,UAAQ,EAAC4E,QAAS,4BAAzB,mBACA,gBAAC,GAAD,CACEpC,GAAI,2BACJf,UAAQ,EACRqH,SAAUhH,GAA0B0G,GACpCnH,QAASwF,GACT7G,UAAQ,EACRd,KAAM,EACN7F,MAAOkP,KAGX,gBAACtJ,GAAD,CAAUC,KAAM,GACd,gBAACa,GAAD,CAAOjB,UAAQ,EAAC8F,QAAS,4BAAzB,4BACA,gBAAC,GAAD,CACEpC,GAAI,2BACJf,UAAQ,EACRJ,QAASwF,GACT/H,UAAQ,EACRI,KAAM,KAGV,gBAACD,GAAD,CAAUC,KAAM,GACd,gBAACG,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,qBAAoB,gBAACzD,GAAD,KAAO,eAC9C,gBAAC,GAAD,CACEoF,QAASA,GACT2E,SAAU,SAACjQ,GAAD,OAAa4P,GAAW5P,EAAEyH,OAAO6D,UAC3C3B,GAAI,iBACJ3F,MAAO,aAET,gBAAC,GAAD,CACEsH,QAASuE,GACTI,SAAU,SAACjQ,GAAD,OAAa8P,GAAgB9P,EAAEyH,OAAO6D,UAChD3B,GAAI,iBACJ5G,OAAK,EACLiB,MAAO,wBAET,gBAAC,GAAD,CACEsH,SAAS,EACT3B,GAAI,oBACJ1D,UAAQ,EACRjC,MAAO,sBAET,gBAAC,GAAD,CACEsH,SAAS,EACT3B,GAAI,4BACJ1D,UAAQ,EACRjC,MAAO,iCAGX,gBAACoC,GAAD,CAAUC,KAAM,GACd,gBAACG,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,kBAAiB,gBAACzD,GAAD,KAAO,YAC3C,wBAAM0G,KAAM,cACV,gBAAC,GAAD,CACEtB,QAAwB,aAAfyE,GACTE,SAAU,SAACjQ,GAAD,OAAagQ,GAAchQ,EAAEyH,OAAOjH,QAC9CmJ,GAAI,cACJ3F,MAAO,eACPqM,KAAM,QACN7P,MAAO,aAET,gBAAC,GAAD,CACE8K,QAAwB,UAAfyE,GACTE,SAAU,SAACjQ,GAAD,OAAagQ,GAAchQ,EAAEyH,OAAOjH,QAC9CmJ,GAAI,cACJ5G,OAAK,EACLiB,MAAO,0BACPqM,KAAM,QACN7P,MAAO,UAET,gBAAC,GAAD,CACE8K,QAAwB,aAAfyE,GACTE,SAAU,SAACjQ,GAAD,OAAagQ,GAAchQ,EAAEyH,OAAOjH,QAC9CyF,UAAQ,EACR0D,GAAI,iBACJ3F,MAAO,wBACPqM,KAAM,QACN7P,MAAO,kB,oLCtYrB,IAIM8P,GAAgBzK,aAJG,SAAC,GAAD,EAAEjD,WAAF,EAAc8C,MAAd,EAAqB6K,OAArB,IAAgCxK,EAAhC,uDACvB,sBAASA,KAGWF,CAAH,MAEC,SAACpG,GAAD,OAAeA,EAAEiG,SAC1B,SAACjG,GAAD,OAA4B,IAAbA,EAAE8Q,OAAmB,IAAM,uBACvC,SAAC9Q,GAAD,OAAeA,EAAEmD,YAAc,6BAIhC4N,GAAuB,WAAO,IAAD,EACFtC,WAAuB,GADrB,oBACjCuC,EADiC,KACpBC,EADoB,OAENxC,WAA6B,GAFvB,oBAEjCyC,EAFiC,KAEtBC,EAFsB,OAGN1C,WAA6B,GAHvB,oBAGjC2C,EAHiC,KAGtBC,EAHsB,OAIN5C,WAA6B,IAJvB,oBAIjC6C,EAJiC,KAItBC,EAJsB,KAMlCC,EAAmB,SACvB/H,GADuB,OAEpB,SAAClJ,GACJ,IAAMkR,EAAWf,SAASnQ,EAAE2G,cAAcnG,MAAO,IAC7C0Q,EAAW,GAAKA,GAAY,IAC9BhI,EAAOgI,KAIX,OACE,gCACGrS,EAAS,qBACV,gBAAC2H,GAAD,0BACA,gBAACoB,GAAD,KACE,gBAACN,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,SAAS,gBAACjH,GAAD,KAAO,WAAwB,SAChE,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,aAAa,gBAACjH,GAAD,KAAO,eAA4B,SACxE,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,SAAS,gBAACjH,GAAD,KAAO,WAAwB,SAChE,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,aAAa,gBAACjH,GAAD,KAAO,eAA4B,SACxE,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,oBAAoB,gBAACjH,GAAD,KAAO,sBAAmC,SACtF,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,sBAAxB,qBAAuE,SACvE,gBAAC7F,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,kBAAxB,iBAA+D,SAC/D,gBAAC7F,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,aAAxB,aAEF,gBAAC3G,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,QAAO,gBAACzD,GAAD,KAAO,WACjC,gBAAC0B,GAAD,YACM,gBAAC1B,GAAD,aADN,8CACkE,gBAACA,GAAD,KAAO,UADzE,yCAEc,gBAACoB,GAAD,CAAME,KAAM,8DAA8D,gBAACtB,GAAD,WAA1E,SAFd,+DAKA,gBAAC0B,GAAD,KACE,gBAAC1B,GAAD,aADF,qBACsC3C,EAAQU,MAAMC,KADpD,oDAGA,gBAAC0D,GAAD,6DACuD,gBAAC1B,GAAD,aADvD,KAGA,gBAACM,GAAD,CAAQmE,GAAG,MAAX,UAAuB,gBAACzE,GAAD,mBACvB,gBAAC0B,GAAD,KACE,gBAAC1B,GAAD,aADF,+DAC+E,gBAACA,GAAD,KAAO,UADtF,aAGA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,YAAW,gBAACzD,GAAD,KAAO,eACrC,gBAAC0B,GAAD,cACQ,gBAAC1B,GAAD,iBADR,2GAEyB,gBAACA,GAAD,iBAFzB,kIAG8D,gBAACA,GAAD,WAH9D,UAKA,gBAAC0B,GAAD,YACM,gBAAC1B,GAAD,iBADN,mHAE8B,gBAACA,GAAD,iBAF9B,2CAE2F,gBAACA,GAAD,YAF3F,0BAKA,gBAACM,GAAD,CAAQmE,GAAG,MAAX,UAAuB,gBAACzE,GAAD,uBACvB,gBAAC0B,GAAD,KACE,gBAAC1B,GAAD,iBADF,2BAC+C,gBAACA,GAAD,mBAD/C,6CAEM,gBAACA,GAAD,iBAFN,iBAIA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,QAAO,gBAACzD,GAAD,KAAO,WACjC,gBAAC0B,GAAD,gBACU,gBAAC1B,GAAD,aADV,iDACyE,gBAACA,GAAD,iBADzE,wDAIA,gBAACM,GAAD,CAAQmE,GAAG,MAAX,UAAuB,gBAACzE,GAAD,mBACvB,gBAAC0B,GAAD,0BACoB,gBAAC1B,GAAD,aADpB,qBACuD,gBAACA,GAAD,yBADvD,qFAEqD,gBAACA,GAAD,iBAFrD,MAIA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,YAAW,gBAACzD,GAAD,KAAO,eACrC,gBAAC0B,GAAD,yBACmB,gBAAC1B,GAAD,aADnB,gBACiD,gBAACA,GAAD,iBADjD,KAGA,gBAACM,GAAD,CAAQmE,GAAG,MAAX,UAAuB,gBAACzE,GAAD,uBACvB,gBAAC0B,GAAD,0BACoB,gBAAC1B,GAAD,iBADpB,qBAC2D,gBAACA,GAAD,gEAD3D,SAEsB,gBAACA,GAAD,aAFtB,sCAE0E,gBAACA,GAAD,iBAF1E,oCAGmB,gBAACA,GAAD,WAHnB,KAKA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,qBAAnB,wBAA4D,gBAACzD,GAAD,iBAA5D,KACA,gBAAC0B,GAAD,4BACsB,gBAAC1B,GAAD,WADtB,gBACmD3C,EAAQC,WAAWC,GADtE,YACkF,gBAACyC,GAAD,aADlF,4BAEkB,gBAACA,GAAD,iBAFlB,qBAIA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,mBAAkB,gBAACzD,GAAD,KAAO,sBAC5C,gBAAC0B,GAAD,sBACgB,gBAAC1B,GAAD,wBADhB,6JAGU,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,gBAAgB,gBAACjH,GAAD,KAAO,YAHzD,uDAMA,gBAACM,GAAD,CAAQmE,GAAG,MAAX,UAAuB,gBAACzE,GAAD,8BACvB,gBAAC0B,GAAD,wDACkD,gBAAC1B,GAAD,KAAO,SADzD,KAC0E,gBAACA,GAAD,wBAD1E,iCAIA,gBAACC,GAAD,6KAKA,gBAACK,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,iBAAnB,iBACA,gBAAC/B,GAAD,YACM,gBAACN,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,wBAAxB,iBADN,4CAGA,gBAAC3G,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,YACjB,gBAACrC,GAAD,CAAME,KAAM,0FAAZ,aAIF,gBAAChB,GAAD,CAAQmE,GAAG,MAAK,gBAACzE,GAAD,cAChB,gBAAC0B,GAAD,yFACmF,gBAAC1B,GAAD,aADnF,4BAEsB,gBAACA,GAAD,iBAFtB,sBAE8D,gBAACA,GAAD,aAF9D,MAEkF,gBAACA,GAAD,gBAFlF,aAGM,gBAACA,GAAD,iBAHN,MAG8B,gBAACA,GAAD,aAH9B,sHAMA,gBAACoK,GAAD,CAAe5K,MAAM,sBAAsB9C,WAAW,qBAAqB2N,QAAQ,GACjF,gBAACjK,GAAD,CAAMC,QAASkK,GACb,gBAACrK,GAAD,KACE,gBAACkK,GAAD,CAAe5K,MAAM,cACnB,gBAACwB,GAAD,CAAO6E,QAAS,gBAAhB,gBACA,gBAACjF,GAAD,CACE6C,GAAI,eACJuG,UAAW,UACXiB,IAAK,EACLlB,SAAU,SAACjQ,GAAD,OAAa0Q,EAAeP,SAASnQ,EAAE2G,cAAcnG,OAAS,IAAK,MAC7EyG,KAAM,SACNzG,MAAOiQ,MAIb,gBAACrK,GAAD,CAAUC,KAAMsK,GACd,gBAACL,GAAD,CAAe5K,MAAM,eACnB,gBAACwB,GAAD,CAAO6E,QAAS,eAAhB,yBACA,gBAACjF,GAAD,CACE6C,GAAI,cACJuG,UAAW,UACXD,SAAUgB,EAAiBL,GAC3B3J,KAAM,SACNzG,MAAOmQ,MAIb,gBAACvK,GAAD,CAAUC,KAAMwK,GACd,gBAACP,GAAD,CAAe5K,MAAM,OACnB,gBAACwB,GAAD,CAAO6E,QAAS,eAAhB,uBACA,gBAACjF,GAAD,CACE6C,GAAI,cACJuG,UAAW,UACXD,SAAUgB,EAAiBH,GAC3B7J,KAAM,SACNzG,MAAOqQ,MAIb,gBAACzK,GAAD,CAAUC,KAAM0K,GACd,gBAACT,GAAD,CAAe5K,MAAM,UACnB,gBAACwB,GAAD,CAAO6E,QAAS,eAAhB,0BACA,gBAACjF,GAAD,CACE6C,GAAI,cACJuG,UAAW,UACXD,SAAUgB,EAAiBD,GAC3B/J,KAAM,SACNzG,MAAOuQ,QAMjB,gBAACvK,GAAD,CAAQmE,GAAG,MAAK,gBAACzE,GAAD,yBAChB,gBAAC,GAAD,CAAiB+B,UAAW,cAC1B,uBACE2F,MAAO,CACLhL,WAAY,SACZwO,aAAc,EACd1L,MAAO,QACP2L,QAAS,GACTC,SAAU,WACVrN,MAAO,MAPX,+CAWM,gBAACiC,GAAD,CAAM0H,MAAO,CAAClI,MAAO,2BAArB,mBAXN,sBAYE,uBACEkI,MAAO,CACL2D,OAAQ,GACRC,WAAY,OACZF,SAAU,WACVG,MAAO,KALX,WAYJ,2BACA,gBAAC,GAAD,CAAiBxJ,UAAW,WAAYC,UAAW,IACjD,uBACE0F,MAAO,CACLhL,WAAY,aACZwO,aAAc,EACd1L,MAAO,QACP2L,QAAS,GACTC,SAAU,WACVI,OAAQ,MAPZ,gDAWM,gBAACxL,GAAD,CAAM0H,MAAO,CAAClI,MAAO,2BAArB,mBAXN,qBAYE,uBACEkI,MAAO,CACL2D,OAAQ,GACRC,WAAY,OACZF,SAAU,WACVG,MAAO,KALX,a,SC9OGE,GAAqB,kBAChC,gCACG9S,EAAS,QACV,gBAAC2H,GAAD,CAAQmD,GAAI,QAAQ,gBAACzD,GAAD,KAAO,WAC3B,gBAAC0B,GAAD,CAAW+C,GAAI,OACb,gBAACrD,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,aAAxB,8BAAuE,SACvE,gBAAC7F,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,WAAxB,UAAiD,SACjD,gBAAC7F,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,UAAxB,SAA+C,SAC/C,gBAAC7F,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,kBAAxB,iBAA+D,SAC/D,gBAAC7F,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,aAAxB,aAEF,gBAACvF,GAAD,YACM,gBAAC1B,GAAD,aADN,wDAC4E,gBAACA,GAAD,KAAO,OADnF,aAGA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,YAAnB,8BACA,gBAAC/B,GAAD,sBACgB,gBAAC1B,GAAD,aADhB,iBAC+C,gBAACA,GAAD,gBAD/C,2GAE2D,SAF3D,WAIA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,UAAnB,gBACA,gBAAC/B,GAAD,gBACU,gBAACN,GAAD,CAAME,KAAM,8DAA8D,gBAACtB,GAAD,WAA1E,SADV,qDAIA,gBAACC,GAAD,KACG,qDAEH,gBAACK,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,SAAnB,UAAkC,gBAACzD,GAAD,mBAClC,gBAAC0B,GAAD,KACE,gBAAC1B,GAAD,aADF,yEAEM,gBAACoB,GAAD,CAAME,KAAM,8DAA8D,gBAACtB,GAAD,WAA1E,SAFN,+DAG0D,gBAACA,GAAD,aAH1D,iHAIwE,gBAACA,GAAD,mBAJxE,6BAKc,gBAACA,GAAD,KAAO,OALrB,KAOA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,iBAAnB,iBACA,gBAAC/B,GAAD,YACM,gBAACN,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,wBAAxB,iBADN,4CAGA,gBAAC3G,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,YACjB,gBAACrC,GAAD,CAAME,KAAM,uFAAZ,aAEF,gBAACI,GAAD,KACE,gBAACN,GAAD,CAAME,KAAM,WAAZ,sBADF,uBAGA,gBAACI,GAAD,KACE,gBAACN,GAAD,CAAMqD,GAAIiH,QAAYzE,GAAI,KAA1B,eADF,+BAGA,gBAACvF,GAAD,KACE,gBAACN,GAAD,CAAME,KAAM,qCAAZ,oBCvCAqK,GAAgD,CACpD,OACA,QACA,cAGIC,GAAqC,CACzC,CACEzB,KAAM,iBACN0B,MAAO,+BACPC,WAAY,gBAEd,CACE3B,KAAM,gBACN0B,MAAO,yBACPC,WAAY,WAEd,CACE3B,KAAM,uBACN0B,MAAO,0BACPC,WAAY,aAEd,CACE3B,KAAM,6BACN0B,MAAO,2BACPC,WAAY,gBAEd,CACE3B,KAAM,eACN0B,MAAO,kBACPC,WAAY,UAEd,CACE3B,KAAM,uBACN0B,MAAO,kCACPC,WAAY,gBAEd,CACE3B,KAAM,gBACN0B,MAAO,0BACPC,WAAY,wBAIHC,GAAsB,kBACjC,gCACGpT,EAAS,SACV,gBAAC2H,GAAD,cACA,gBAACoB,GAAD,CAAW+C,GAAI,OACb,gBAACrD,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,UAAxB,SAA+C,SAC/C,gBAAC7F,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,UAAU,gBAACjH,GAAD,KAAO,YAAyB,SAClE,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,cAAc,gBAACjH,GAAD,KAAO,gBAA6B,SAC1E,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,cAAc,gBAACjH,GAAD,KAAO,gBAA6B,SAC1E,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,aAAa,gBAACjH,GAAD,KAAO,eAA4B,SACxE,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,cAAc,gBAACjH,GAAD,KAAO,gBAA6B,SAC1E,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,kBAAkB,gBAACjH,GAAD,KAAO,oBAAiC,SAClF,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,kBAAxB,iBAA+D,SAC/D,gBAAC7F,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,aAAxB,aAEF,gBAACvF,GAAD,+DACyD,gBAAC1B,GAAD,KAAO,WADhE,KACmF,gBAACA,GAAD,KAAO,WAD1F,IAEE,gBAACA,GAAD,KAAO,WAFT,KAE4B,gBAACA,GAAD,KAAO,QAFnC,SAEuD,gBAACA,GAAD,KAAO,QAF9D,oCAGQ,gBAACA,GAAD,KAAO,QAHf,MAKA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,SAAnB,SACA,gBAAC/B,GAAD,mIAIA,gBAACpB,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,SAAQ,gBAACzD,GAAD,KAAO,YAClC,gBAAC0B,GAAD,gBACU,gBAAC1B,GAAD,cADV,0CACmE,gBAACA,GAAD,KAAO,WAD1E,KAGA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,aAAY,gBAACzD,GAAD,KAAO,gBACtC,gBAAC0B,GAAD,gBACU,gBAAC1B,GAAD,kBADV,0CACuE,gBAACA,GAAD,KAAO,WAD9E,KAGA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,aAAY,gBAACzD,GAAD,KAAO,gBACtC,gBAAC0B,GAAD,gBACU,gBAAC1B,GAAD,kBADV,0CACuE,gBAACA,GAAD,KAAO,WAD9E,KAGA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,YAAW,gBAACzD,GAAD,KAAO,eACrC,gBAAC0B,GAAD,gBACU,gBAAC1B,GAAD,iBADV,0CACsE,gBAACA,GAAD,KAAO,QAD7E,KAGA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,aAAY,gBAACzD,GAAD,KAAO,gBACtC,gBAAC0B,GAAD,gBACU,gBAAC1B,GAAD,kBADV,0CACuE,gBAACA,GAAD,KAAO,QAD9E,KAGA,gBAAC0B,GAAD,KACE,gBAAC1B,GAAD,kBADF,yBAC8C,gBAACA,GAAD,KAAO,QADrD,iDAEM,gBAACoB,GAAD,CAAME,KAAM,8DAA8D,gBAACtB,GAAD,WAA1E,SAFN,aAKA,gBAACC,GAAD,iFAIA,gBAACK,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,iBAAgB,gBAACzD,GAAD,KAAO,oBAC1C,gBAAC0B,GAAD,iGAEM,gBAAC1B,GAAD,sBAFN,6GAKA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,iBAAnB,iBACA,gBAAC/B,GAAD,YACM,gBAACN,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,wBAAxB,iBADN,4CAGA,gBAAC3G,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,YACjB,gBAACrC,GAAD,CAAME,KAAM,yFAAZ,aAIF,gBAACI,GAAD,aACO,gBAAC1B,GAAD,cADP,0BAEK,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,2BAA2B,gBAACjH,GAAD,KAAO,sBAF/D,8FAKA,gBAAC0B,GAAD,oCAGA,gBAAC,GAAD,CAAiBK,UAAU,aAAaE,SAAU,OAAQH,gBAAiB,KACzE,gBAACkC,GAAD,KACE,gBAACE,GAAD,KACE,gBAACE,GAAD,KACE,gBAACH,GAAD,CAAWQ,GAAI,MAAf,QACA,gBAACR,GAAD,CAAWQ,GAAI,MAAf,SACA,gBAACR,GAAD,CAAWQ,GAAI,MAAf,gBAGJ,gBAACN,GAAD,KACGyH,GAAUxN,KAAI,SAACyG,GAAD,aACb,gBAACT,GAAD,CAAU5B,IAAG,UAAEqC,EAAEsF,YAAJ,aAAE,EAAQ6B,YACrB,gBAAC/H,GAAD,KAAYY,EAAEsF,MACd,gBAAClG,GAAD,KAAYY,EAAEgH,OACd,gBAAC5H,GAAD,KAAYY,EAAEiH,mBAOxB,gBAACpK,GAAD,kDAC4C,gBAAC1B,GAAD,sBAD5C,eAGA,gBAAC,GAAD,CAAiB+B,UAAU,aAAaE,SAAU,OAAQH,gBAAiB,KACzE,gBAAC,GAAD,CAAewC,KAAMsH,GAAWrH,QAASoH,QC5JlCM,GAAqB,kBAChC,gCACGtT,EAAS,8BACV,gBAAC2H,GAAD,mCACA,gBAACoB,GAAD,CAAW+C,GAAI,OACb,gBAACrD,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,WAAW,gBAACjH,GAAD,KAAO,aAA0B,SACpE,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,cAAc,gBAACjH,GAAD,KAAO,gBAA6B,SAC1E,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,UAAU,gBAACjH,GAAD,KAAO,YAAyB,SAClE,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,SAAS,gBAACjH,GAAD,KAAO,WAAwB,SAChE,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,cAAc,gBAACjH,GAAD,KAAO,gBAA6B,SAC1E,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,kBAAxB,kBAEF,gBAACvF,GAAD,iEAEM,gBAACN,GAAD,CAAME,KAAM,mFAAZ,iCAFN,kBAKA,gBAAChB,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,UAAS,gBAACzD,GAAD,KAAO,aACnC,gBAAC0B,GAAD,KACE,gBAAC1B,GAAD,eADF,oDACsE,gBAACA,GAAD,KAAO,QAD7E,KAC6F,gBAACA,GAAD,KAAO,QADpG,oCAEiC,gBAACA,GAAD,eAFjC,6BAE8E,gBAACA,GAAD,KAAO,QAFrF,KAIA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,gBAAnB,UAAyC,gBAACzD,GAAD,qBACzC,gBAAC0B,GAAD,KACE,gBAAC1B,GAAD,eADF,+EAGA,gBAAC0B,GAAD,gBACU,gBAACN,GAAD,CAAME,KAAM,8DAA8D,gBAACtB,GAAD,WAA1E,SADV,sDAIA,gBAACC,GAAD,mJAQA,gBAACK,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,aAAY,gBAACzD,GAAD,KAAO,gBACtC,gBAAC0B,GAAD,KACE,gBAAC1B,GAAD,kBADF,sCAC2D,gBAACA,GAAD,KAAO,OADlE,KAGA,gBAACM,GAAD,CAAQmE,GAAG,MAAX,UAAuB,gBAACzE,GAAD,wBACvB,gBAAC0B,GAAD,iEAC2D,gBAAC1B,GAAD,KAAO,OADlE,aACyF,gBAACA,GAAD,kBADzF,0BAEmB,gBAACA,GAAD,0BAFnB,QAEsD,gBAACA,GAAD,gBAFtD,kBAEyF,gBAACA,GAAD,kBAFzF,2DAGoD,gBAACA,GAAD,kBAHpD,2BAIU3C,EAAQM,SAASC,QAJ3B,qCAMA,gBAAC0C,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,SAAQ,gBAACzD,GAAD,KAAO,YAClC,gBAAC0B,GAAD,KACE,gBAAC1B,GAAD,cADF,sCACuD,gBAACA,GAAD,KAAO,WAD9D,wDAEoB,gBAACoB,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,gBAAgB,gBAACjH,GAAD,KAAO,YAFnE,KAIA,gBAACM,GAAD,CAAQmE,GAAG,MAAX,UAAuB,gBAACzE,GAAD,oBACvB,gBAAC0B,GAAD,KACE,gBAAC1B,GAAD,cADF,+DACgF,gBAACA,GAAD,KAAO,WADvF,uCAE+B,gBAACA,GAAD,2BAF/B,4CAGS,gBAACA,GAAD,wBAHT,gEAIM,gBAACA,GAAD,2BAJN,4CAMA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,QAAO,gBAACzD,GAAD,KAAO,WACjC,gBAAC0B,GAAD,KACE,gBAAC1B,GAAD,aADF,sCACsD,gBAACA,GAAD,KAAO,UAD7D,+CAIA,gBAACM,GAAD,CAAQmE,GAAG,MAAX,UAAuB,gBAACzE,GAAD,mBACvB,gBAAC0B,GAAD,KACE,gBAAC1B,GAAD,aADF,+DAC+E,gBAACA,GAAD,KAAO,UADtF,aAGA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,aAAY,gBAACzD,GAAD,KAAO,gBACtC,gBAAC0B,GAAD,KACE,gBAAC1B,GAAD,kBADF,sCAC2D,gBAACA,GAAD,KAAO,SADlE,8CAIA,gBAACM,GAAD,CAAQmE,GAAG,MAAX,UAAuB,gBAACzE,GAAD,wBACvB,gBAAC0B,GAAD,KACE,gBAAC1B,GAAD,kBADF,+DACoF,gBAACA,GAAD,KAAO,SAD3F,aAGA,gBAACM,GAAD,CAAQmE,GAAG,KAAKhB,GAAG,iBAAnB,iBACA,gBAAC/B,GAAD,YACM,gBAACN,GAAD,CAAMqD,GAAIuC,WAAUC,GAAI,wBAAxB,iBADN,8C,QChEEiF,GAAS,CACb,CACEpO,MAAM,UAAD,OAAYwH,IAAZ,KACL6G,OAAO,EACPC,MAAO,IACPC,UAAW,gBAAC,GAAD,OAEb,CACEvO,MAAO,kBACPsO,MAAO,SACPC,UAAW,gBAAC,GAAD,OAEb,CACEvO,MAAO,UACPsO,MAAO,iBACPC,UAAW,gBAAC,GAAD,OAEb,CACEvO,MAAO,SACPsO,MAAO,UACPC,UAAW,gBAAC,GAAD,OAEb,CACEvO,MAAO,QACPsO,MAAO,SACPC,UAAW,gBAAC,GAAD,OAEb,CACEvO,MAAO,SACPsO,MAAO,UACPC,UAAW,gBAAC,GAAD,OAEb,CACEvO,MAAO,OACPsO,MAAO,QACPC,UAAW,gBAAC,GAAD,OAEb,CACEvO,MAAO,OACPsO,MAAO,QACPC,UAAW,gBAAC,GAAD,OAEb,CACEvO,MAAO,QACPsO,MAAO,SACPC,UAAW,gBAAC,GAAD,OAEb,CACEvO,MAAO,UACPsO,MAAO,WACPC,UAAW,gBAAC,GAAD,QAIFC,GAAmB,WAE9B,IAAMC,EAAW,uCAAG,WAAO9I,GAAP,eAAA+I,EAAA,uDACZC,EAAS5T,SAAS8K,eAAeF,KAC3BgJ,EAAO7I,gBAAe,GAFhB,2CAAH,sDAQX8I,EAAY,uCAAG,8BAAAF,EAAA,sDACnBjU,OAAOC,SAASmU,KAAOpU,OAAOC,SAASmU,KAAKC,QAAQ,MAAO,KACrDD,EAAOpU,OAAOC,SAASmU,MACvBlJ,EAAKkJ,EAAKE,OAAO,GAAGC,MAAM,KAAK,KAEnCpM,WAAU,sBAAC,sBAAA8L,EAAA,sEACHD,EAAY9I,GADT,2CAER,GAPc,2CAAH,qDAelB,OAJAuE,aAAgB,WACd0E,OAIA,gBAACjL,GAAD,KACE,gBAAC,cAAD,CAAYsL,SAAS,KACnB,gBAAC,GAAD,CAAUtJ,GAAI,SACd,gBAACrD,GAAD,CAAMC,QAAS,IACb,gBAACH,GAAD,CAAUuE,GAAG,MAAMuI,aAAW,WAC3Bd,GAAO9N,KAAI,SAACyG,EAAG1L,GAAJ,OACV,gBAAC,WAAD,CAAgBqJ,IAAKqC,EAAE/G,OACrB,gBAACsD,GAAD,CACEqD,GAAIwI,WACJhG,GAAIpC,EAAEuH,MACND,MAAOtH,EAAEsH,OAERtH,EAAE/G,OAEJ3E,IAAM+S,GAAO5S,OAAS,EAAI,SAAa,QAI9C,gBAAC4G,GAAD,KACE,wBAAMyG,UAAW,EAAGlD,GAAG,SACvB,gBAAC,KAAD,KACGyI,GAAO9N,KAAI,SAACyG,GAAD,OACV,gBAAC,KAAD,CACErC,IAAKqC,EAAE/G,MACPqO,OAAK,EACLe,KAAMrI,EAAEuH,OAEPvH,EAAEwH,cAGP,gBAAC,KAAD,KACE,gBAAC,GAAD,aCrIhBc,IAASC,OACP,gBAAC,aAAD,KACE,gBAACnP,EAAD,MACA,gBAACM,GAAD,MACA,gBAAC,GAAD,OAEF1F,SAAS8K,eAAe,Sd+HpB,kBAAmB0J,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA9Q,GACL+Q,QAAQ/Q,MAAMA,EAAMgR,c","file":"static/js/main.a117f9f5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const setTitle = (title?: string): void => {\n  document.title = `Clear${title? ` | ${title}` : ''}`\n}\n","/* eslint-disable */\nimport { useState, useCallback, useEffect, createElement, Fragment } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n}\n\nvar colors = {\r\n    light: {\r\n        background: 'white',\r\n        blue: '#005cb8',\r\n        border: '#ddd',\r\n        error: '#cf0303',\r\n        link: '#55e',\r\n        textColor: '#111',\r\n        violet: '#bc1abc',\r\n        zebra: '#f8f8f8',\r\n    },\r\n    dark: {\r\n        background: '#111',\r\n        blue: 'dodgerblue',\r\n        border: '#555',\r\n        error: '#ff5656',\r\n        link: '#8787f9',\r\n        textColor: 'white',\r\n        violet: 'violet',\r\n        zebra: '#242424',\r\n    }\r\n};\n\nvar focusStyle = \"\\n:focus {\\n  outline: none;\\n  box-shadow: 0 0 0 calc(var(--clear-unit) / 4) var(--clear-background),\\n    0 0 0 calc(var(--clear-unit) / 2) var(--clear-link);\\n}\\n::-moz-focus-inner {\\n  border:0;\\n}\\n\";\r\nvar errorFocusStyle = \"\\n:focus {\\n  outline: none;\\n  box-shadow: 0 0 0 calc(var(--clear-unit) / 4) var(--clear-background),\\n    0 0 0 calc(var(--clear-unit) / 2) var(--clear-error);\\n}\\n::-moz-focus-inner {\\n  border:0;\\n}\\n\";\n\nvar unit = 8;\r\nvar numbers = {\r\n    breakpoint: {\r\n        xs: 600,\r\n        sm: 960,\r\n        md: 1280,\r\n        lg: 1920,\r\n    },\r\n    fontSize: {\r\n        default: unit * 2,\r\n        label: unit * 1.75,\r\n    },\r\n    width: {\r\n        main: 95 * unit,\r\n    },\r\n    unit: unit,\r\n};\n\n/**\r\n * Creates a set of css variables necessary for global colors. This component\r\n * should be included once at the top level of your application.\r\n *\r\n * https://chadlavi.github.io/clear/#/global-styles#cssvariables\r\n */\r\nvar CSSVariables = createGlobalStyle(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  :root {\\n    \", \"\\n\\n    --clear-unit: \", \"px;\\n    --clear-main-width: \", \"px;\\n    --clear-font-size-default: \", \"px;\\n    --clear-font-size-label: \", \"px;\\n\\n    \", \"\\n\\n    --clear-font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, Ubuntu,\\n      roboto, noto, segoe ui, arial, sans-serif;\\n    --clear-monospace-font-family: Menlo, Consolas, Monaco, Liberation Mono, Lucida Console, monospace;\\n  }\\n\\n  @media (prefers-color-scheme: dark) {\\n    :root {\\n      \", \"\\n    }\\n  }\\n  \"], [\"\\n  :root {\\n    \", \"\\n\\n    --clear-unit: \", \"px;\\n    --clear-main-width: \", \"px;\\n    --clear-font-size-default: \", \"px;\\n    --clear-font-size-label: \", \"px;\\n\\n    \",\r\n    \"\\n\\n    --clear-font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, Ubuntu,\\n      roboto, noto, segoe ui, arial, sans-serif;\\n    --clear-monospace-font-family: Menlo, Consolas, Monaco, Liberation Mono, Lucida Console, monospace;\\n  }\\n\\n  @media (prefers-color-scheme: dark) {\\n    :root {\\n      \", \"\\n    }\\n  }\\n  \"])), Object.keys(colors.light).map(function (c) { return \"--clear-\" + c + \": \" + colors.light[c] + \";\"; }), numbers.unit, numbers.width.main, numbers.fontSize.default, numbers.fontSize.label, Object.keys(numbers.breakpoint).map(function (k) { return \"--clear-breakpoint-\" + k + \": \" + numbers.breakpoint[k] + \"px;\"; }), Object.keys(colors.dark).map(function (c) { return \"--clear-\" + c + \": \" + colors.dark[c] + \";\"; }));\r\nvar templateObject_1;\n\n/**\r\n * Applies styles to the `<body>` of your app.\r\n *\r\n * https://chadlavi.github.io/clear/#/global-styles#globalstyles\r\n */\r\nvar GlobalStyles = createGlobalStyle(templateObject_1$1 || (templateObject_1$1 = __makeTemplateObject([\"\\n  body {\\n    margin: 0;\\n    background-color: var(--clear-background);\\n    color: var(--clear-textColor);\\n    font-family: var(--clear-font-family);\\n    font-size: var(--clear-font-size-default);\\n    text-rendering: geometricPrecision;\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n    -webkit-text-size-adjust: 100%;\\n  }\\n\"], [\"\\n  body {\\n    margin: 0;\\n    background-color: var(--clear-background);\\n    color: var(--clear-textColor);\\n    font-family: var(--clear-font-family);\\n    font-size: var(--clear-font-size-default);\\n    text-rendering: geometricPrecision;\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n    -webkit-text-size-adjust: 100%;\\n  }\\n\"])));\r\nvar templateObject_1$1;\n\n/**\r\n * This basic React hook returns a boolean value that reflects whether or not the given query matches.\r\n *\r\n * https://chadlavi.github.io/clear/#/helpers#usemediaquery\r\n */\r\nvar useMediaQuery = function (query) {\r\n    var _a = useState(matchMedia(query).matches), result = _a[0], setResult = _a[1];\r\n    var callback = useCallback(function (matchMediaResult) { return setResult(matchMediaResult.matches); }, [setResult]);\r\n    useEffect(function () {\r\n        var matchMediaResult = matchMedia(query);\r\n        callback(matchMediaResult);\r\n        matchMediaResult.addListener(callback);\r\n        return function () { return matchMediaResult.removeListener(callback); };\r\n    }, [callback]);\r\n    return result;\r\n};\r\n/**\r\n * Returns a boolean value that reflects whether or not the user's viewport is smaller than the given breakpoint.\r\n *\r\n * https://chadlavi.github.io/clear/#/helpers#usebreakpoint\r\n */\r\nvar useBreakpoint = function (breakpoint) { return useMediaQuery(\"(max-width: \" + numbers.breakpoint[breakpoint] + \"px)\"); };\r\n/**\r\n * Returns a boolean value that reflects whether or not the user's browser is currently in dark mode.\r\n *\r\n * https://chadlavi.github.io/clear/#/helpers#usedarkmode\r\n */\r\nvar useDarkMode = function () { return useMediaQuery('(prefers-color-scheme: dark)'); };\r\n/**\r\n * Returns a boolean value that reflects whether or not the user's browser is currently in dark mode.\r\n *\r\n * https://chadlavi.github.io/clear/#/helpers#useresponsivecolor\r\n */\r\nvar useResponsiveColor = function (color) {\r\n    var theme = useDarkMode() ? 'dark' : 'light';\r\n    return colors[theme][color];\r\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar ButtonBase = function (_a) {\r\n    var primary = _a.primary, props = __rest(_a, [\"primary\"]);\r\n    return createElement(\"button\", __assign({}, props));\r\n};\r\n/**\r\n * A simple styled `<button>`\r\n *\r\n * https://chadlavi.github.io/clear/#/button\r\n */\r\nvar Button = styled(ButtonBase)(templateObject_1$2 || (templateObject_1$2 = __makeTemplateObject([\"\\n  background: var(--clear-border);\\n  border-radius: var(--clear-unit);\\n  border: none;\\n  color: inherit;\\n  \", \";\\n  cursor: pointer;\\n  \", \";\\n  font-size: var(--clear-font-size-label);\\n  margin: 0;\\n  padding: var(--clear-unit) calc(var(--clear-unit) * 2);\\n  @media (prefers-color-scheme: dark) {\\n    font-weight: 500;\\n  }\\n  \", \"\\n\"], [\"\\n  background: var(--clear-border);\\n  border-radius: var(--clear-unit);\\n  border: none;\\n  color: inherit;\\n  \",\r\n    \";\\n  cursor: pointer;\\n  \",\r\n    \";\\n  font-size: var(--clear-font-size-label);\\n  margin: 0;\\n  padding: var(--clear-unit) calc(var(--clear-unit) * 2);\\n  @media (prefers-color-scheme: dark) {\\n    font-weight: 500;\\n  }\\n  \", \"\\n\"])), function (p) { return p.primary ? \"\\n    background: var(--clear-link);\\n    color: var(--clear-background);\\n  \" : ''; }, function (p) { return p.disabled ? \"\\n    cursor: not-allowed;\\n    opacity: 0.5;\\n  \" : ''; }, focusStyle);\r\nvar templateObject_1$2;\n\n/**\r\n * A simple styled `<code>`\r\n *\r\n * https://chadlavi.github.io/clear/#/text#code\r\n */\r\nvar Code = styled('code')(templateObject_1$3 || (templateObject_1$3 = __makeTemplateObject([\"\\n  font-family: var(--clear-monospace-font-family);\\n  font-size: 0.9em;\\n  display: inline;\\n  margin: 0;\\n  background: var(--clear-zebra);\\n  padding: calc(var(--clear-unit) / 2 - 2px) calc(var(--clear-unit) / 2 - 1px);\\n  border-radius: calc(var(--clear-unit) / 2);\\n\"], [\"\\n  font-family: var(--clear-monospace-font-family);\\n  font-size: 0.9em;\\n  display: inline;\\n  margin: 0;\\n  background: var(--clear-zebra);\\n  padding: calc(var(--clear-unit) / 2 - 2px) calc(var(--clear-unit) / 2 - 1px);\\n  border-radius: calc(var(--clear-unit) / 2);\\n\"])));\r\nvar templateObject_1$3;\n\n/**\r\n * A simple styled `<pre>` for formatting code blocks\r\n *\r\n * https://chadlavi.github.io/clear/#/text#codeblock\r\n */\r\nvar CodeBlock = styled('pre')(templateObject_1$4 || (templateObject_1$4 = __makeTemplateObject([\"\\n  font-family: var(--clear-monospace-font-family);\\n  font-size: 0.9em;\\n  line-height: 1.5;\\n  display: block;\\n  margin-block-end: calc(var(--clear-unit) * 2);\\n  margin-block-start: calc(var(--clear-unit) * 2);\\n  background: var(--clear-zebra);\\n  padding: calc(var(--clear-unit) * 2);\\n  border-radius: var(--clear-unit);\\n  overflow-x: auto;\\n\"], [\"\\n  font-family: var(--clear-monospace-font-family);\\n  font-size: 0.9em;\\n  line-height: 1.5;\\n  display: block;\\n  margin-block-end: calc(var(--clear-unit) * 2);\\n  margin-block-start: calc(var(--clear-unit) * 2);\\n  background: var(--clear-zebra);\\n  padding: calc(var(--clear-unit) * 2);\\n  border-radius: var(--clear-unit);\\n  overflow-x: auto;\\n\"])));\r\nvar templateObject_1$4;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar Container = function (_a) {\r\n    var size = _a.size, props = __rest(_a, [\"size\"]);\r\n    return createElement(\"div\", __assign({}, props));\r\n};\r\n/**\r\n * A simple 12-column grid item. Must be used as a direct child of `<Grid>`.\r\n *\r\n * https://chadlavi.github.io/clear/#/layout#griditem\r\n */\r\nvar GridItem = styled(Container)(templateObject_1$5 || (templateObject_1$5 = __makeTemplateObject([\"\\n  flex-basis: calc(100% * \", \" / 12);\\n  width: calc(100% * \", \" / 12);\\n  max-width: calc(100% * \", \" / 12);\\n  @media only screen and (max-width: \", \"px) {\\n    flex-basis: 100%;\\n    width: 100%;\\n    max-width: 100%;\\n  }\\n\"], [\"\\n  flex-basis: calc(100% * \", \" / 12);\\n  width: calc(100% * \", \" / 12);\\n  max-width: calc(100% * \", \" / 12);\\n  @media only screen and (max-width: \", \"px) {\\n    flex-basis: 100%;\\n    width: 100%;\\n    max-width: 100%;\\n  }\\n\"])), function (p) { return p.size || 12; }, function (p) { return p.size || 12; }, function (p) { return p.size || 12; }, numbers.breakpoint.xs);\r\nvar templateObject_1$5;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar Container$1 = function (_a) {\r\n    var spacing = _a.spacing, props = __rest(_a, [\"spacing\"]);\r\n    return createElement(\"div\", __assign({}, props));\r\n};\r\n/**\r\n * A simple 12-column grid container. Must be used in conjunciton with\r\n * `<GridItem>`.\r\n *\r\n * https://chadlavi.github.io/clear/#/layout#grid\r\n */\r\nvar Grid = styled(Container$1)(templateObject_1$6 || (templateObject_1$6 = __makeTemplateObject([\"\\n  display: flex;\\n  flex-wrap: wrap;\\n  padding: \", \"px;\\n  & > \", \" {\\n    padding: \", \"px;\\n  }\\n\"], [\"\\n  display: flex;\\n  flex-wrap: wrap;\\n  padding: \", \"px;\\n  & > \", \" {\\n    padding: \", \"px;\\n  }\\n\"])), function (p) { return p.spacing ? p.spacing / 2 : 0; }, GridItem, function (p) { return p.spacing ? p.spacing / 2 : 0; });\r\nvar templateObject_1$6;\n\n/**\r\n * A simple styled `<h1>`\r\n *\r\n * Can also be used to create any header (`h1` through `h6`):\r\n *\r\n * ```tsx\r\n * <Header as='h2'>\r\n *  This will render in the DOM as an `<h2>`\r\n * </Header>\r\n * ```\r\n *\r\n * https://chadlavi.github.io/clear/#/text#header\r\n */\r\nvar Header = styled('h1')(templateObject_1$7 || (templateObject_1$7 = __makeTemplateObject([\"\"], [\"\"])));\r\nvar templateObject_1$7;\n\n/**\r\n * Calls props.onClick, but also selects the contents of the Input on click\r\n * @param func the onClick passed to `<Input>`\r\n */\r\nvar forwardOnClick = function (func) { return function (e) {\r\n    var t = e.currentTarget;\r\n    if (func)\r\n        func(e);\r\n    if (t.value)\r\n        setTimeout(function () {\r\n            t.select();\r\n        }, 1);\r\n}; };\r\n/**\r\n * Calls props.onFocus, but also selects the contents of the Input on focus\r\n * @param func the onFocus passed to `<Input>`\r\n */\r\nvar forwardOnFocus = function (func) { return function (e) {\r\n    var t = e.currentTarget;\r\n    if (func)\r\n        func(e);\r\n    if (t.value)\r\n        setTimeout(function () {\r\n            t.select();\r\n        }, 1);\r\n}; };\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar InputBase = function (_a) {\r\n    var error = _a.error, props = __rest(_a, [\"error\"]);\r\n    return createElement(\"input\", __assign({}, props, { onClick: forwardOnClick(props.onClick), onFocus: forwardOnFocus(props.onFocus), value: props.value || (props.type === 'number' ? ' ' : '') }));\r\n};\r\n/**\r\n * A simple styled Input\r\n *\r\n * https://chadlavi.github.io/clear/#/input#input\r\n */\r\nvar Input = styled(InputBase)(templateObject_1$8 || (templateObject_1$8 = __makeTemplateObject([\"\\n  background-color: var(--clear-background);\\n  color: var(--clear-\", \");\\n  border: 1px solid var(--clear-\", \");\\n  border-radius: var(--clear-unit);\\n  padding: calc(var(--clear-unit) * 1.5);\\n  font-size: var(--clear-font-size-default);\\n  margin: calc(var(--clear-unit) / 2) 0;\\n  width: 100%;\\n  min-width: 100%;\\n  max-width: 100%;\\n  -webkit-appearance: none;\\n  \", \"\\n  \", \"\\n  \", \"\\n\"], [\"\\n  background-color: var(--clear-background);\\n  color: var(--clear-\", \");\\n  border: 1px solid var(--clear-\", \");\\n  border-radius: var(--clear-unit);\\n  padding: calc(var(--clear-unit) * 1.5);\\n  font-size: var(--clear-font-size-default);\\n  margin: calc(var(--clear-unit) / 2) 0;\\n  width: 100%;\\n  min-width: 100%;\\n  max-width: 100%;\\n  -webkit-appearance: none;\\n  \", \"\\n  \", \"\\n  \", \"\\n\"])), function (p) { return p.error ? 'error' : 'textColor'; }, function (p) { return p.error ? 'error' : 'border'; }, focusStyle, function (p) { return p.error ? errorFocusStyle : ''; }, function (p) { return p.disabled ? 'cursor: not-allowed;' : ''; });\r\nvar templateObject_1$8;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar LabelBase = function (_a) {\r\n    var disabled = _a.disabled, error = _a.error, required = _a.required, props = __rest(_a, [\"disabled\", \"error\", \"required\"]);\r\n    return (createElement(\"label\", __assign({}, props), required ? createElement(Fragment, null,\r\n        props.children,\r\n        ' (Required)') : props.children));\r\n};\r\n/**\r\n * A simple styled `<label>`\r\n *\r\n * https://chadlavi.github.io/clear/#/text#label\r\n */\r\nvar Label = styled(LabelBase)(templateObject_1$9 || (templateObject_1$9 = __makeTemplateObject([\"\\n  color: \", \";\\n  \", \";\\n  width: 100%;\\n  font-size: var(--clear-font-size-label);\\n\"], [\"\\n  color: \", \";\\n  \",\r\n    \";\\n  width: 100%;\\n  font-size: var(--clear-font-size-label);\\n\"])), function (p) { return p.error ? 'var(--clear-error)' : 'inherit'; }, function (p) { return p.disabled ? \"\\n    opacity: 0.5;\\n  \" : ''; });\r\nvar templateObject_1$9;\n\nvar Anchor = function (props) {\r\n    var _a;\r\n    var isExternal = Boolean((_a = props.href) === null || _a === void 0 ? void 0 : _a.match(/^http/));\r\n    return (createElement(\"a\", __assign({}, props, { target: isExternal ? '_blank' : props.target, rel: isExternal ? 'noopener noreferrer' : props.rel, title: props.title || \"Open \\\"\" + props.href + \"\\\"\" + (isExternal ? ' in a new Tab' : '') })));\r\n};\r\n/**\r\n * A simple styled `<a>`\r\n *\r\n * https://chadlavi.github.io/clear/#/link\r\n */\r\nvar Link = styled(Anchor)(templateObject_1$a || (templateObject_1$a = __makeTemplateObject([\"\\n  color: var(--clear-link);\\n  \", \"\\n  &[target='_blank']::after {\\n    content: ' [\\u2197]';\\n  }\\n\"], [\"\\n  color: var(--clear-link);\\n  \", \"\\n  &[target='_blank']::after {\\n    content: ' [\\\\u2197]';\\n  }\\n\"])), focusStyle);\r\nvar templateObject_1$a;\n\n/**\r\n * A simple styled `<main>`\r\n *\r\n * https://chadlavi.github.io/clear/#/layout#page\r\n */\r\nvar Page = styled('main')(templateObject_1$b || (templateObject_1$b = __makeTemplateObject([\"\\nmargin: 0 auto;\\nmargin-bottom: calc(var(--clear-unit) * 15);\\npadding: var(--clear-unit);\\nwidth: \", \"px;\\nbackground-color: var(--clear-background);\\ncolor: var(--clear-textColor);\\nfont-family: var(--clear-font-family);\\nfont-size: var(--clear-font-size-default);\\n-webkit-font-smoothing: antialiased;\\n-moz-osx-font-smoothing: grayscale;\\nmax-width: 100%;\\n&, & * {\\n  box-sizing: border-box;\\n}\\n\"], [\"\\nmargin: 0 auto;\\nmargin-bottom: calc(var(--clear-unit) * 15);\\npadding: var(--clear-unit);\\nwidth: \", \"px;\\nbackground-color: var(--clear-background);\\ncolor: var(--clear-textColor);\\nfont-family: var(--clear-font-family);\\nfont-size: var(--clear-font-size-default);\\n-webkit-font-smoothing: antialiased;\\n-moz-osx-font-smoothing: grayscale;\\nmax-width: 100%;\\n&, & * {\\n  box-sizing: border-box;\\n}\\n\"])), numbers.width.main);\r\nvar templateObject_1$b;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar ParagraphBase = function (_a) {\r\n    var margins = _a.margins, props = __rest(_a, [\"margins\"]);\r\n    return createElement(\"p\", __assign({}, props));\r\n};\r\n/**\r\n * A simple styled `<p>`\r\n *\r\n * https://chadlavi.github.io/clear/#/text#paragraph\r\n */\r\nvar Paragraph = styled(ParagraphBase)(templateObject_1$c || (templateObject_1$c = __makeTemplateObject([\"\\n  line-height: 1.5;\\n  \", \"\\n\"], [\"\\n  line-height: 1.5;\\n  \",\r\n    \"\\n\"])), function (p) { return p.margins === false ? \"\\n    margin-block-start: 0;\\n    margin-block-end: 0;\\n  \" : \"\\n    margin-block-start: 1em;\\n    margin-block-end: 1em;\\n  \"; });\r\nvar templateObject_1$c;\n\nvar ContainerBase = function (_a) {\r\n    var  \r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    contentMinHeight = _a.contentMinHeight, contentMinWidth = _a.contentMinWidth, _b = _a.direction, maxHeight = _a.maxHeight, maxWidth = _a.maxWidth, props = __rest(_a, [\"contentMinHeight\", \"contentMinWidth\", \"direction\", \"maxHeight\", \"maxWidth\"]);\r\n    return createElement(\"div\", __assign({}, props));\r\n};\r\nvar Container$2 = styled(ContainerBase)(templateObject_1$d || (templateObject_1$d = __makeTemplateObject([\"\\n  width: 100%;\\n  \", \"\\n  \", \"\\n\\n  \", \"\\n\"], [\"\\n  width: 100%;\\n  \",\r\n    \"\\n  \",\r\n    \"\\n\\n  \",\r\n    \"\\n\"])), function (p) {\r\n    var direction = p.direction;\r\n    if (direction === 'horizontal') {\r\n        return 'overflow-x: auto; max-width: 100%;';\r\n    }\r\n    else {\r\n        return 'overflow-y: auto; max-height: 100%;';\r\n    }\r\n}, function (p) {\r\n    var maxHeight = p.maxHeight;\r\n    if (typeof maxHeight === 'number') {\r\n        return \"max-height: \" + maxHeight + \"px;\";\r\n    }\r\n    else if (maxHeight) {\r\n        return \"max-height: \" + maxHeight + \";\";\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}, function (p) {\r\n    var maxWidth = p.maxWidth;\r\n    if (typeof maxWidth === 'number') {\r\n        return \"max-width: \" + maxWidth + \"px;\";\r\n    }\r\n    else if (maxWidth) {\r\n        return \"max-width: \" + maxWidth + \";\";\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n});\r\nvar ContentBase = function (_a) {\r\n    var  \r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    contentMinHeight = _a.contentMinHeight, contentMinWidth = _a.contentMinWidth, _b = _a.direction, maxHeight = _a.maxHeight, maxWidth = _a.maxWidth, props = __rest(_a, [\"contentMinHeight\", \"contentMinWidth\", \"direction\", \"maxHeight\", \"maxWidth\"]);\r\n    return createElement(\"div\", __assign({}, props));\r\n};\r\nvar Content = styled(ContentBase)(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  \", \"\\n  \", \"\\n\"], [\"\\n  \",\r\n    \"\\n  \",\r\n    \"\\n\"\r\n    /**\r\n     * You can use a ScrollContainer to create a verticall or horizontally scrollable div with content of a fixed minimum\r\n     * height/width. Scroll containers are very convenient ways to prevent <Table>s from becoming unmanageable on\r\n     * responsive devices.\r\n     *\r\n     * https://chadlavi.github.io/clear/#/layout#scrollcontainer\r\n     */\r\n])), function (p) {\r\n    var contentMinHeight = p.contentMinHeight;\r\n    if (typeof contentMinHeight === 'number') {\r\n        return \"min-height: \" + contentMinHeight + \"px;\";\r\n    }\r\n    else if (contentMinHeight) {\r\n        return \"min-height: \" + contentMinHeight + \";\";\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}, function (p) {\r\n    var contentMinWidth = p.contentMinWidth;\r\n    if (typeof contentMinWidth === 'number') {\r\n        return \"min-width: \" + contentMinWidth + \"px;\";\r\n    }\r\n    else if (contentMinWidth) {\r\n        return \"min-width: \" + contentMinWidth + \";\";\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n});\r\n/**\r\n * You can use a ScrollContainer to create a verticall or horizontally scrollable div with content of a fixed minimum\r\n * height/width. Scroll containers are very convenient ways to prevent <Table>s from becoming unmanageable on\r\n * responsive devices.\r\n *\r\n * https://chadlavi.github.io/clear/#/layout#scrollcontainer\r\n */\r\nvar ScrollContainer = function (props) {\r\n    return createElement(Container$2, { direction: props.direction, maxHeight: props.maxHeight, maxWidth: props.maxWidth },\r\n        createElement(Content, __assign({ contentMinHeight: props.contentMinHeight, contentMinWidth: props.contentMinWidth }, props)));\r\n};\r\nvar templateObject_1$d, templateObject_2;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar SelectBase = function (_a) {\r\n    var error = _a.error, props = __rest(_a, [\"error\"]);\r\n    return createElement(\"select\", __assign({}, props));\r\n};\r\nvar StyledSelect = styled(SelectBase)(templateObject_1$e || (templateObject_1$e = __makeTemplateObject([\"\\n  background-color: var(--clear-background);\\n  color: var(--clear-\", \");\\n  border: 1px solid var(--clear-\", \");\\n  border-radius: var(--clear-unit);\\n  padding: calc(var(--clear-unit) * 1.5);\\n  font-size: inherit;\\n  margin: calc(var(--clear-unit) / 2) 0;\\n  width: 100%;\\n  -webkit-appearance: none;\\n  \", \"\\n  \", \"\\n  cursor: \", \";\\n  opacity: \", \";\\n\"], [\"\\n  background-color: var(--clear-background);\\n  color: var(--clear-\", \");\\n  border: 1px solid var(--clear-\", \");\\n  border-radius: var(--clear-unit);\\n  padding: calc(var(--clear-unit) * 1.5);\\n  font-size: inherit;\\n  margin: calc(var(--clear-unit) / 2) 0;\\n  width: 100%;\\n  -webkit-appearance: none;\\n  \", \"\\n  \", \"\\n  cursor: \", \";\\n  opacity: \", \";\\n\"])), function (p) { return p.error ? 'error' : 'textColor'; }, function (p) { return p.error ? 'error' : 'border'; }, focusStyle, function (p) { return p.error ? errorFocusStyle : ''; }, function (p) { return p.disabled ? 'not-allowed' : 'pointer'; }, function (p) { return p.disabled ? '0.5' : '1'; });\r\nvar SelectOptions = function (_a) {\r\n    var options = _a.options;\r\n    return (createElement(Fragment, null, options.map(function (o) { return (createElement(\"option\", { key: o.label + \":\" + o.value, value: o.value }, o.label)); })));\r\n};\r\n/**\r\n * A simple styled Select\r\n *\r\n * https://chadlavi.github.io/clear/#/input#select\r\n */\r\nvar Select = function (props) {\r\n    var multiple = props.multiple, options = props.options, other = __rest(props, [\"multiple\", \"options\"]);\r\n    return (createElement(StyledSelect, __assign({}, other, { defaultValue: multiple ? undefined : '', multiple: multiple }),\r\n        multiple ? '' : createElement(\"option\", { hidden: true, disabled: true, value: '' }),\r\n        createElement(SelectOptions, { options: options })));\r\n};\r\n/**\r\n * handles update logic to update the value of a `<Select>` with `multiple={true}`\r\n *\r\n * Requires one argument, the function to set the `<select>` value. Defaults to\r\n * expecting a React `useState` hook, but you can optionally specify a type for the\r\n * setter function.\r\n */\r\nvar handleMutliSelectOnChange = function (setter) { return function (e) {\r\n    var updatedOptions = Array.from(e.target.options)\r\n        .filter(function (option) { return option.selected; })\r\n        .map(function (x) { return x.value; });\r\n    setter(updatedOptions);\r\n}; };\r\nvar templateObject_1$e;\n\nvar jumpTo = function (id) { return function () {\r\n    var el = document.getElementById(id);\r\n    if (el) {\r\n        el.scrollIntoView();\r\n        el.focus();\r\n    }\r\n}; };\r\nvar SkipLinkButton = styled(Button)(templateObject_1$f || (templateObject_1$f = __makeTemplateObject([\"\\n  position: absolute;\\n  top: var(--clear-unit);\\n  left: var(--clear-unit);\\n  opacity: 0;\\n  pointer-events: none;\\n  user-select: none;\\n  :focus {\\n    opacity: 1;\\n    pointer-events: unset;\\n    user-select: unset;\\n  }\\n  \\n\"], [\"\\n  position: absolute;\\n  top: var(--clear-unit);\\n  left: var(--clear-unit);\\n  opacity: 0;\\n  pointer-events: none;\\n  user-select: none;\\n  :focus {\\n    opacity: 1;\\n    pointer-events: unset;\\n    user-select: unset;\\n  }\\n  \\n\"])));\r\nvar SkipLink = function (_a) {\r\n    var id = _a.id;\r\n    return (createElement(SkipLinkButton, { onClick: jumpTo(id), primary: true }, \"Skip to main content\"));\r\n};\r\nvar templateObject_1$f;\n\n/**\r\n * A simple styled `<table>`\r\n *\r\n * https://chadlavi.github.io/clear/#/table#table\r\n */\r\nvar Table = styled('table')(templateObject_1$g || (templateObject_1$g = __makeTemplateObject([\"\\n  border-collapse: collapse;\\n  flex-basis: 100%;\\n  width: 100%;\\n  margin-bottom: var(--clear-font-size-default);\\n\"], [\"\\n  border-collapse: collapse;\\n  flex-basis: 100%;\\n  width: 100%;\\n  margin-bottom: var(--clear-font-size-default);\\n\"])));\r\nvar templateObject_1$g;\n\n/**\r\n * A simple styled `<td>`\r\n *\r\n * Can also be used to create a `<th>`:\r\n *\r\n * ```tsx\r\n * <TableCell as='th'>\r\n *  This will be rendered as a `<th>`\r\n * </TableCell>\r\n * ```\r\n *\r\n * https://chadlavi.github.io/clear/#/table#tablecell\r\n */\r\nvar TableCell = styled('td')(templateObject_1$h || (templateObject_1$h = __makeTemplateObject([\"\\n  text-align: left;\\n  padding: var(--clear-unit);\\n\"], [\"\\n  text-align: left;\\n  padding: var(--clear-unit);\\n\"])));\r\nvar templateObject_1$h;\n\n/**\r\n * A simple styled `<thead>`\r\n *\r\n * https://chadlavi.github.io/clear/#/table#tablehead\r\n */\r\nvar TableHead = styled('thead')(templateObject_1$i || (templateObject_1$i = __makeTemplateObject([\"\\n  \", \" {\\n    font-size: var(--clear-font-size-label);\\n    text-align: left;\\n    padding: var(--clear-unit);\\n    padding-bottom: calc(var(--clear-unit) / 2);\\n  }\\n\"], [\"\\n  \", \" {\\n    font-size: var(--clear-font-size-label);\\n    text-align: left;\\n    padding: var(--clear-unit);\\n    padding-bottom: calc(var(--clear-unit) / 2);\\n  }\\n\"])), TableCell);\r\nvar templateObject_1$i;\n\n/**\r\n * A simple styled `<tbody>`\r\n *\r\n * https://chadlavi.github.io/clear/#/table#tablebody\r\n */\r\nvar TableBody = styled('tbody')(templateObject_1$j || (templateObject_1$j = __makeTemplateObject([\"\"], [\"\"])));\r\nvar templateObject_1$j;\n\n/**\r\n * A simple styled `<tr>`\r\n *\r\n * https://chadlavi.github.io/clear/#/table#tablerow\r\n */\r\nvar TableRow = styled('tr')(templateObject_1$k || (templateObject_1$k = __makeTemplateObject([\"\\n  &:nth-child(even) {\\n    \", \" {\\n      background-color: var(--clear-zebra);\\n    }\\n    \", \":first-child {\\n      border-radius: var(--clear-unit) 0 0 var(--clear-unit);\\n    }\\n    \", \":last-child {\\n      border-radius: 0 var(--clear-unit) var(--clear-unit) 0;\\n    }\\n  }\\n\"], [\"\\n  &:nth-child(even) {\\n    \", \" {\\n      background-color: var(--clear-zebra);\\n    }\\n    \", \":first-child {\\n      border-radius: var(--clear-unit) 0 0 var(--clear-unit);\\n    }\\n    \", \":last-child {\\n      border-radius: 0 var(--clear-unit) var(--clear-unit) 0;\\n    }\\n  }\\n\"])), TableCell, TableCell, TableCell);\r\nvar templateObject_1$k;\n\n/**\r\n * Generates a table using Clear's `<Table>`, `<TableHead>`, `<TableBody>`, `<TableRow>`, and `<TableCell>` components\r\n * based on the `data` array and `headers` array passed to it.\r\n *\r\n * https://chadlavi.github.io/clear/#/table#generatetable\r\n */\r\nvar GenerateTable = function (_a) {\r\n    var data = _a.data, headers = _a.headers;\r\n    return (createElement(Table, null,\r\n        createElement(TableHead, null,\r\n            createElement(TableRow, null, headers.map(function (h, i) { return (createElement(TableCell, { key: h + \"-\" + i, as: 'th' }, typeof h === 'string' ? \"\" + h.charAt(0).toUpperCase() + h.slice(1) : h.label || h.key)); }))),\r\n        createElement(TableBody, null, data.map(function (r) { return (createElement(TableRow, { key: JSON.stringify(r) }, headers.map(function (c, i) { return (createElement(TableCell, { key: c + \"-\" + i }, r[typeof c === 'string' ? c : c.key])); }))); }))));\r\n};\n\nvar Wrapper = styled.div(templateObject_1$l || (templateObject_1$l = __makeTemplateObject([\"\\n  align-items: center;\\n  display: flex;\\n  margin: var(--clear-unit);\\n\"], [\"\\n  align-items: center;\\n  display: flex;\\n  margin: var(--clear-unit);\\n\"])));\r\nvar InputWrapper = styled.div(templateObject_2$1 || (templateObject_2$1 = __makeTemplateObject([\"\\n  display: block;\\n  height: var(--clear-font-size-label);\\n  width: var(--clear-font-size-label);\\n  position: relative;\\n\"], [\"\\n  display: block;\\n  height: var(--clear-font-size-label);\\n  width: var(--clear-font-size-label);\\n  position: relative;\\n\"\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n])));\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar InputBase$1 = function (_a) {\r\n    var error = _a.error, label = _a.label, props = __rest(_a, [\"error\", \"label\"]);\r\n    return (createElement(\"input\", __assign({}, props, { type: 'checkbox' })));\r\n};\r\nvar StyledInput = styled(InputBase$1)(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n  -webkit-appearance: none;\\n  background: var(--clear-\", \");\\n  border-radius: calc(var(--clear-unit) / 4);\\n  border: 1px solid var(--clear-\", \");\\n  display: block;\\n  height: var(--clear-font-size-label);\\n  margin: 0;\\n  width: var(--clear-font-size-label);\\n  opacity: \", \";\\n  cursor: \", \";\\n  \", \"\\n  \", \"\\n\"], [\"\\n  -webkit-appearance: none;\\n  background: var(--clear-\", \");\\n  border-radius: calc(var(--clear-unit) / 4);\\n  border: 1px solid var(--clear-\", \");\\n  display: block;\\n  height: var(--clear-font-size-label);\\n  margin: 0;\\n  width: var(--clear-font-size-label);\\n  opacity: \", \";\\n  cursor: \", \";\\n  \", \"\\n  \", \"\\n\"])), function (p) { return p.checked ? (p.error ? 'error' : 'link') : 'background'; }, function (p) { return p.error ? 'error' : (p.checked ? 'link' : 'textColor'); }, function (p) { return p.disabled ? '0.5' : '1'; }, function (p) { return p.disabled ? 'not-allowed' : 'pointer'; }, focusStyle, function (p) { return p.error ? errorFocusStyle : ''; });\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar SVGBase = function (_a) {\r\n    var checked = _a.checked, props = __rest(_a, [\"checked\"]);\r\n    return (createElement(\"svg\", __assign({ version: '1.1', xmlns: 'http://www.w3.org/2000/svg', x: '0', y: '0' }, props)));\r\n};\r\nvar Icon = styled(SVGBase)(templateObject_4 || (templateObject_4 = __makeTemplateObject([\"\\n  fill: none;\\n  stroke: var(--clear-background);\\n  stroke-width: calc(var(--clear-unit) / 4 + 1px);\\n  pointer-events: none;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  display: \", \"\\n\"], [\"\\n  fill: none;\\n  stroke: var(--clear-background);\\n  stroke-width: calc(var(--clear-unit) / 4 + 1px);\\n  pointer-events: none;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  display: \", \"\\n\"])), function (p) { return p.checked ? 'block' : 'none'; });\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar LabelBase$1 = function (_a) {\r\n    var disabled = _a.disabled, error = _a.error, props = __rest(_a, [\"disabled\", \"error\"]);\r\n    return (createElement(\"label\", __assign({}, props)));\r\n};\r\nvar StyledLabel = styled(LabelBase$1)(templateObject_5 || (templateObject_5 = __makeTemplateObject([\"\\n  \", \";\\n  opacity: \", \";\\n  cursor: \", \";\\n  margin-left: var(--clear-unit);\\n\"], [\"\\n  \", \";\\n  opacity: \", \";\\n  cursor: \", \";\\n  margin-left: var(--clear-unit);\\n\"])), function (p) { return p.error ? 'color: var(--clear-error)' : ''; }, function (p) { return p.disabled ? '0.5' : '1'; }, function (p) { return p.disabled ? 'not-allowed' : 'pointer'; });\r\nvar Checkbox = function (props) {\r\n    var error = props.error, label = props.label, other = __rest(props, [\"error\", \"label\"]);\r\n    return (createElement(Wrapper, null,\r\n        createElement(InputWrapper, null,\r\n            createElement(StyledInput, __assign({ error: error }, other)),\r\n            createElement(Icon, { checked: other.checked, viewBox: '0 0 24 24' },\r\n                createElement(\"polyline\", { points: '20 6 9 17 4 12' }))),\r\n        label &&\r\n            createElement(StyledLabel, { disabled: other.disabled, error: error, htmlFor: other.id }, label)));\r\n};\r\nvar templateObject_1$l, templateObject_2$1, templateObject_3, templateObject_4, templateObject_5;\n\nvar Wrapper$1 = styled.div(templateObject_1$m || (templateObject_1$m = __makeTemplateObject([\"\\n  align-items: center;\\n  display: flex;\\n  margin: var(--clear-unit);\\n\"], [\"\\n  align-items: center;\\n  display: flex;\\n  margin: var(--clear-unit);\\n\"])));\r\nvar InputWrapper$1 = styled.div(templateObject_2$2 || (templateObject_2$2 = __makeTemplateObject([\"\\n  display: block;\\n  height: var(--clear-font-size-label);\\n  width: var(--clear-font-size-label);\\n  position: relative;\\n\"], [\"\\n  display: block;\\n  height: var(--clear-font-size-label);\\n  width: var(--clear-font-size-label);\\n  position: relative;\\n\"\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n])));\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar InputBase$2 = function (_a) {\r\n    var error = _a.error, label = _a.label, props = __rest(_a, [\"error\", \"label\"]);\r\n    return (createElement(\"input\", __assign({}, props, { type: 'radio' })));\r\n};\r\nvar StyledInput$1 = styled(InputBase$2)(templateObject_3$1 || (templateObject_3$1 = __makeTemplateObject([\"\\n  -webkit-appearance: none;\\n  background: var(--clear-\", \");\\n  border-radius: var(--clear-font-size-label);\\n  border: 1px solid var(--clear-\", \");\\n  display: block;\\n  height: var(--clear-font-size-label);\\n  margin: 0;\\n  width: var(--clear-font-size-label);\\n  opacity: \", \";\\n  cursor: \", \";\\n  \", \"\\n  \", \"\\n\"], [\"\\n  -webkit-appearance: none;\\n  background: var(--clear-\", \");\\n  border-radius: var(--clear-font-size-label);\\n  border: 1px solid var(--clear-\", \");\\n  display: block;\\n  height: var(--clear-font-size-label);\\n  margin: 0;\\n  width: var(--clear-font-size-label);\\n  opacity: \", \";\\n  cursor: \", \";\\n  \", \"\\n  \", \"\\n\"])), function (p) { return p.checked ? (p.error ? 'error' : 'link') : 'background'; }, function (p) { return p.error ? 'error' : (p.checked ? 'link' : 'textColor'); }, function (p) { return p.disabled ? '0.5' : '1'; }, function (p) { return p.disabled ? 'not-allowed' : 'pointer'; }, focusStyle, function (p) { return p.error ? errorFocusStyle : ''; });\r\nvar SVGContainer = styled.div(templateObject_4$1 || (templateObject_4$1 = __makeTemplateObject([\"\\n  pointer-events: none;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: calc(var(--clear-font-size-label) * 10);\\n  height: calc(var(--clear-font-size-label) * 10);\\n  transform-origin: top left;\\n  padding: 20px;\\n  transform: scale(0.1);\\n  svg {\\n    width: 100%;\\n    height: 100%;\\n  }\\n\"], [\"\\n  pointer-events: none;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: calc(var(--clear-font-size-label) * 10);\\n  height: calc(var(--clear-font-size-label) * 10);\\n  transform-origin: top left;\\n  padding: 20px;\\n  transform: scale(0.1);\\n  svg {\\n    width: 100%;\\n    height: 100%;\\n  }\\n\"\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n])));\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar SVGBase$1 = function (_a) {\r\n    var checked = _a.checked, props = __rest(_a, [\"checked\"]);\r\n    return (createElement(SVGContainer, null,\r\n        createElement(\"div\", null,\r\n            createElement(\"svg\", __assign({ viewBox: '0 0 100 100' }, props),\r\n                createElement(\"circle\", { cx: '50', cy: '50', r: '40', stroke: 'white', fill: 'none', strokeWidth: '20' })))));\r\n};\r\nvar Icon$1 = styled(SVGBase$1)(templateObject_5$1 || (templateObject_5$1 = __makeTemplateObject([\"\\n  display: \", \"\\n\"], [\"\\n  display: \", \"\\n\"])), function (p) { return p.checked ? 'block' : 'none'; });\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar LabelBase$2 = function (_a) {\r\n    var disabled = _a.disabled, error = _a.error, props = __rest(_a, [\"disabled\", \"error\"]);\r\n    return (createElement(\"label\", __assign({}, props)));\r\n};\r\nvar StyledLabel$1 = styled(LabelBase$2)(templateObject_6 || (templateObject_6 = __makeTemplateObject([\"\\n  \", \";\\n  opacity: \", \";\\n  cursor: \", \";\\n  margin-left: var(--clear-unit);\\n\"], [\"\\n  \", \";\\n  opacity: \", \";\\n  cursor: \", \";\\n  margin-left: var(--clear-unit);\\n\"])), function (p) { return p.error ? 'color: var(--clear-error)' : ''; }, function (p) { return p.disabled ? '0.5' : '1'; }, function (p) { return p.disabled ? 'not-allowed' : 'pointer'; });\r\nvar Radio = function (props) {\r\n    var error = props.error, label = props.label, other = __rest(props, [\"error\", \"label\"]);\r\n    return (createElement(Wrapper$1, { role: 'radio' },\r\n        createElement(InputWrapper$1, { role: 'radio' },\r\n            createElement(StyledInput$1, __assign({ error: error, tabIndex: 0 }, other)),\r\n            createElement(Icon$1, { checked: other.checked })),\r\n        label &&\r\n            createElement(StyledLabel$1, { disabled: other.disabled, error: error, htmlFor: other.id }, label)));\r\n};\r\nvar templateObject_1$m, templateObject_2$2, templateObject_3$1, templateObject_4$1, templateObject_5$1, templateObject_6;\n\nexport { Button, CSSVariables, Checkbox, Code, CodeBlock, GenerateTable, GlobalStyles, Grid, GridItem, Header, Input, Label, Link, Page, Paragraph, Radio, ScrollContainer, Select, SkipLink, Table, TableBody, TableCell, TableHead, TableRow, colors, errorFocusStyle, focusStyle, handleMutliSelectOnChange, numbers, useBreakpoint, useDarkMode, useMediaQuery, useResponsiveColor };\n","import * as React from 'react'\nimport {HashLink} from 'react-router-hash-link'\nimport {setTitle} from '../utils'\nimport {\n  Button,\n  Code,\n  Header,\n  Link,\n  Paragraph,\n} from '../component-lib'\n\nconst onClick = (copy: string) =>  (e: React.MouseEvent<HTMLButtonElement>): void => {\n  e.preventDefault()\n  alert(copy)\n}\n\nexport const ButtonPage: React.FC = () =>\n  <>\n    {setTitle('Button')}\n    <Header><Code>{'<Button>'}</Code></Header>\n    <Paragraph>\n      The <Code>Button</Code> component is a simple styled wrapper around an HTML <Code>{'<button>'}</Code>.\n    </Paragraph>\n    <Header as='h2' id='props'>Props: <Code>ButtonProps</Code></Header>\n    <Paragraph>\n      Besides the standard props an HTML <Code>{'<button>'}</Code> accepts, <Code>Button</Code> also accepts the\n      prop <Code>primary?: boolean</Code> to mark a button as a primary call to action button.\n    </Paragraph>\n    <Header as='h2' id='customization'>Customization</Header>\n    <Paragraph>\n      See <Link as={HashLink} to={'/start#customization'}>Customization</Link> discussion on the Getting started page.\n    </Paragraph>\n    <Header as='h2' id='examples'>\n      <Link href={'https://github.com/chadlavi/clear/blob/master/playground/src/Pages/ButtonPage.tsx#L31'}>\n        Examples\n      </Link>\n    </Header>\n    <Header as='h3' id='standard-button'>Standard button</Header>\n    <Paragraph>\n      <Button\n        onClick={onClick('You clicked the standard button')}\n      >\n        This is a standard button\n      </Button>\n    </Paragraph>\n    <Header as='h3' id='primary-button'>Primary button</Header>\n    <Paragraph>\n      <Button\n        primary\n        onClick={onClick('You clicked the primary button')}\n      >\n        This is a primary button\n      </Button>\n    </Paragraph>\n    <Header as='h3' id='disabled-button'>Disabled button</Header>\n    <Paragraph>\n      <Button\n        disabled\n        onClick={onClick('You\\'ll never see this alert because this button is disabled')}\n      >\n        This is a disabled standard button\n      </Button>\n    </Paragraph>\n    <Paragraph>\n      <Button\n        disabled\n        primary\n        onClick={onClick('You\\'ll never see this alert because this button is disabled')}\n      >\n        This is a disabled primary button\n      </Button>\n    </Paragraph>\n  </>\n","import * as React from 'react'\nimport {HashLink} from 'react-router-hash-link'\nimport {setTitle} from '../utils'\nimport styled from 'styled-components'\nimport {\n  Button,\n  ButtonProps,\n  Code,\n  CodeBlock,\n  Header,\n  Link,\n  Paragraph,\n  colors,\n  errorFocusStyle,\n  numbers,\n  useDarkMode,\n  useResponsiveColor,\n} from '../component-lib'\n\nconst ErrorButton = styled(Button)`\nbackground: var(--clear-error);\ncolor: var(--clear-background);\n`\nconst BigErrorButton = styled(Button)`\nbackground: ${colors.light.error};\ncolor: ${colors.light.background};\nfont-size: ${numbers.fontSize.default * 2}px;\nborder-radius: ${numbers.unit * 2}px;\npadding: ${numbers.unit * 4}px ${numbers.unit * 8}px;\n`\n\ninterface ExtendedButtonProps extends ButtonProps {\n  background: string\n  color: string\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst ExtendedButton = ({background, color, ...props}: ExtendedButtonProps): JSX.Element => <Button {...props} />\n\nconst ResponsiveBigErrorButton = styled(ExtendedButton)`\n  background: ${(p): string => p.background};\n  color: ${(p): string => p.color};\n  font-size: ${numbers.fontSize.default * 2}px;\n  border-radius: ${numbers.unit * 2}px;\n  padding: ${numbers.unit * 4}px ${numbers.unit * 8}px;\n`\n\nconst FocusableResponsiveBigErrorButton = styled(ExtendedButton)`\n  background: ${(p): string => p.background};\n  color: ${(p): string => p.color};\n  font-size: ${numbers.fontSize.default * 2}px;\n  border-radius: ${numbers.unit * 2}px;\n  padding: ${numbers.unit * 4}px ${numbers.unit * 8}px;\n  ${errorFocusStyle}\n`\n\nexport const GettingStartedPage: React.FC = () =>\n  <>\n    {setTitle('Getting started')}\n    <Header>Getting started</Header>\n    <Header as ='h2'>Contents</Header>\n    <Paragraph as={'nav'}>\n      <Link as={HashLink} to={'#npmrc'}>Editing your <Code>.npmrc</Code></Link><br />\n      <Link as={HashLink} to={'#installing'}>Installing</Link><br />\n      <Link as={HashLink} to={'#usage'}>Usage</Link><br />\n      <Link as={HashLink} to={'#globals'}>Globals</Link><br />\n      <Link as={HashLink} to={'#structure'}>Structure</Link><br />\n      <Link as={HashLink} to={'#customization'}>Customization</Link><br />\n    </Paragraph>\n    <Header as='h2' id='npmrc'>Editing your <Code>.npmrc</Code></Header>\n    <Paragraph>\n      Clear is hosted on GitHub package registry. To install it, add the following to your project's <Code>.npmrc\n      </Code>:\n    </Paragraph>\n    <CodeBlock>registry=https://npm.pkg.github.com/chadlavi</CodeBlock>\n    <Header as='h2' id='installing'>Installing</Header>\n    <Paragraph>\n      After editing your <Code>.npmrc</Code>, run the following to install Clear and its required peer\n      dependency, <Code>styled-components</Code>.\n    </Paragraph>\n    <CodeBlock>{`npm i @chadlavi/clear styled-components\n\n# only necessary if you use TypeScript\nnpm i -D @types/styled-components`}</CodeBlock>\n    <Paragraph>\n      (Note: we assume here that you have already installed <Code>react</Code>. If not, install that too! Clear only\n      works in React applications.)\n    </Paragraph>\n    <Header as='h2' id='usage'>Usage</Header>\n    <Header as='h3' id='globals'>Globals</Header>\n    <Paragraph>\n      When using Clear, you need to include a single instance\n      of <Link as={HashLink} to={'/global-styles#cssvariables'}><Code>{'<CSSVariables />'}</Code></Link> at the top\n      level of your application. You should also include an instance\n      of <Link as={HashLink} to={'/global-styles#globalstyles'}><Code>{'<GlobalStyles />'}</Code></Link>. Something\n      like:\n    </Paragraph>\n    <CodeBlock>{`// inside your index.js file\n\nimport * as React from 'react'\nimport {MyApp} from './MyApp'\nimport ReactDOM from 'react-dom'\nimport {\n  CSSVariables,\n  GlobalStyles,\n} from '@chadlavi/clear'\n\nReactDOM.render(\n  <React.StrictMode>\n    <CSSVariables/>\n    <GlobalStyles />\n    <MyApp />\n  </React.StrictMode>,\ndocument.getElementById('root')\n)`}</CodeBlock>\n    <Header as='h3' id='structure'>Structure</Header>\n    <Paragraph>\n      You should wrap content in your app with a <Link as={HashLink} to ={'/layout#page'}><Code>{'<Page>'}</Code>\n      </Link>.\n    </Paragraph>\n    <Paragraph>\n      Use the <Link as={HashLink} to ={'/layout#grid'}><Code>{'<Grid>'}</Code> and <Code>{'<GridItem>'}</Code>\n      </Link> components to organize content on a 12-column grid.\n    </Paragraph>\n    <Header as='h3'>Import statements</Header>\n    <Paragraph>\n      All components in Clear are exported at the top level in the library, so you can write import statements like\n    </Paragraph>\n    <CodeBlock>{`import {\n  CSSVariables,\n  GlobalStyles,\n  Header,\n  Link,\n  Page,\n} from '@chadlavi/clear'`}\n    </CodeBlock>\n    <Header as='h3' id='customization'>Customization</Header>\n    <Paragraph>\n      Since <Link as={HashLink} to={'/global-styles#cssvariables'}><Code>{'<CSSVariables />'}</Code></Link> creates\n      global CSS variables, you can access them in your app's styles.\n    </Paragraph>\n    <Paragraph>\n      Let's say you want to create an error button. You can access the Clear CSS variable <Code>var(--clear-error)\n      </Code> like this:\n    </Paragraph>\n    <CodeBlock>{`// ErrorButton.tsx\n\nimport * as React from 'react'\nimport styled from 'styled-components'\nimport {Button} from '@chadlavi/clear'\n\nexport const ErrorButton = styled(Button)\\`\n  background: var(--clear-error);\n  color: var(--clear-background);\n\\``}</CodeBlock>\n    <CodeBlock>{`// somewhere in your app\n\n<ErrorButton\n  onClick={(): void => alert('You clicked the error button')}\n>\n  Error button\n</ErrorButton>`}</CodeBlock>\n    <Paragraph>\n      <ErrorButton\n        onClick={(): void => alert('You clicked the error button')}\n      >\n        Error button\n      </ErrorButton>\n    </Paragraph>\n    <Paragraph>\n      Note that CSS variables from Clear automatically change to accommodate dark mode; the variable <Code>\n      var(--clear-error)</Code> will yield <Code>{colors.light.error}</Code> in light mode\n      and <Code>{colors.dark.error}</Code> in dark mode. Your browser is currently\n      in {useDarkMode() ? 'dark' : 'light'} mode, so the button above should have background\n      color <Code>{useResponsiveColor('error')}</Code>.\n    </Paragraph>\n    <Header as='h4'>Accessing theme values in code</Header>\n    <Paragraph>\n      If you use JSS or just need access to a theme value in your code, you can also access color and number values\n      from Clear directly in your code with the exported <Code>colors</Code> and <Code>numbers</Code> objects:\n    </Paragraph>\n    <CodeBlock>{`// BigErrorButton.tsx\n\nimport * as React from 'react'\nimport styled from 'styled-components'\nimport {\n  Button,\n  colors,\n  numbers,\n} from '@chadlavi/clear'\n\nexport const BigErrorButton = styled(Button)\\`\n  background: \\${colors.light.error};\n  border-radius: \\${numbers.unit * 2}px;\n  color: \\${colors.light.background};\n  font-size: \\${numbers.fontSize.default * 2}px;\n  padding: \\${numbers.unit * 4}px \\${numbers.unit * 8}px;\n\\``}</CodeBlock>\n    <CodeBlock>{`// somewhere in your app\n\n<BigErrorButton\n  onClick={(): void => alert('You clicked the big error button')}\n>\n  Big error button (BEB)\n</BigErrorButton>`}</CodeBlock>\n    <Paragraph>\n      <BigErrorButton\n        onClick={(): void => alert('You clicked the big error button')}\n      >\n        Big error button (BEB)\n      </BigErrorButton>\n    </Paragraph>\n    <Paragraph>\n      Note that in this case, the colors used will <i>not</i> respond to system dark/light mode changes. If you toggle\n      your device back and forth between light and dark mode, you'll see that the big error button example above does\n      not change.\n    </Paragraph>\n    <Paragraph>\n      You can solve this by using the React hook <Code>useResponsiveColor: (name: Color) => string</Code> inside a React\n      functional component to select a color value.\n    </Paragraph>\n    <CodeBlock>{`// ResponsiveBigErrorButton.tsx\n\nimport * as React from 'react'\nimport styled from 'styled-components'\nimport {\n  ButtonProps,\n  Button,\n  numbers,\n  useResponsiveColor,\n} from '@chadlavi/clear'\n\ninterface ExtendedButtonProps extends ButtonProps {\n  background: string\n  color: string\n}\n\nconst ExtendedButton = (\n  {background, color, ...props}: ExtendedButtonProps\n): JSX.Element => <Button {...props} />\n\nexport const ResponsiveBigErrorButton = styled(ExtendedButton)\\`\n  background: \\${(p): string => p.background};\n  color: \\${(p): string => p.color};\n  font-size: \\${numbers.fontSize.default * 2}px;\n  border-radius: \\${numbers.unit * 2}px;\n  padding: \\${numbers.unit * 4}px ${numbers.unit * 8}px;\n\\``}</CodeBlock>\n    <CodeBlock>{`// somewhere inside your React functional component\n    \n<ResponsiveBigErrorButton\n  background={useResponsiveColor('error')}\n  color={useResponsiveColor('background')}\n  onClick={(): void => alert('You clicked the responsive big error button')}\n>\n  Responsive BEB\n</ResponsiveBigErrorButton>`}</CodeBlock>\n    <Paragraph>\n      <ResponsiveBigErrorButton\n        background={useResponsiveColor('error')}\n        color={useResponsiveColor('background')}\n        onClick={(): void => alert('You clicked the responsive big error button')}\n      >\n        Responsive BEB\n      </ResponsiveBigErrorButton>\n    </Paragraph>\n    <Paragraph>\n      You can also access the standard Clear focus style and error focus style with <Code>focusStyle</Code> and <Code>\n      errorFocusStyle</Code>. Let's give our responsive big error button an error focus style:\n    </Paragraph>\n    <CodeBlock>{`// FocusableResponsiveBigErrorButton.tsx\n \nimport * as React from 'react'\nimport styled from 'styled-components'\nimport {\n  ButtonProps,\n  Button,\n  numbers,\n  useResponsiveColor,\n} from '@chadlavi/clear'\n\ninterface ExtendedButtonProps extends ButtonProps {\n  background: string\n  color: string\n}\n\nconst ExtendedButton = (\n  {background, color, ...props}: ExtendedButtonProps\n): JSX.Element => <Button {...props} />\n\nexport const FocusableResponsiveBigErrorButton = styled(ExtendedButton)\\`\n  background: \\${(p): string => p.background};\n  color: \\${(p): string => p.color};\n  font-size: \\${numbers.fontSize.default * 2}px;\n  border-radius: \\${numbers.unit * 2}px;\n  padding: \\${numbers.unit * 4}px ${numbers.unit * 8}px;\n  \\${errorFocusStyle}\n\\``}</CodeBlock>\n    <CodeBlock>{`// somewhere inside your React functional component\n\n<FocusableResponsiveBigErrorButton\n  background={useResponsiveColor('error')}\n  color={useResponsiveColor('background')}\n  onClick={(): void => alert(\n    'Focus this button and the last one to see the difference'\n  )}\n>\n  Responsive BEB with error focus\n</FocusableResponsiveBigErrorButton>`}</CodeBlock>\n    <Paragraph>\n      <FocusableResponsiveBigErrorButton\n        background={useResponsiveColor('error')}\n        color={useResponsiveColor('background')}\n        onClick={(): void => alert('Focus this button and the last one to see the difference')}\n      >\n        Responsive BEB with error focus\n      </FocusableResponsiveBigErrorButton>\n    </Paragraph>\n  </>\n\n","import * as React from 'react'\nimport {HashLink} from 'react-router-hash-link'\nimport {setTitle} from '../utils'\nimport {\n  Code,\n  Header,\n  Link,\n  Paragraph,\n} from '../component-lib'\n\nexport const GlobalStylesPage: React.FC = () =>\n  <>\n    {setTitle('Globals')}\n    <Header>Globals</Header>\n    <Paragraph as={'nav'}>\n      <Link as={HashLink} to={'#cssvariables'}><Code>{'<CSSVariables>'}</Code></Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#dark-mode'}>dark mode</Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#globalstyles'}><Code>{'<GlobalStyles>'}</Code></Link>\n    </Paragraph>\n    <Header as='h2' id='cssvariables'><Code>{'<CSSVariables>'}</Code></Header>\n    <Paragraph>\n      Clear uses CSS variables extensively, so an instance of the <Code>CSSVariables</Code> component is\n      required at the top level in your application for Clear to work correctly. The component declares a set of CSS\n      variables with names that start with <Code>--clear-*</Code> that define the colors and measurements used in Clear\n      components.\n    </Paragraph>\n    <Header as='h3' id='dark-mode'>Dark mode</Header>\n    <Paragraph>\n      The <Code>CSSVariables</Code> component uses <Code>@media (prefers-color-scheme: dark)</Code> to define a set of\n      colors for use when the user's device is in dark mode. Switching between light and dark mode is handled\n      automatically.\n    </Paragraph>\n    <Header as='h2' id='globalstyles'><Code>{'<GlobalStyles>'}</Code></Header>\n    <Paragraph>\n      The <Code>GlobalStyles</Code> component applies styles to the <Code>{'<body>'}</Code> tag. As such, <strong>this\n      component has side effects</strong>, because it creates CSS rules that affect elements outside the Clear design\n      system.\n    </Paragraph>\n    <Paragraph>\n      Omitting the <Code>GlobalStyles</Code> component in your application will mean that any content not contained in\n      a <Link as={HashLink} to={'/layout#page'}><Code>Page</Code></Link> component may have unpredictable colors,\n      background colors, font sizes, and margins. Omitting <Code>GlobalStyles</Code> is not recommended.\n    </Paragraph>\n  </>\n","import * as React from 'react'\nimport {setTitle} from '../utils'\nimport {\n  Code,\n  CodeBlock,\n  Header,\n  Link,\n  Paragraph,\n  numbers,\n  useBreakpoint,\n  useDarkMode,\n  useMediaQuery,\n  useResponsiveColor,\n} from '../component-lib'\n\nexport const HelpersPage: React.FC = () =>\n  <>\n    {setTitle('Helpers')}\n    <Header>Helpers</Header>\n    <Paragraph>\n      The following <Link href='https://reactjs.org/docs/hooks-intro.html'>React hooks</Link> are available in Clear.\n      When using them, please bear in mind the <Link href='https://reactjs.org/docs/hooks-rules.html'>rules of\n      hooks</Link> &mdash; most importantly, that <i>React hooks can only be used inside functional React\n      components</i>.\n    </Paragraph>\n    <Header as='h3' id='usemediaquery'><Code>useMediaQuery</Code></Header>\n    <CodeBlock>{'useMediaQuery(query: string) => boolean'}</CodeBlock>\n    <Paragraph>\n      This basic React hook returns a boolean value that reflects whether or not the given <Code>query</Code> matches.\n    </Paragraph>\n    <CodeBlock>\n      {'Your browser is in {useMediaQuery(\\'(orientation: landscape)\\') ? \\'landscape\\' : \\'portrait\\'} orientation.'}\n    </CodeBlock>\n    <Paragraph>\n      Your browser is in {useMediaQuery('(orientation: landscape)') ? 'landscape' : 'portrait'} orientation.\n    </Paragraph>\n    <Header as='h3' id='usebreakpoint'><Code>useBreakpoint</Code></Header>\n    <CodeBlock>{`type Breakpoint = 'xs' | 'sm' | 'md' | 'lg'\n\nuseBreakpoint(breakpoint: Breakpoint) => boolean`}</CodeBlock>\n    <Paragraph>\n      Returns a boolean value that reflects whether or not the user's viewport is smaller than the given breakpoint.\n    </Paragraph>\n    <CodeBlock>\n      {'Your browser is {useBreakpoint(\\'sm\\') ? \\'narrower\\' : \\'wider\\'} than {numbers.breakpoint.sm}px.'}\n    </CodeBlock>\n    <Paragraph>\n      Your browser is {useBreakpoint('sm') ? 'narrower' : 'wider'} than {numbers.breakpoint.sm}px.\n    </Paragraph>\n    <Header as='h3' id='usedarkmode'><Code>useDarkMode</Code></Header>\n    <CodeBlock>{'useDarkMode() => boolean'}</CodeBlock>\n    <Paragraph>\n      Returns a boolean value that reflects whether or not the user's browser is currently in dark mode.\n    </Paragraph>\n    <CodeBlock>\n      {'Your browser is in {useDarkMode() ? \\'dark\\' : \\'light\\'} mode.'}\n    </CodeBlock>\n    <Paragraph>\n      Your browser is in {useDarkMode() ? 'dark' : 'light'} mode.\n    </Paragraph>\n    <Header as='h3' id='useresponsivecolor'><Code>useResponsiveColor</Code></Header>\n    <CodeBlock>{`type Colors = 'background' | 'blue' | 'border' | 'error' | 'link' |\n  'textColor' | 'violet' | 'zebra'\n\nuseResponsiveColor(color: Colors) => string`}</CodeBlock>\n    <Paragraph>\n      Returns the CSS color value that matches the user's browser's current theme (light or dark mode) for the given\n      color.\n    </Paragraph>\n    <CodeBlock>\n      {`<Paragraph style={{color: useResponsiveColor('violet')}}>\n  This paragraph is <b>'{useResponsiveColor('violet')}'</b>, the tone of violet\n  that has appropriate contrast on <b>{useResponsiveColor('background')}</b>,\n  the current background color.\n</Paragraph>`}\n    </CodeBlock>\n    <Paragraph style={{color: useResponsiveColor('violet')}}>\n      This paragraph is <b>'{useResponsiveColor('violet')}'</b>, the tone of violet that has appropriate contrast\n      on <b>{useResponsiveColor('background')}</b>, the current background color.\n    </Paragraph>\n  </>\n","import * as React from 'react'\nimport {setTitle} from '../utils'\nimport {\n  Code,\n  Header,\n  Link,\n  Paragraph,\n} from '../component-lib'\n\nexport const HomePage: React.FC = () =>\n  <>\n    {setTitle()}\n    <Header>Clear</Header>\n    <Paragraph>\n      <Link href={'https://github.com/chadlavi/clear'}>Clear</Link> is a simple personal Design System for TypeScript\n      React apps created by <Link href={'https://github.com/chadlavi'}>Chad Lavimoniere</Link>.\n    </Paragraph>\n    <Paragraph>\n      Clear features automatic dark mode support and minimalist styling via <Code>styled-components</Code>.\n    </Paragraph>\n  </>\n","import * as React from 'react'\nimport {HashLink} from 'react-router-hash-link'\nimport {setTitle} from '../utils'\nimport styled from 'styled-components'\nimport {\n  Checkbox,\n  Code,\n  CodeBlock,\n  Grid,\n  GridItem,\n  Header,\n  Input,\n  Label,\n  Link,\n  Paragraph,\n  Radio,\n  Select,\n  SelectProps,\n  handleMutliSelectOnChange,\n} from '../component-lib'\n\nconst FancyPinkParagraph = styled(Paragraph)`\n  border-radius: var(--clear-unit);\n  color: purple;\n  padding: var(--clear-unit);\n  background: pink;\n  label {\n    font-style: italic;\n  }\n`\n\nconst FancyPinkInput = styled(Input)`\n  border-color: purple;\n  border-radius: var(--clear-unit);\n  background: pink;\n  color: purple;\n  font-size: calc(var(--clear-unit) * 3);\n  ::selection {\n    color: pink;\n    background: purple;\n  }\n  &:focus {\n    box-shadow: 0 0 0 calc(var(--clear-unit) / 2 - 1px) pink,\n    0 0 0 calc(var(--clear-unit) / 2) purple;\n  }\n`\n\nconst selectOptions: SelectProps['options'] = [\n  {label: 'Buzz cola', value: 'buzz'},\n  {label: 'Slurm', value: 'slurm'},\n  {label: 'Slurm loco', value: 'slurm loco'},\n  {label: 'Oil-ade', value: 'oilade'},\n  {label: 'José Servo tequila', value: 'jose servo'},\n  {label: '\\'66 Thunderschewitz', value: 'thunderschewitz'},\n  {label: 'Löwenbrau', value: 'lowenbrau'},\n  {label: 'Dr. Jitter', value: 'dr jitter'},\n  {label: '100 coffees', value: '100 coffees'},\n  {label: 'Maltese liquor', value: 'maltese liquor'},\n]\n\nexport const InputPage: React.FC = () => {\n  const [numericValue, setNumericValue] = React.useState<number | undefined>()\n  const [textValue, setTextValue] = React.useState<string | undefined>()\n  const [errorValue, setErrorValue] = React.useState<string | undefined>()\n  const [disabledValue] = React.useState<string | undefined>()\n  const [requiredValue, setRequiredValue] = React.useState<string | undefined>()\n  const [customValue, setCustomValue] = React.useState<string | undefined>()\n  const [textAreaValue, setTextAreaValue] = React.useState<string | undefined>()\n\n  const [singleSelectValue, setSingleSelectValue] = React.useState<string | number | string[] | undefined>()\n  const [errorSingleSelectValue, setErrorSingleSelectValue] = React.useState<string | number | string[] | undefined>()\n  const [\n    requiredSingleSelectValue,\n    setRequiredSingleSelectValue\n  ] = React.useState<string | number | string[] | undefined>()\n\n  const [multiSelectValue, setMultiSelectValue] = React.useState<string[] | undefined>()\n  const [errorMultiSelectValue, setErrorMultiSelectValue] = React.useState<string[] | undefined>()\n  const [requiredMultiSelectValue, setRequiredMultiSelectValue] = React.useState<string[] | undefined>()\n\n  const [checked, setChecked] = React.useState(false)\n  const [errorChecked, setErrorChecked] = React.useState(false)\n\n  const [radioValue, setRadioValue] = React.useState<string>()\n\n  const handleFancyChange = (e: React.ChangeEvent<HTMLInputElement>): void => setCustomValue(e.currentTarget.value)\n\n  return (\n    <>\n      {setTitle('Input')}\n      <Header id='input'>Inputs</Header>\n      <Paragraph as={'nav'}>\n        <Link as={HashLink} to={'#input'}><Code>{'<Input>'}</Code></Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#inputprops'}><Code>InputProps</Code></Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#select'}><Code>{'<Select>'}</Code></Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#selectprops'}><Code>SelectProps</Code></Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#checkbox'}><Code>{'<Checkbox>'}</Code></Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#checkboxprops'}><Code>CheckBoxProps</Code></Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#radio'}><Code>{'<Radio>'}</Code></Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#radioprops'}><Code>RadioProps</Code></Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#customization'}>Customization</Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#examples'}>Examples</Link>\n      </Paragraph>\n      <Header as='h2' id='input'><Code>{'<Input>'}</Code></Header>\n      <Paragraph>\n        The <Code>Input</Code> component is a styled wrapper around an HTML <Code>{'<input>'}</Code> element.\n      </Paragraph>\n      <Paragraph>\n        Note that <Code>Input</Code> should always be paired with\n        a <Link as={HashLink} to={'/text#label'}><Code>{'<Label>'}</Code></Link>.\n      </Paragraph>\n      <Header as='h2' id='props'>Props: <Code>InputProps</Code></Header>\n      <Paragraph>\n        <Code>Input</Code> accepts all the props you'd expect for an HTML <Code>{'<input>'}</Code>, plus the\n        prop <Code>error?: boolean</Code> to toggle an error state.\n      </Paragraph>\n      <Paragraph>\n        You can also use\n        the <Link href={'https://styled-components.com/docs/api#as-polymorphic-prop'}><Code>as</Code> prop</Link> to\n        render a <Code>{'<textarea>'}</Code> instead of an <Code>{'<input>'}</Code>, as shown in\n        the <Link as={HashLink} to={'#examples'}>examples</Link> below.\n      </Paragraph>\n      <Header as='h2' id='select'><Code>{'<Select>'}</Code></Header>\n      <Paragraph>\n        <Code>{'<Select>'}</Code> is a wrapper around HTML <Code>{'<select>'}</Code>. Instead of manually building a\n        set of child <Code>{'<option>'}</Code>s as in HTML, you pass an array of options to\n        the <Code>options</Code> prop.\n      </Paragraph>\n      <Header as='h3' id='selectprops'>Props: <Code>SelectProps</Code></Header>\n      <Paragraph>\n        Besides the normal props that could be passed to an HTML<Code>{'<select>'}</Code> in any React app,\n        Clear's <Code>{'<Select>'}</Code> also has the required prop <Code>options</Code>, which expects a value of\n        type\n      </Paragraph>\n      <CodeBlock>{'{label: string; value: string | number | string[]}[]'}</CodeBlock>\n      <Paragraph>\n        <Code>{'<Select>'}</Code> also accepts the props <Code>error?: boolean</Code> to control whether it appears in\n        an error state, and <Code>label?: string</Code> to provide label content for the field.\n      </Paragraph>\n\n      <Header as='h2' id='checkbox'><Code>{'<Checkbox>'}</Code></Header>\n      <Paragraph>\n        <Code>{'<Checkbox>'}</Code> is a wrapper around HTML <Code>{'<input type=\\'checkbox\\'>'}</Code>.\n      </Paragraph>\n      <Header as='h3' id='selectprops'>Props: <Code>CheckboxProps</Code></Header>\n      <Paragraph>\n        <Code>{'<Checkbox>'}</Code> accepts the normal props that could be passed to an\n        HTML <Code>{'<input type=\\'checkbox\\'>'}</Code>. You can also pass the props <Code>label?: string</Code> to\n        define a label for the checkbox, and <Code>error?: boolean</Code> to toggle an error state.\n      </Paragraph>\n      <Header as='h2' id='radio'><Code>{'<Radio>'}</Code></Header>\n      <Paragraph>\n        <Code>{'<Radio>'}</Code> is a wrapper around HTML <Code>{'<input type=\\'radio\\'>'}</Code>.\n      </Paragraph>\n      <Header as='h3' id='selectprops'>Props: <Code>RadioProps</Code></Header>\n      <Paragraph>\n        Identically to <Code>{'<Checkbox>'}</Code>, <Code>{'<Radio>'}</Code> accepts the normal props that could be\n        passed to an HTML <Code>{'<input type=\\'checkbox\\'>'}</Code>. You can also pass the\n        props <Code>label?: string</Code> to define a label for the radio option,\n        and <Code>error?: boolean</Code> to toggle an error state for the option.\n      </Paragraph>\n      <Header as='h2' id='customization'>Customization</Header>\n      <Paragraph>\n        See <Link as={HashLink} to={'/start#customization'}>Customization</Link> discussion on the Getting started page.\n      </Paragraph>\n      <Paragraph>\n        Here's an example of a customized Input:\n      </Paragraph>\n      <CodeBlock>{`const FancyPinkParagraph = styled(Paragraph)\\`\n  border-radius: var(--clear-unit);\n  color: purple;\n  padding: var(--clear-unit);\n  background: pink;\n  label {\n    font-style: italic;\n  }\n\\`\n\nconst FancyPinkInput = styled(Input)\\`\n  border-color: purple;\n  border-radius: var(--clear-unit);\n  background: pink;\n  color: purple;\n  font-size: calc(var(--clear-unit) * 3);\n  ::selection {\n    color: pink;\n    background: purple;\n  }\n  &:focus {\n    box-shadow: 0 0 0 calc(var(--clear-unit) / 2 - 1px) pink,\n    0 0 0 calc(var(--clear-unit) / 2) purple;\n  }\n\\`\n\n<FancyPinkParagraph>\n  <Label htmlFor={'fancy-input'}>Fancy pink input</Label>\n  <FancyPinkInput\n    id={'fancy-input'}\n    value={customValue}\n    onChange={handleFancyChange}\n  />\n</FancyPinkParagraph>`}</CodeBlock>\n      <FancyPinkParagraph>\n        <Label\n          htmlFor={'fancy-input'}>\n          {`Fancy pink input${customValue?.match(/fancy/i) ? '🌸' :''}`}\n        </Label>\n        <FancyPinkInput\n          id={'fancy-input'}\n          value={customValue}\n          onChange={handleFancyChange}\n        />\n      </FancyPinkParagraph>\n      <Header as='h2' id='examples'>\n        <Link href={'https://github.com/chadlavi/clear/blob/master/playground/src/Pages/InputPage.tsx#L188'}>\n          Examples\n        </Link>\n      </Header>\n      <Grid spacing={8}>\n        <GridItem>\n          <Header as='h3' id='input-examples'><Code>{'<Input>'}</Code></Header>\n        </GridItem>\n        <GridItem size={6}>\n          <Label htmlFor={'numeric-input'}>Numeric input</Label>\n          <Input\n            value={numericValue}\n            id={'numeric-input'}\n            type={'number'}\n            inputMode={'numeric'}\n            onChange={(e): void => setNumericValue(parseInt(e.currentTarget.value || '0', 10))}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label htmlFor={'text-input'}>Basic text input</Label>\n          <Input\n            id={'text-input'}\n            value={textValue}\n            onChange={(e): void => setTextValue(e.currentTarget.value)}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label error htmlFor={'error-input'}>Input with error</Label>\n          <Input\n            id={'error-input'}\n            value={errorValue}\n            error\n            onChange={(e): void => setErrorValue(e.currentTarget.value)}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label disabled htmlFor={'disabled-input'}>Disabled input</Label>\n          <Input\n            id={'disabled-input'}\n            value={disabledValue}\n            disabled\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label required htmlFor={'required-input'}>Input</Label>\n          <Input\n            id={'required-input'}\n            value={requiredValue}\n            required\n            onChange={(e): void => setRequiredValue(e.currentTarget.value)}\n          />\n        </GridItem>\n        <GridItem>\n          <Label htmlFor={'textarea-input'}>Input with <Code>{'as={\\'textarea\\'}'}</Code></Label>\n          <Input\n            as={'textarea'}\n            id={'textarea-input'}\n            value={textAreaValue}\n            rows={7}\n            onChange={(e: React.ChangeEvent<HTMLTextAreaElement>): void => setTextAreaValue(e.currentTarget.value)}\n          />\n        </GridItem>\n        <GridItem>\n          <Header as='h3' id='select-examples'><Code>{'<Select>'}</Code></Header>\n        </GridItem>\n        <GridItem size={6}>\n          <Label htmlFor={'single-select'}>Single select</Label>\n          <Select\n            id={'single-select'}\n            value={singleSelectValue}\n            onChange={(e): void => setSingleSelectValue(e.currentTarget.value)}\n            options={selectOptions}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label error htmlFor={'single-select-error'}>Single select with error</Label>\n          <Select\n            error\n            id={'single-select-error'}\n            value={errorSingleSelectValue}\n            onChange={(e): void => setErrorSingleSelectValue(e.currentTarget.value)}\n            options={selectOptions}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label required htmlFor={'single-select'}>Single select</Label>\n          <Select\n            id={'single-select'}\n            value={requiredSingleSelectValue}\n            onChange={(e): void => setRequiredSingleSelectValue(e.currentTarget.value)}\n            options={selectOptions}\n            required\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label disabled htmlFor={'disabled-select'}>Disabled single select</Label>\n          <Select\n            id={'disabled-select'}\n            disabled\n            options={selectOptions}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label htmlFor={'multiple-select'}>Multiple select</Label>\n          <Select\n            id={'multiple-select'}\n            multiple\n            onChange={handleMutliSelectOnChange(setMultiSelectValue)}\n            options={selectOptions}\n            size={3}\n            value={multiSelectValue}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label error htmlFor={'multiple-select-error'}>Multiple select with error</Label>\n          <Select\n            error\n            id={'multiple-select-error'}\n            multiple\n            onChange={handleMutliSelectOnChange(setErrorMultiSelectValue)}\n            options={selectOptions}\n            size={3}\n            value={errorMultiSelectValue}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label required htmlFor={'required-multiple-select'}>Multiple select</Label>\n          <Select\n            id={'required-multiple-select'}\n            multiple\n            onChange={handleMutliSelectOnChange(setRequiredMultiSelectValue)}\n            options={selectOptions}\n            required\n            size={3}\n            value={requiredMultiSelectValue}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label disabled htmlFor={'disabled-multiple-select'}>Disabled multiple select</Label>\n          <Select\n            id={'disabled-multiple-select'}\n            multiple\n            options={selectOptions}\n            disabled\n            size={3}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Header as='h3' id='checkbox-examples'><Code>{'<Checkbox>'}</Code></Header>\n          <Checkbox\n            checked={checked}\n            onChange={(e): void => setChecked(e.target.checked)}\n            id={'basic-checkbox'}\n            label={'Checkbox'}\n          />\n          <Checkbox\n            checked={errorChecked}\n            onChange={(e): void => setErrorChecked(e.target.checked)}\n            id={'error-checkbox'}\n            error\n            label={'Checkbox with error'}\n          />\n          <Checkbox\n            checked={false}\n            id={'disabled-checkbox'}\n            disabled\n            label={'Disabled checkbox'}\n          />\n          <Checkbox\n            checked={true}\n            id={'disabled-checkbox-checked'}\n            disabled\n            label={'Disabled checkbox (checked)'}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Header as='h3' id='radio-examples'><Code>{'<Radio>'}</Code></Header>\n          <form role={'radiogroup'}>\n            <Radio\n              checked={radioValue === 'standard'}\n              onChange={(e): void => setRadioValue(e.target.value)}\n              id={'basic-radio'}\n              label={'Radio button'}\n              name={'radio'}\n              value={'standard'}\n            />\n            <Radio\n              checked={radioValue === 'error'}\n              onChange={(e): void => setRadioValue(e.target.value)}\n              id={'error-radio'}\n              error\n              label={'Radio button with error'}\n              name={'radio'}\n              value={'error'}\n            />\n            <Radio\n              checked={radioValue === 'disabled'}\n              onChange={(e): void => setRadioValue(e.target.value)}\n              disabled\n              id={'disabled-radio'}\n              label={'Disabled radio button'}\n              name={'radio'}\n              value={'disabled'}\n            />\n          </form>\n        </GridItem>\n      </Grid>\n    </>\n  )\n}\n","import * as React from 'react'\nimport {HashLink} from 'react-router-hash-link'\nimport {setTitle} from '../utils'\nimport styled from 'styled-components'\nimport {\n  Code,\n  CodeBlock,\n  Grid,\n  GridItem,\n  GridItemSize,\n  Header,\n  Input,\n  Label,\n  Link,\n  Paragraph,\n  ScrollContainer,\n  numbers,\n} from '../component-lib'\n\ninterface ExampleContainerProps extends React.HTMLAttributes<HTMLDivElement> {\n  background?: string\n  color: string\n  padded?: boolean\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst ExampleContainer = ({background, color, padded, ...props}: ExampleContainerProps): JSX.Element =>\n  <div {...props} />\n\n\nconst ExampleBorder = styled(ExampleContainer)`\nwidth: 100%;\nborder: 1px solid ${(p): string => p.color};\npadding: ${(p): string => p.padded === false ? '0' : 'var(--clear-unit)'};\nbackground: ${(p): string => p.background || 'var(--clear-background)'};\nborder-radius: var(--clear-unit);\n`\n\nexport const LayoutPage: React.FC = () => {\n  const [gridSpacing, setGridSpacing] = React.useState<number>(8)\n  const [gridItem1, setGridItem1] = React.useState<GridItemSize>(6)\n  const [gridItem2, setGridItem2] = React.useState<GridItemSize>(6)\n  const [gridItem3, setGridItem3] = React.useState<GridItemSize>(12)\n\n  const gridItemOnChange = (\n    setter: React.Dispatch<React.SetStateAction<GridItemSize>>\n  ) => (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const newValue = parseInt(e.currentTarget.value, 10)\n    if (newValue > 0 && newValue <= 12) {\n      setter(newValue as GridItemSize)\n    }\n  }\n\n  return (\n    <>\n      {setTitle('Layout components')}\n      <Header>Layout components</Header>\n      <Paragraph>\n        <Link as={HashLink} to={'#page'}><Code>{'<Page>'}</Code></Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#skiplink'}><Code>{'<Skiplink>'}</Code></Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#grid'}><Code>{'<Grid>'}</Code></Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#griditem'}><Code>{'<GridItem>'}</Code></Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#scrollcontainer'}><Code>{'<ScrollContainer>'}</Code></Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#responsive-sizing'}>Responsive sizing</Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#customization'}>Customization</Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#examples'}>Examples</Link>\n      </Paragraph>\n      <Header as='h2' id='page'><Code>{'<Page>'}</Code></Header>\n      <Paragraph>\n        The <Code>Page</Code> component renders a horizontally centered <Code>{'<main>'}</Code> HTML element (though you\n        can use the <Link href={'https://styled-components.com/docs/api#as-polymorphic-prop'}><Code>as</Code> prop\n        </Link> to render a div or other block-level lement as necessary).\n      </Paragraph>\n      <Paragraph>\n        <Code>Page</Code>s have a width of {numbers.width.main}px or the full screen width, whichever is lower.\n      </Paragraph>\n      <Paragraph>\n        All content in your app should be contained within a <Code>Page</Code>.\n      </Paragraph>\n      <Header as='h3'>Props: <Code>PageProps</Code></Header>\n      <Paragraph>\n        <Code>Page</Code> accepts the props that could normally be passed to an HTML <Code>{'<main>'}</Code> element.\n      </Paragraph>\n      <Header as='h2' id='skiplink'><Code>{'<Skiplink>'}</Code></Header>\n      <Paragraph>\n        Use a <Code>Skiplink</Code> to enable users who rely on keyboard navigation to skip over menus/navigational\n        elements on your site. <Code>Skiplink</Code> renders a button that is hidden until it gets focus, and on click\n        it will move focus to the element whose id is passed to its <Code>id</Code> prop.\n      </Paragraph>\n      <Paragraph>\n        The <Code>Skiplink</Code> component should be inserted before the navigational elements of your application.\n        You can see an example of a <Code>Skiplink</Code> by reloading this page and hitting the <Code>Tab</Code> key\n        on your keyboard.\n      </Paragraph>\n      <Header as='h3'>Props: <Code>SkipLinkProps</Code></Header>\n      <Paragraph>\n        <Code>SkipLink</Code> accepts only one prop: <Code>id: string</Code>. Pass the id of the element to which\n        the <Code>Skiplink</Code> should skip.\n      </Paragraph>\n      <Header as='h2' id='grid'><Code>{'<Grid>'}</Code></Header>\n      <Paragraph>\n        Use the <Code>Grid</Code> component to create a 12-column layout, with <Code>GridItem</Code> children that\n        occupy a specified number of columns.\n      </Paragraph>\n      <Header as='h3'>Props: <Code>GridProps</Code></Header>\n      <Paragraph>\n        Besides children, <Code>Grid</Code> accepts the prop <Code>spacing?: number</Code>. If spacing is supplied, that\n        number of pixels of space will be shown around all <Code>GridItem</Code>s.\n      </Paragraph>\n      <Header as='h2' id='griditem'><Code>{'<GridItem>'}</Code></Header>\n      <Paragraph>\n        Every child of a <Code>Grid</Code> should be a <Code>GridItem</Code>.\n      </Paragraph>\n      <Header as='h3'>Props: <Code>GridItemProps</Code></Header>\n      <Paragraph>\n        Besides children, <Code>GridItem</Code>s accept the prop <Code>size?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 |\n        11 | 12</Code>. The <Code>size</Code> prop defines how many columns the <Code>GridItem</Code> occupies. This\n        prop defaults to <Code>12</Code>.\n      </Paragraph>\n      <Header as='h3' id='responsive-sizing'>Responsive sizing of <Code>GridItem</Code>s</Header>\n      <Paragraph>\n        Note that below the <Code>xs</Code> breakpoint ({numbers.breakpoint.xs}px), the <Code>size</Code> prop is\n        ignored and all <Code>GridItem</Code>s are full-width.\n      </Paragraph>\n      <Header as='h2' id='scrollcontainer'><Code>{'<ScrollContainer>'}</Code></Header>\n      <Paragraph>\n        You can use a <Code>ScrollContainer</Code> to create a verticall or horizontally scrollable div with content of\n        a fixed minimum height/width. Scroll containers are very convenient ways to\n        prevent <Link as={HashLink} to={'/table#table'}><Code>{'<Table>'}</Code></Link>s from becoming unmanageable on\n        responsive devices.\n      </Paragraph>\n      <Header as='h3'>Props: <Code>ScrollContainerProps</Code></Header>\n      <Paragraph>\n        Besides the props that can be passed to an HTML <Code>{'<div>'}</Code>, <Code>ScrollContainer</Code> accepts\n        the following props:\n      </Paragraph>\n      <CodeBlock>{`contentMinHeight?: number | string\ncontentMinWidth?: number | string\ndirection: 'horizontal' | 'vertical'\nmaxHeight?: number | string\nmaxWidth?: number | string`}</CodeBlock>\n      <Header as='h2' id='customization'>Customization</Header>\n      <Paragraph>\n        See <Link as={HashLink} to={'/start#customization'}>Customization</Link> discussion on the Getting started page.\n      </Paragraph>\n      <Header as='h2' id='examples'>\n        <Link href={'https://github.com/chadlavi/clear/blob/master/playground/src/Pages/LayoutPage.tsx#L141'}>\n          Examples\n        </Link>\n      </Header>\n      <Header as='h3'><Code>Grid</Code></Header>\n      <Paragraph>\n        The following interactive example grid has colored borders on the outside of the <Code>Grid</Code> and\n        the content of each <Code>GridItem</Code> to illustrate how <Code>Grid</Code>'s <Code>spacing</Code> prop\n        and <Code>GridItem</Code>'s <Code>size</Code> prop work. Change the values below to increase/decrease the Grid\n        spacing and change the column size of each item.\n      </Paragraph>\n      <ExampleBorder color='var(--clear-border)' background='var(--clear-zebra)' padded={false}>\n        <Grid spacing={gridSpacing}>\n          <GridItem>\n            <ExampleBorder color='dodgerblue'>\n              <Label htmlFor={'grid-spacing'}>Grid spacing</Label>\n              <Input\n                id={'grid-spacing'}\n                inputMode={'numeric'}\n                min={0}\n                onChange={(e): void => setGridSpacing(parseInt(e.currentTarget.value || '0', 10))}\n                type={'number'}\n                value={gridSpacing}\n              />\n            </ExampleBorder>\n          </GridItem>\n          <GridItem size={gridItem1}>\n            <ExampleBorder color='forestgreen'>\n              <Label htmlFor={'grid-item-1'}>Green GridItem's size</Label>\n              <Input\n                id={'grid-item-1'}\n                inputMode={'numeric'}\n                onChange={gridItemOnChange(setGridItem1)}\n                type={'number'}\n                value={gridItem1}\n              />\n            </ExampleBorder>\n          </GridItem>\n          <GridItem size={gridItem2}>\n            <ExampleBorder color='red'>\n              <Label htmlFor={'grid-item-2'}>Red GridItem's size</Label>\n              <Input\n                id={'grid-item-2'}\n                inputMode={'numeric'}\n                onChange={gridItemOnChange(setGridItem2)}\n                type={'number'}\n                value={gridItem2}\n              />\n            </ExampleBorder>\n          </GridItem>\n          <GridItem size={gridItem3}>\n            <ExampleBorder color='violet'>\n              <Label htmlFor={'grid-item-3'}>Violet GridItem's size</Label>\n              <Input\n                id={'grid-item-3'}\n                inputMode={'numeric'}\n                onChange={gridItemOnChange(setGridItem3)}\n                type={'number'}\n                value={gridItem3}\n              />\n            </ExampleBorder>\n          </GridItem>\n        </Grid>\n      </ExampleBorder>\n      <Header as='h3'><Code>ScrollContainer</Code></Header>\n      <ScrollContainer direction={'horizontal'}>\n        <div\n          style={{\n            background: 'violet',\n            borderRadius: 8,\n            color: 'black',\n            padding: 20,\n            position: 'relative',\n            width: 2000,\n          }}\n        >\n          This div has a min-width of 2000px, but\n          its <Code style={{color: 'var(--clear-textColor)'}}>ScrollContainer</Code> is only 100% width\n          <div\n            style={{\n              bottom: 20,\n              fontWeight: 'bold',\n              position: 'absolute',\n              right: 20,\n            }}\n          >\n            neat!\n          </div>\n        </div>\n      </ScrollContainer>\n      <br/>\n      <ScrollContainer direction={'vertical'} maxHeight={58}>\n        <div\n          style={{\n            background: 'dodgerblue',\n            borderRadius: 8,\n            color: 'black',\n            padding: 20,\n            position: 'relative',\n            height: 1000,\n          }}\n        >\n          This div has a min-height of 1000px, but\n          its <Code style={{color: 'var(--clear-textColor)'}}>ScrollContainer</Code> is only 58px tall\n          <div\n            style={{\n              bottom: 20,\n              fontWeight: 'bold',\n              position: 'absolute',\n              right: 20,\n            }}\n          >\n            neat!\n          </div>\n        </div>\n      </ScrollContainer>\n    </>\n  )\n}\n","import * as React from 'react'\nimport {HashLink} from 'react-router-hash-link'\nimport {Link as RouterLink} from 'react-router-dom'\nimport {setTitle} from '../utils'\nimport {\n  Code,\n  CodeBlock,\n  Header,\n  Link,\n  Paragraph,\n} from '../component-lib'\n\nexport const LinkPage: React.FC = () =>\n  <>\n    {setTitle('Link')}\n    <Header id={'link'}><Code>{'<Link>'}</Code></Header>\n    <Paragraph as={'nav'}>\n      <Link as={HashLink} to={'#external'}>External vs internal links</Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#router'}>Router</Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#props'}>Props</Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#customization'}>Customization</Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#examples'}>Examples</Link>\n    </Paragraph>\n    <Paragraph>\n      The <Code>Link</Code> component is a simple styled wrapper around an HTML <Code>{'<a>'}</Code> element.\n    </Paragraph>\n    <Header as='h2' id='external'>External vs internal links</Header>\n    <Paragraph>\n      Links with an <Code>href</Code> that matches <Code>/^http/</Code> are marked as external, and will automatically\n      open in a new tab. External links are decorated with a \"{'\\u2197'}\" icon.\n    </Paragraph>\n    <Header as='h2' id='router'>Router links</Header>\n    <Paragraph>\n      Use the <Link href={'https://styled-components.com/docs/api#as-polymorphic-prop'}><Code>as</Code> prop</Link> to\n      substitute the Link component of your choice:\n    </Paragraph>\n    <CodeBlock>\n      {'<Link as={RouterLink} to={\\'/\\'}>Router link</Link>'}\n    </CodeBlock>\n    <Header as='h2' id='props'>Props: <Code>LinkProps</Code></Header>\n    <Paragraph>\n      <Code>Link</Code> accepts standard HTML anchor element props. Note that if you use\n      the <Link href={'https://styled-components.com/docs/api#as-polymorphic-prop'}><Code>as</Code> prop</Link> to\n      substitute a different component, then your instance of <Code>Link</Code> will change to accept the props of the\n      substituted component. For example, a RouterLink will accept the prop <Code>to: string</Code> which is not\n      accepted by <Code>{'<a>'}</Code>.\n    </Paragraph>\n    <Header as='h2' id='customization'>Customization</Header>\n    <Paragraph>\n      See <Link as={HashLink} to={'/start#customization'}>Customization</Link> discussion on the Getting started page.\n    </Paragraph>\n    <Header as='h2' id='examples'>\n      <Link href={'https://github.com/chadlavi/clear/blob/master/playground/src/Pages/LinkPage.tsx#L56'}>Examples</Link>\n    </Header>\n    <Paragraph>\n      <Link href={'/clear/'}>Internal HTML link</Link> (causes page load)\n    </Paragraph>\n    <Paragraph>\n      <Link as={RouterLink} to={'/'}>Router link</Link> (does not cause page load)\n    </Paragraph>\n    <Paragraph>\n      <Link href={'https://github.com/chadlavi/clear'}>External link</Link>\n    </Paragraph>\n  </>\n","import * as React from 'react'\nimport {HashLink} from 'react-router-hash-link'\nimport {setTitle} from '../utils'\nimport {\n  Code,\n  CodeBlock,\n  GenerateTable,\n  Header,\n  Link,\n  Paragraph,\n  ScrollContainer,\n  Table,\n  TableBody,\n  TableCell,\n  TableData,\n  TableHead,\n  TableHeaderType,\n  TableRow,\n} from '../component-lib'\n\ntype TableHeaders = 'name' | 'email' | 'occupation'\n\nconst tableHeaders: TableHeaderType<TableHeaders>[] = [\n  'name',\n  'email',\n  'occupation',\n]\n\nconst tableData: TableData<TableHeaders> = [\n  {\n    name: 'Phillip J. Fry',\n    email: 'cosmicphil@panuccispizza.net',\n    occupation: 'Delivery boy',\n  },\n  {\n    name: 'Turanga Leela',\n    email: '1bdi@planetexpress.biz',\n    occupation: 'Captain',\n  },\n  {\n    name: 'Hubert J. Farnsworth',\n    email: 'hubie@planetexpress.biz',\n    occupation: 'Professor',\n  },\n  {\n    name: 'Bender \"Bending\" Rodriguez',\n    email: 'bender@benderisgreat.com',\n    occupation: 'Bending unit',\n  },\n  {\n    name: 'Dr. Amy Wong',\n    email: 'awong@marsu.edu',\n    occupation: 'Intern',\n  },\n  {\n    name: 'Dr. John A. Zoidberg',\n    email: 'woopwoopwoopwoop@drzoidberg.biz',\n    occupation: 'Staff doctor',\n  },\n  {\n    name: 'Hermes Conrad',\n    email: 'bureaucratman@limbo.org',\n    occupation: 'Grade 39 bureaucrat',\n  }\n]\n\nexport const TablePage: React.FC = () =>\n  <>\n    {setTitle('Table')}\n    <Header>Table</Header>\n    <Paragraph as={'nav'}>\n      <Link as={HashLink} to={'#props'}>Props</Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#table'}><Code>{'<Table>'}</Code></Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#tablehead'}><Code>{'<TableHead>'}</Code></Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#tablebody'}><Code>{'<TableBody>'}</Code></Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#tablerow'}><Code>{'<TableRow>'}</Code></Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#tablecell'}><Code>{'<TableCell>'}</Code></Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#generatetable'}><Code>{'<GenerateTable>'}</Code></Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#customization'}>Customization</Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#examples'}>Examples</Link>\n    </Paragraph>\n    <Paragraph>\n      Clear provides styled versions of the table primitives <Code>{'<table>'}</Code>, <Code>{'<thead>'}</Code>,\n      <Code>{'<tbody>'}</Code>, <Code>{'<tr>'}</Code>, and <Code>{'<td>'}</Code> (which can be extended to\n      cover <Code>{'<th>'}</Code>).\n    </Paragraph>\n    <Header as='h2' id='props'>Props</Header>\n    <Paragraph>\n      All of Clear's table-related components accept the standard props that could normally be passed to their HTML\n      equivalents.\n    </Paragraph>\n    <Header as='h2' id='table'><Code>{'<Table>'}</Code></Header>\n    <Paragraph>\n      Use the <Code>Table</Code> component where you would use an HTML <Code>{'<table>'}</Code>.\n    </Paragraph>\n    <Header as='h2' id='tablehead'><Code>{'<TableHead>'}</Code></Header>\n    <Paragraph>\n      Use the <Code>TableHead</Code> component where you would use an HTML <Code>{'<thead>'}</Code>.\n    </Paragraph>\n    <Header as='h2' id='tablebody'><Code>{'<TableBody>'}</Code></Header>\n    <Paragraph>\n      Use the <Code>TableBody</Code> component where you would use an HTML <Code>{'<tbody>'}</Code>.\n    </Paragraph>\n    <Header as='h2' id='tablerow'><Code>{'<TableRow>'}</Code></Header>\n    <Paragraph>\n      Use the <Code>TableRow</Code> component where you would use an HTML <Code>{'<tr>'}</Code>.\n    </Paragraph>\n    <Header as='h2' id='tablecell'><Code>{'<TableCell>'}</Code></Header>\n    <Paragraph>\n      Use the <Code>TableCell</Code> component where you would use an HTML <Code>{'<td>'}</Code>.\n    </Paragraph>\n    <Paragraph>\n      <Code>TableCell</Code> can also be used for <Code>{'<th>'}</Code> (table header cell) by extending it with\n      the <Link href={'https://styled-components.com/docs/api#as-polymorphic-prop'}><Code>as</Code> prop</Link> like\n      so:\n    </Paragraph>\n    <CodeBlock>{`<TableCell as='th'>\n  This will render in the DOM as a th\n</TableCell>`}\n    </CodeBlock>\n    <Header as='h2' id='generatetable'><Code>{'<GenerateTable>'}</Code></Header>\n    <Paragraph>\n      You can also generate a table from an array of headers and an array of row data with\n      the <Code>GenerateTable</Code> component. Using this component is much terser in terms of JSX, but requires more\n      thoroughly typed data.\n    </Paragraph>\n    <Header as='h2' id='customization'>Customization</Header>\n    <Paragraph>\n      See <Link as={HashLink} to={'/start#customization'}>Customization</Link> discussion on the Getting started page.\n    </Paragraph>\n    <Header as='h2' id='examples'>\n      <Link href={'https://github.com/chadlavi/clear/blob/master/playground/src/Pages/TablePage.tsx#L145'}>\n        Examples\n      </Link>\n    </Header>\n    <Paragraph>\n      Both <Code>Table</Code>s below are wrapped\n      in <Link as={HashLink} to={'/layout#scrollcontainer'}><Code>{'<ScrollContainer>'}</Code></Link>s and has a\n      min-width of 600px. In narrow viewports, they will be horizontally scrollable.\n    </Paragraph>\n    <Paragraph>\n      Normally constructed table:\n    </Paragraph>\n    <ScrollContainer direction='horizontal' maxWidth={'100%'} contentMinWidth={600}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell as={'th'}>Name</TableCell>\n            <TableCell as={'th'}>Email</TableCell>\n            <TableCell as={'th'}>Occupation</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {tableData.map((r) => (\n            <TableRow key={r.name?.toString()}>\n              <TableCell>{r.name}</TableCell>\n              <TableCell>{r.email}</TableCell>\n              <TableCell>{r.occupation}</TableCell>\n            </TableRow>\n          ))\n          }\n        </TableBody>\n      </Table>\n    </ScrollContainer>\n    <Paragraph>\n      Here's the same table, generated with the <Code>GenerateTable</Code> component:\n    </Paragraph>\n    <ScrollContainer direction='horizontal' maxWidth={'100%'} contentMinWidth={600}>\n      <GenerateTable data={tableData} headers={tableHeaders} />\n    </ScrollContainer>\n  </>\n","import * as React from 'react'\nimport {HashLink} from 'react-router-hash-link'\nimport {setTitle} from '../utils'\nimport {\n  Code,\n  CodeBlock,\n  Header,\n  Link,\n  Paragraph,\n  numbers,\n} from '../component-lib'\n\nexport const TextPage: React.FC = () =>\n  <>\n    {setTitle('Text formatting components')}\n    <Header>Text formatting components</Header>\n    <Paragraph as={'nav'}>\n      <Link as={HashLink} to={'#header'}><Code>{'<Header>'}</Code></Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#paragraph'}><Code>{'<Paragraph>'}</Code></Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#label'}><Code>{'<Label>'}</Code></Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#code'}><Code>{'<Code>'}</Code></Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#codeblock'}><Code>{'<CodeBlock>'}</Code></Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#customization'}>Customization</Link>\n    </Paragraph>\n    <Paragraph>\n      Clear offers various components for formatting text.\n      See <Link href={'https://github.com/chadlavi/clear/blob/master/playground/src/Pages/TextPage.tsx'}>the source code\n      for this page</Link> for examples.\n    </Paragraph>\n    <Header as='h2' id='header'><Code>{'<Header>'}</Code></Header>\n    <Paragraph>\n      <Code>Header</Code> can be used to create HTML header elements like <Code>{'<h1>'}</Code>, <Code>{'<h2>'}</Code>,\n      etc. With no props passed, the <Code>Header</Code> defaults to rendering an <Code>{'<h1>'}</Code>.\n    </Paragraph>\n    <Header as='h3' id='header-props'>Props: <Code>HeaderProps</Code></Header>\n    <Paragraph>\n      <Code>Header</Code> accepts any props that could normally be passed to an HTML header element.\n    </Paragraph>\n    <Paragraph>\n      Use the <Link href={'https://styled-components.com/docs/api#as-polymorphic-prop'}><Code>as</Code> prop</Link> to\n      substitute a different header element like so:\n    </Paragraph>\n    <CodeBlock>{`<Header as='h2'>\n  This will render in the DOM as an h2\n</Header>\n<Header as='h3'>\n  This will render in the DOM as an h3\n</Header>\n`}\n    </CodeBlock>\n    <Header as='h2' id='paragraph'><Code>{'<Paragraph>'}</Code></Header>\n    <Paragraph>\n      <Code>Paragraph</Code> is a simple styled wrapper around <Code>{'<p>'}</Code>.\n    </Paragraph>\n    <Header as='h3'>Props: <Code>ParagraphProps</Code></Header>\n    <Paragraph>\n      Besides the standard props that can be passed to an HTML <Code>{'<p>'}</Code> element, <Code>Paragraph</Code> also\n      accepts the prop <Code>margins?: boolean</Code>. If <Code>margins</Code> is false, the <Code>Paragraph</Code> will\n      not have margins; if it is true or undefined, the <Code>Paragraph</Code> will default to\n      having {numbers.fontSize.default}px margins at the top and bottom.\n    </Paragraph>\n    <Header as='h2' id='label'><Code>{'<Label>'}</Code></Header>\n    <Paragraph>\n      <Code>Label</Code> is a simple styled wrapper around <Code>{'<label>'}</Code>, used for formatting the label of\n      a form field like <Link as={HashLink} to={'/input#input'}><Code>{'<Input>'}</Code></Link>.\n    </Paragraph>\n    <Header as='h3'>Props: <Code>LabelProps</Code></Header>\n    <Paragraph>\n      <Code>Label</Code> accepts the props that could normally be passed to an HTML <Code>{'<label>'}</Code>, plus\n      three special display props: <Code>disabled?: boolean</Code> to style the label of a disabled\n      input, <Code>error?: boolean</Code> to style the label of an input field in an error state,\n      and <Code>required?: boolean</Code> to style the label of a required field.\n    </Paragraph>\n    <Header as='h2' id='code'><Code>{'<Code>'}</Code></Header>\n    <Paragraph>\n      <Code>Code</Code> is a simple styled wrapper around <Code>{'<code>'}</Code>, used for formatting inline code\n      snippets.\n    </Paragraph>\n    <Header as='h3'>Props: <Code>CodeProps</Code></Header>\n    <Paragraph>\n      <Code>Code</Code> accepts any props that could normally be passed to an HTML <Code>{'<code>'}</Code> element.\n    </Paragraph>\n    <Header as='h2' id='codeblock'><Code>{'<CodeBlock>'}</Code></Header>\n    <Paragraph>\n      <Code>CodeBlock</Code> is a simple styled wrapper around <Code>{'<pre>'}</Code>, used for formatting block code\n      snippets.\n    </Paragraph>\n    <Header as='h3'>Props: <Code>CodeBlockProps</Code></Header>\n    <Paragraph>\n      <Code>CodeBlock</Code> accepts any props that could normally be passed to an HTML <Code>{'<pre>'}</Code> element.\n    </Paragraph>\n    <Header as='h2' id='customization'>Customization</Header>\n    <Paragraph>\n      See <Link as={HashLink} to={'/start#customization'}>Customization</Link> discussion on the Getting started page.\n    </Paragraph>\n  </>\n","import * as React from 'react'\nimport {version} from '../package.json'\nimport {\n  ButtonPage,\n  GettingStartedPage,\n  GlobalStylesPage,\n  HelpersPage,\n  HomePage,\n  InputPage,\n  LayoutPage,\n  LinkPage,\n  TablePage,\n  TextPage,\n} from './Pages'\nimport {\n  Grid,\n  GridItem,\n  Link,\n  Page,\n  SkipLink,\n} from './component-lib'\nimport {\n  HashRouter,\n  NavLink,\n  Route,\n  Switch,\n} from 'react-router-dom'\n\nconst routes = [\n  {\n    label: `Clear (${version})`,\n    exact: true,\n    route: '/',\n    component: <HomePage />,\n  },\n  {\n    label: 'Getting started',\n    route: '/start',\n    component: <GettingStartedPage />,\n  },\n  {\n    label: 'Globals',\n    route: '/global-styles',\n    component: <GlobalStylesPage />,\n  },\n  {\n    label: 'Layout',\n    route: '/layout',\n    component: <LayoutPage />,\n  },\n  {\n    label: 'Input',\n    route: '/input',\n    component: <InputPage />,\n  },\n  {\n    label: 'Button',\n    route: '/button',\n    component: <ButtonPage />,\n  },\n  {\n    label: 'Link',\n    route: '/link',\n    component: <LinkPage />,\n  },\n  {\n    label: 'Text',\n    route: '/text',\n    component: <TextPage />,\n  },\n  {\n    label: 'Table',\n    route: '/table',\n    component: <TablePage />,\n  },\n  {\n    label: 'Helpers',\n    route: '/helpers',\n    component: <HelpersPage />,\n  },\n]\n\nexport const Routes: React.FC = () => {\n\n  const scrollinate = async (id: string): Promise<void> => {\n    const anchor = document.getElementById(id)\n    if (anchor) anchor.scrollIntoView(true)\n  }\n\n  /**\n   * Scroll to the designated anchor if one is present in the URL.\n   */\n  const scrollToHash = async (): Promise<void> => {\n    window.location.hash = window.location.hash.replace('%23', '#')\n    const hash = window.location.hash\n    const id = hash.substr(1).split('#')[1]\n    if(id) {\n      setTimeout(async () => {\n        await scrollinate(id)\n      }, 1)\n    }\n  }\n\n  React.useEffect(() => {\n    scrollToHash()\n  })\n\n  return (\n    <Page>\n      <HashRouter basename='/'>\n        <SkipLink id={'main'} />\n        <Grid spacing={16}>\n          <GridItem as='nav' aria-label='primary'>\n            {routes.map((r, i) =>\n              <React.Fragment key={r.label}>\n                <Link\n                  as={NavLink}\n                  to={r.route}\n                  exact={r.exact}\n                >\n                  {r.label}\n                </Link>\n                {i !== routes.length - 1 ? ' \\u00b7 ' : ''}\n              </React.Fragment>\n            )}\n          </GridItem>\n          <GridItem>\n            <span tabIndex={-1} id='main' />\n            <Switch>\n              {routes.map((r) =>\n                <Route\n                  key={r.label}\n                  exact\n                  path={r.route}\n                >\n                  {r.component}\n                </Route>\n              )}\n              <Route>\n                <HomePage/>\n              </Route>\n            </Switch>\n          </GridItem>\n        </Grid>\n      </HashRouter>\n    </Page>\n  )\n}\n","import * as React from 'react'\nimport * as serviceWorker from './serviceWorker'\nimport ReactDOM from 'react-dom'\nimport {Routes} from './Routes'\nimport {CSSVariables, GlobalStyles} from './component-lib'\n\nReactDOM.render(\n  <React.StrictMode>\n    <CSSVariables/>\n    <GlobalStyles />\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}