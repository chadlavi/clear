{"version":3,"sources":["serviceWorker.ts","component-lib/index.js","Pages/InputPage.tsx","Pages/LayoutPage.tsx","Pages/TablePage.tsx","Pages/LinkPage.tsx","Pages/HomePage.tsx","Pages/GlobalStylesPage.tsx","Pages/ButtonPage.tsx","Pages/TextPage.tsx","Pages/GettingStartedPage.tsx","Routes.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__makeTemplateObject","cooked","raw","defineProperty","value","templateObject_1","templateObject_2","templateObject_1$1","templateObject_1$2","templateObject_1$3","templateObject_1$4","templateObject_1$5","templateObject_1$6","templateObject_1$7","templateObject_2$1","templateObject_1$8","templateObject_1$9","templateObject_1$a","templateObject_1$b","templateObject_1$c","templateObject_1$d","templateObject_1$e","templateObject_1$f","colors","light","background","border","error","link","textColor","zebra","dark","focusStyle","errorFocusStyle","numbers","breakpoint","xs","sm","md","lg","fontSize","default","unit","label","width","main","CSSVariables","createGlobalStyle","GlobalStyles","useDarkMode","_a","useState","matchMedia","matches","result","setResult","callback","useCallback","matchMediaResult","useEffect","addListener","removeListener","useResponsiveColor","color","theme","Button","styled","primary","props","createElement","disabled","Code","CodeBlock","Grid","spacing","GridItem","size","Header","StyledLabel","forwardOnFocus","func","currentTarget","setTimeout","select","StyledInput","onClick","onFocus","Input","other","className","required","type","Link","isExternal","href","target","rel","title","Page","Paragraph","margins","Table","TableHead","TableBody","TableCell","TableRow","FancyPinkInput","InputPage","React","numericValue","setNumericValue","textValue","setTextValue","errorValue","setErrorValue","requiredValue","setRequiredValue","customValue","setCustomValue","as","id","HashLink","to","onChange","inputMode","parseInt","ExampleBorder","padded","LayoutPage","gridSpacing","setGridSpacing","gridItem1","setGridItem1","gridItem2","setGridItem2","gridItem3","setGridItem3","gridItemOnChange","setter","newValue","min","TablePage","LinkPage","RouterLink","HomePage","GlobalStylesPage","copy","preventDefault","alert","ButtonPage","TextPage","ErrorButton","BigErrorButton","ExtendedButton","ResponsiveBigErrorButton","FocusableResponsiveBigErrorButton","GettingStartedPage","routes","version","exact","route","component","Routes","basename","map","r","key","path","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.8df2ca9b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable */\nimport { useState, useCallback, useEffect, createElement } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n}\n\nvar colors = {\r\n    light: {\r\n        background: 'white',\r\n        border: '#ddd',\r\n        error: '#cf0303',\r\n        link: '#55e',\r\n        textColor: '#111',\r\n        zebra: '#f8f8f8',\r\n    },\r\n    dark: {\r\n        background: '#111',\r\n        border: '#555',\r\n        error: '#ff5656',\r\n        link: '#8787f9',\r\n        textColor: 'white',\r\n        zebra: '#242424',\r\n    }\r\n};\n\nvar focusStyle = \"\\n:focus {\\n  outline: none;\\n  box-shadow: 0 0 0 calc(var(--clear-unit) / 4) var(--clear-background),\\n    0 0 0 calc(var(--clear-unit) / 2) var(--clear-link);\\n}\\n::-moz-focus-inner {\\n  border:0;\\n}\\n\";\r\nvar errorFocusStyle = \"\\n:focus {\\n  outline: none;\\n  box-shadow: 0 0 0 calc(var(--clear-unit) / 4) var(--clear-background),\\n    0 0 0 calc(var(--clear-unit) / 2) var(--clear-error);\\n}\\n::-moz-focus-inner {\\n  border:0;\\n}\\n\";\n\nvar unit = 8;\r\nvar numbers = {\r\n    breakpoint: {\r\n        xs: 600,\r\n        sm: 960,\r\n        md: 1280,\r\n        lg: 1920,\r\n    },\r\n    fontSize: {\r\n        default: unit * 2,\r\n        label: unit * 1.8,\r\n    },\r\n    width: {\r\n        main: 90 * unit,\r\n    },\r\n    unit: unit,\r\n};\n\n/**\r\n * Creates a set of css variables necessary for global colors. This component\r\n * should be included once at the top level of your application.\r\n *\r\n * https://chadlavi.github.io/clear/#/global-styles\r\n */\r\nvar CSSVariables = createGlobalStyle(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  :root {\\n    --clear-background: \", \";\\n    --clear-border: \", \";\\n    --clear-error: \", \";\\n    --clear-link: \", \";\\n    --clear-text-color: \", \";\\n    --clear-zebra: \", \";\\n    --clear-unit: \", \"px;\\n    --clear-font-size-default: \", \"px;\\n    --clear-font-size-label: \", \"px;\\n    --clear-font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, Ubuntu,\\n      roboto, noto, segoe ui, arial, sans-serif;\\n    --clear-monospace-font-family: Menlo, Consolas, Monaco, Liberation Mono, Lucida Console, monospace;\\n  }\\n\\n  @media (prefers-color-scheme: dark) {\\n    :root {\\n      --clear-background: \", \";\\n      --clear-border: \", \";\\n      --clear-error: \", \";\\n      --clear-link: \", \";\\n      --clear-text-color: \", \";\\n      --clear-zebra: \", \";\\n    }\\n  }\\n  \"], [\"\\n  :root {\\n    --clear-background: \", \";\\n    --clear-border: \", \";\\n    --clear-error: \", \";\\n    --clear-link: \", \";\\n    --clear-text-color: \", \";\\n    --clear-zebra: \", \";\\n    --clear-unit: \", \"px;\\n    --clear-font-size-default: \", \"px;\\n    --clear-font-size-label: \", \"px;\\n    --clear-font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, Ubuntu,\\n      roboto, noto, segoe ui, arial, sans-serif;\\n    --clear-monospace-font-family: Menlo, Consolas, Monaco, Liberation Mono, Lucida Console, monospace;\\n  }\\n\\n  @media (prefers-color-scheme: dark) {\\n    :root {\\n      --clear-background: \", \";\\n      --clear-border: \", \";\\n      --clear-error: \", \";\\n      --clear-link: \", \";\\n      --clear-text-color: \", \";\\n      --clear-zebra: \", \";\\n    }\\n  }\\n  \"\r\n    /**\r\n       * Applies styles to the `<body>` of your app.\r\n       *\r\n       * https://chadlavi.github.io/clear/#/global-styles\r\n       */\r\n])), colors.light.background, colors.light.border, colors.light.error, colors.light.link, colors.light.textColor, colors.light.zebra, numbers.unit, numbers.fontSize.default, numbers.fontSize.label, colors.dark.background, colors.dark.border, colors.dark.error, colors.dark.link, colors.dark.textColor, colors.dark.zebra);\r\n/**\r\n   * Applies styles to the `<body>` of your app.\r\n   *\r\n   * https://chadlavi.github.io/clear/#/global-styles\r\n   */\r\nvar GlobalStyles = createGlobalStyle(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  body {\\n    margin: 0;\\n    background-color: var(--clear-background);\\n    color: var(--clear-text-color);\\n    font-family: var(--clear-font-family);\\n    font-size: var(--clear-font-size-default);\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n  }\\n\"], [\"\\n  body {\\n    margin: 0;\\n    background-color: var(--clear-background);\\n    color: var(--clear-text-color);\\n    font-family: var(--clear-font-family);\\n    font-size: var(--clear-font-size-default);\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n  }\\n\"])));\r\nvar templateObject_1, templateObject_2;\n\nvar useDarkMode = function () {\r\n    var _a = useState(matchMedia('(prefers-color-scheme: dark)').matches), result = _a[0], setResult = _a[1];\r\n    var callback = useCallback(function (matchMediaResult) { return setResult(matchMediaResult.matches); }, [setResult]);\r\n    useEffect(function () {\r\n        var matchMediaResult = matchMedia('(prefers-color-scheme: dark)');\r\n        callback(matchMediaResult);\r\n        matchMediaResult.addListener(callback);\r\n        return function () { return matchMediaResult.removeListener(callback); };\r\n    }, [callback]);\r\n    return result;\r\n};\r\nvar useResponsiveColor = function (color) {\r\n    var theme = useDarkMode() ? 'dark' : 'light';\r\n    return colors[theme][color];\r\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar ButtonBase = function (_a) {\r\n    var primary = _a.primary, props = __rest(_a, [\"primary\"]);\r\n    return createElement(\"button\", __assign({}, props));\r\n};\r\n/**\r\n * A simple styled `<button>`\r\n *\r\n * https://chadlavi.github.io/clear/#/button\r\n */\r\nvar Button = styled(ButtonBase)(templateObject_1$1 || (templateObject_1$1 = __makeTemplateObject([\"\\n  background: var(--clear-border);\\n  border-radius: var(--clear-unit);\\n  border: none;\\n  color: inherit;\\n  \", \";\\n  cursor: pointer;\\n  \", \";\\n  font-size: var(--clear-font-size-label);\\n  margin: 0;\\n  padding: var(--clear-unit) calc(var(--clear-unit) * 2);\\n  @media (prefers-color-scheme: dark) {\\n    font-weight: 500;\\n  }\\n  \", \"\\n\"], [\"\\n  background: var(--clear-border);\\n  border-radius: var(--clear-unit);\\n  border: none;\\n  color: inherit;\\n  \",\r\n    \";\\n  cursor: pointer;\\n  \",\r\n    \";\\n  font-size: var(--clear-font-size-label);\\n  margin: 0;\\n  padding: var(--clear-unit) calc(var(--clear-unit) * 2);\\n  @media (prefers-color-scheme: dark) {\\n    font-weight: 500;\\n  }\\n  \", \"\\n\"])), function (p) { return p.primary ? \"\\n    background: var(--clear-link);\\n    color: var(--clear-background);\\n  \" : ''; }, function (p) { return p.disabled ? \"\\n    cursor: not-allowed;\\n    opacity: 0.5;\\n  \" : ''; }, focusStyle);\r\nvar templateObject_1$1;\n\n/**\r\n * A simple styled `<code>`\r\n *\r\n * https://chadlavi.github.io/clear/#/text\r\n */\r\nvar Code = styled('code')(templateObject_1$2 || (templateObject_1$2 = __makeTemplateObject([\"\\n  font-family: var(--clear-monospace-font-family);\\n  font-size: 0.9em;\\n  display: inline;\\n  margin: 0;\\n  background: var(--clear-zebra);\\n  padding: calc(var(--clear-unit) / 2 - 2px) calc(var(--clear-unit) / 2 - 1px);\\n  border-radius: calc(var(--clear-unit) / 2);\\n\"], [\"\\n  font-family: var(--clear-monospace-font-family);\\n  font-size: 0.9em;\\n  display: inline;\\n  margin: 0;\\n  background: var(--clear-zebra);\\n  padding: calc(var(--clear-unit) / 2 - 2px) calc(var(--clear-unit) / 2 - 1px);\\n  border-radius: calc(var(--clear-unit) / 2);\\n\"])));\r\nvar templateObject_1$2;\n\n/**\r\n * A simple styled `<pre>` for formatting code blocks\r\n *\r\n * https://chadlavi.github.io/clear/#/text\r\n */\r\nvar CodeBlock = styled('pre')(templateObject_1$3 || (templateObject_1$3 = __makeTemplateObject([\"\\n  font-family: var(--clear-monospace-font-family);\\n  font-size: 0.9em;\\n  line-height: 1.5;\\n  display: block;\\n  margin-block-end: calc(var(--clear-unit) * 2);\\n  margin-block-start: calc(var(--clear-unit) * 2);\\n  background: var(--clear-zebra);\\n  padding: calc(var(--clear-unit) * 2);\\n  border-radius: var(--clear-unit);\\n  overflow-x: auto;\\n\"], [\"\\n  font-family: var(--clear-monospace-font-family);\\n  font-size: 0.9em;\\n  line-height: 1.5;\\n  display: block;\\n  margin-block-end: calc(var(--clear-unit) * 2);\\n  margin-block-start: calc(var(--clear-unit) * 2);\\n  background: var(--clear-zebra);\\n  padding: calc(var(--clear-unit) * 2);\\n  border-radius: var(--clear-unit);\\n  overflow-x: auto;\\n\"])));\r\nvar templateObject_1$3;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar Container = function (_a) {\r\n    var spacing = _a.spacing, props = __rest(_a, [\"spacing\"]);\r\n    return createElement(\"div\", __assign({}, props));\r\n};\r\n/**\r\n * A simple 12-column grid container. Must be used in conjunciton with\r\n * `<GridItem>`.\r\n *\r\n * https://chadlavi.github.io/clear/#/grid\r\n */\r\nvar Grid = styled(Container)(templateObject_1$4 || (templateObject_1$4 = __makeTemplateObject([\"\\n  display: flex;\\n  flex-wrap: wrap;\\n  padding: \", \"px;\\n  & > div {\\n    padding: \", \"px;\\n  }\\n\"], [\"\\n  display: flex;\\n  flex-wrap: wrap;\\n  padding: \", \"px;\\n  & > div {\\n    padding: \", \"px;\\n  }\\n\"])), function (p) { return p.spacing ? (p.spacing / 2) : 0; }, function (p) { return p.spacing ? p.spacing / 2 : 0; });\r\nvar templateObject_1$4;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar Container$1 = function (_a) {\r\n    var size = _a.size, props = __rest(_a, [\"size\"]);\r\n    return createElement(\"div\", __assign({}, props));\r\n};\r\n/**\r\n * A simple 12-column grid item. Must be used as a direct child of `<Grid>`.\r\n *\r\n * https://chadlavi.github.io/clear/#/grid\r\n */\r\nvar GridItem = styled(Container$1)(templateObject_1$5 || (templateObject_1$5 = __makeTemplateObject([\"\\n  flex-basis: calc(100% * \", \" / 12);\\n  width: calc(100% * \", \" / 12);\\n  @media only screen and (max-width: \", \"px) {\\n    flex-basis: 100%;\\n    width: 100%;\\n  }\\n\"], [\"\\n  flex-basis: calc(100% * \", \" / 12);\\n  width: calc(100% * \", \" / 12);\\n  @media only screen and (max-width: \", \"px) {\\n    flex-basis: 100%;\\n    width: 100%;\\n  }\\n\"])), function (p) { return p.size || 12; }, function (p) { return p.size || 12; }, numbers.breakpoint.xs);\r\nvar templateObject_1$5;\n\n/**\r\n * A simple styled `<h1>`\r\n *\r\n * Can also be used to create any header (`h1` through `h6`):\r\n *\r\n * ```tsx\r\n * <Header as='h2'>\r\n *  This will render in the DOM as an `<h2>`\r\n * </Header>\r\n * ```\r\n *\r\n * https://chadlavi.github.io/clear/#/text\r\n */\r\nvar Header = styled('h1')(templateObject_1$6 || (templateObject_1$6 = __makeTemplateObject([\"\"], [\"\"])));\r\nvar templateObject_1$6;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar Label = function (_a) {\r\n    var disabled = _a.disabled, error = _a.error, props = __rest(_a, [\"disabled\", \"error\"]);\r\n    return createElement(\"label\", __assign({}, props));\r\n};\r\nvar StyledLabel = styled(Label)(templateObject_1$7 || (templateObject_1$7 = __makeTemplateObject([\"\\n  color: \", \";\\n  display: flex;\\n  flex-direction: column;\\n  \", \";\\n  width: 100%;\\n  & > span {\\n    font-size: var(--clear-font-size-label);\\n  }\\n\"], [\"\\n  color: \", \";\\n  display: flex;\\n  flex-direction: column;\\n  \",\r\n    \";\\n  width: 100%;\\n  & > span {\\n    font-size: var(--clear-font-size-label);\\n  }\\n\"\r\n    /**\r\n     * Calls props.onClick, but also selects the contents of the Input on click\r\n     * @param func the onClick passed to `<Input>`\r\n     */\r\n])), function (p) { return p.error ? 'var(--clear-error)' : 'inherit'; }, function (p) { return p.disabled ? \"\\n    opacity: 0.5;\\n  \" : ''; });\r\n/**\r\n * Calls props.onClick, but also selects the contents of the Input on click\r\n * @param func the onClick passed to `<Input>`\r\n */\r\nvar forwardOnClick = function (func) { return function (e) {\r\n    var t = e.currentTarget;\r\n    if (func)\r\n        func(e);\r\n    if (t.value)\r\n        setTimeout(function () {\r\n            t.select();\r\n        }, 1);\r\n}; };\r\n/**\r\n * Calls props.onFocus, but also selects the contents of the Input on focus\r\n * @param func the onFocus passed to `<Input>`\r\n */\r\nvar forwardOnFocus = function (func) { return function (e) {\r\n    var t = e.currentTarget;\r\n    if (func)\r\n        func(e);\r\n    if (t.value)\r\n        setTimeout(function () {\r\n            t.select();\r\n        }, 1);\r\n}; };\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar InputBase = function (_a) {\r\n    var error = _a.error, label = _a.label, props = __rest(_a, [\"error\", \"label\"]);\r\n    return (createElement(\"input\", __assign({}, props, { onClick: forwardOnClick(props.onClick), onFocus: forwardOnFocus(props.onFocus) })));\r\n};\r\nvar StyledInput = styled(InputBase)(templateObject_2$1 || (templateObject_2$1 = __makeTemplateObject([\"\\n  background-color: var(--clear-background);\\n  color: var(--clear-\", \");\\n  border: 1px solid var(--clear-\", \");\\n  border-radius: var(--clear-unit);\\n  padding: calc(var(--clear-unit) * 1.5);\\n  font-size: inherit;\\n  margin: calc(var(--clear-unit) / 2) 0;\\n  width: 100%;\\n  -webkit-appearance: none;\\n  \", \"\\n  \", \"\\n\"], [\"\\n  background-color: var(--clear-background);\\n  color: var(--clear-\", \");\\n  border: 1px solid var(--clear-\", \");\\n  border-radius: var(--clear-unit);\\n  padding: calc(var(--clear-unit) * 1.5);\\n  font-size: inherit;\\n  margin: calc(var(--clear-unit) / 2) 0;\\n  width: 100%;\\n  -webkit-appearance: none;\\n  \", \"\\n  \", \"\\n\"\r\n    /**\r\n     * A simple styled Input\r\n     *\r\n     * https://chadlavi.github.io/clear/#/input\r\n     */\r\n])), function (p) { return p.error ? 'error' : 'textColor'; }, function (p) { return p.error ? 'error' : 'border'; }, focusStyle, function (p) { return p.error ? errorFocusStyle : ''; });\r\n/**\r\n * A simple styled Input\r\n *\r\n * https://chadlavi.github.io/clear/#/input\r\n */\r\nvar Input = function (props) {\r\n    var label = props.label, value = props.value, other = __rest(props, [\"label\", \"value\"]);\r\n    return (createElement(StyledLabel, { className: other.className, disabled: other.disabled, error: other.error },\r\n        createElement(\"span\", null,\r\n            label,\r\n            other.required ? ' (Required)' : ''),\r\n        createElement(StyledInput, __assign({}, other, { value: value || (other.type === 'number' ? ' ' : '') }))));\r\n};\r\nvar templateObject_1$7, templateObject_2$1;\n\nvar Anchor = function (props) {\r\n    var _a;\r\n    var isExternal = Boolean((_a = props.href) === null || _a === void 0 ? void 0 : _a.match(/^http/));\r\n    return (createElement(\"a\", __assign({}, props, { target: isExternal ? '_blank' : props.target, rel: isExternal ? 'noopener noreferrer' : props.rel, title: props.title || \"Open \\\"\" + props.href + \"\\\"\" + (isExternal ? ' in a new Tab' : '') })));\r\n};\r\n/**\r\n * A simple styled `<a>`\r\n *\r\n * https://chadlavi.github.io/clear/#/link\r\n */\r\nvar Link = styled(Anchor)(templateObject_1$8 || (templateObject_1$8 = __makeTemplateObject([\"\\n  color: var(--clear-link);\\n  \", \"\\n  &[target='_blank']::after {\\n    content: ' [\\u2197]';\\n  }\\n\"], [\"\\n  color: var(--clear-link);\\n  \", \"\\n  &[target='_blank']::after {\\n    content: ' [\\\\u2197]';\\n  }\\n\"])), focusStyle);\r\nvar templateObject_1$8;\n\n/**\r\n * A simple styled `<main>`\r\n *\r\n * https://chadlavi.github.io/clear/#/layout\r\n */\r\nvar Page = styled('main')(templateObject_1$9 || (templateObject_1$9 = __makeTemplateObject([\"\\nmargin: 0 auto;\\nmargin-bottom: calc(var(--clear-unit) * 15);\\npadding: var(--clear-unit);\\nwidth: \", \"px;\\nbackground-color: var(--clear-background);\\ncolor: var(--clear-text-color);\\nfont-family: var(--clear-font-family);\\nfont-size: var(--clear-font-size-default);\\n-webkit-font-smoothing: antialiased;\\n-moz-osx-font-smoothing: grayscale;\\nmax-width: 100%;\\n&, & * {\\n  box-sizing: border-box;\\n}\\n\"], [\"\\nmargin: 0 auto;\\nmargin-bottom: calc(var(--clear-unit) * 15);\\npadding: var(--clear-unit);\\nwidth: \", \"px;\\nbackground-color: var(--clear-background);\\ncolor: var(--clear-text-color);\\nfont-family: var(--clear-font-family);\\nfont-size: var(--clear-font-size-default);\\n-webkit-font-smoothing: antialiased;\\n-moz-osx-font-smoothing: grayscale;\\nmax-width: 100%;\\n&, & * {\\n  box-sizing: border-box;\\n}\\n\"])), numbers.width.main);\r\nvar templateObject_1$9;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar ParagraphBase = function (_a) {\r\n    var margins = _a.margins, props = __rest(_a, [\"margins\"]);\r\n    return createElement(\"p\", __assign({}, props));\r\n};\r\n/**\r\n * A simple styled `<p>`\r\n *\r\n * https://chadlavi.github.io/clear/#/text\r\n */\r\nvar Paragraph = styled(ParagraphBase)(templateObject_1$a || (templateObject_1$a = __makeTemplateObject([\"\\n  line-height: 1.5;\\n  \", \"\\n\"], [\"\\n  line-height: 1.5;\\n  \",\r\n    \"\\n\"])), function (p) { return p.margins === false ? \"\\n    margin-block-start: 0;\\n    margin-block-end: 0;\\n  \" : \"\\n    margin-block-start: 1em;\\n    margin-block-end: 1em;\\n  \"; });\r\nvar templateObject_1$a;\n\n/**\r\n * A simple styled `<table>`\r\n *\r\n * https://chadlavi.github.io/clear/#/table\r\n */\r\nvar Table = styled('table')(templateObject_1$b || (templateObject_1$b = __makeTemplateObject([\"\\n  border-collapse: collapse;\\n  flex-basis: 100%;\\n  width: 100%;\\n\"], [\"\\n  border-collapse: collapse;\\n  flex-basis: 100%;\\n  width: 100%;\\n\"])));\r\nvar templateObject_1$b;\n\n/**\r\n * A simple styled `<thead>`\r\n *\r\n * https://chadlavi.github.io/clear/#/table\r\n */\r\nvar TableHead = styled('thead')(templateObject_1$c || (templateObject_1$c = __makeTemplateObject([\"\\n  th {\\n    font-size: var(--clear-font-size-label);\\n    text-align: left;\\n    padding: var(--clear-unit);\\n    padding-bottom: calc(var(--clear-unit) / 2);\\n  }\\n\"], [\"\\n  th {\\n    font-size: var(--clear-font-size-label);\\n    text-align: left;\\n    padding: var(--clear-unit);\\n    padding-bottom: calc(var(--clear-unit) / 2);\\n  }\\n\"])));\r\nvar templateObject_1$c;\n\n/**\r\n * A simple styled `<tbody>`\r\n *\r\n * https://chadlavi.github.io/clear/#/table\r\n */\r\nvar TableBody = styled('tbody')(templateObject_1$d || (templateObject_1$d = __makeTemplateObject([\"\"], [\"\"])));\r\nvar templateObject_1$d;\n\n/**\r\n * A simple styled `<td>`\r\n *\r\n * Can also be used to create a `<th>`:\r\n *\r\n * ```tsx\r\n * <TableCell as='th'>\r\n *  This will be rendered as a `<th>`\r\n * </TableCell>\r\n * ```\r\n *\r\n * https://chadlavi.github.io/clear/#/table\r\n */\r\nvar TableCell = styled('td')(templateObject_1$e || (templateObject_1$e = __makeTemplateObject([\"\\n  text-align: left;\\n  padding: var(--clear-unit);\\n\"], [\"\\n  text-align: left;\\n  padding: var(--clear-unit);\\n\"])));\r\nvar templateObject_1$e;\n\n/**\r\n * A simple styled `<tr>`\r\n *\r\n * https://chadlavi.github.io/clear/#/table\r\n */\r\nvar TableRow = styled('tr')(templateObject_1$f || (templateObject_1$f = __makeTemplateObject([\"\\n  &:nth-child(even) {\\n    td {\\n      background-color: var(--clear-zebra);\\n    }\\n    td:first-child {\\n      border-radius: var(--clear-unit) 0 0 var(--clear-unit);\\n    }\\n    td:last-child {\\n      border-radius: 0 var(--clear-unit) var(--clear-unit) 0;\\n    }\\n  }\\n\"], [\"\\n  &:nth-child(even) {\\n    td {\\n      background-color: var(--clear-zebra);\\n    }\\n    td:first-child {\\n      border-radius: var(--clear-unit) 0 0 var(--clear-unit);\\n    }\\n    td:last-child {\\n      border-radius: 0 var(--clear-unit) var(--clear-unit) 0;\\n    }\\n  }\\n\"])));\r\nvar templateObject_1$f;\n\nexport { Button, CSSVariables, Code, CodeBlock, GlobalStyles, Grid, GridItem, Header, Input, Link, Page, Paragraph, Table, TableBody, TableCell, TableHead, TableRow, colors, errorFocusStyle, focusStyle, numbers, useDarkMode, useResponsiveColor };\n","import * as React from 'react'\nimport {HashLink} from 'react-router-hash-link'\nimport styled from 'styled-components'\nimport {\n  Code,\n  CodeBlock,\n  Grid,\n  GridItem,\n  Header,\n  Input,\n  Link,\n  Paragraph,\n} from '../component-lib'\n\nconst FancyPinkInput = styled(Input)`\n  border-color: purple;\n  border-radius: 8px;\n  &:not(input) {\n    padding: 8px;\n    span {\n      font-style: italic;\n    }\n  }\n  background: pink;\n  color: purple;\n  font-size: 24px;\n  &:focus {\n    box-shadow: 0 0 0 3px pink,\n    0 0 0 4px purple;\n  }\n`\n\nexport const InputPage: React.FC = () => {\n  const [numericValue, setNumericValue] = React.useState<number | undefined>()\n  const [textValue, setTextValue] = React.useState<string | undefined>()\n  const [errorValue, setErrorValue] = React.useState<string | undefined>()\n  const [requiredValue, setRequiredValue] = React.useState<string | undefined>()\n  const [customValue, setCustomValue] = React.useState<string | undefined>()\n\n  const handleFancyChange = (e: React.ChangeEvent<HTMLInputElement>): void => setCustomValue(e.currentTarget.value)\n\n  return (\n    <>\n      <Header><Code>{'<Input>'}</Code></Header>\n      <Paragraph>\n        The <Code>Input</Code> component is a styled wrapper around an HTML <Code>{'<input>'}</Code> element.\n      </Paragraph>\n      <Paragraph>\n        Note that under the hood, the <Code>Input</Code> component actually returns an\n        HTML <Code>{'<label>'}</Code> with a nested <Code>{'<input>'}</Code> inside it. It basically looks like this:\n      </Paragraph>\n      <CodeBlock>{`<label>\n  <span>label text goes here</span>\n  <input />\n</label>`}</CodeBlock>\n      <Header as='h2' id='props'>Props</Header>\n      <Paragraph>\n        <Code>Input</Code> accepts all the props you'd expect for an HTML <Code>{'<input>'}</Code>, plus the\n        props <Code>label?: string</Code> to add a label and <Code>error?: boolean</Code> to toggle an error state.\n      </Paragraph>\n      <Header as='h2' id='customization'>Customization</Header>\n      <Paragraph>\n        See <Link as={HashLink} to={'/start#customizing'}>Customizing</Link> discussion on the Getting started page.\n      </Paragraph>\n      <Paragraph>\n        Note that <Code>Input</Code> renders a <Code>{'<label>'}</Code> with a <Code>{'<input>'}</Code> inside\n        it. When customizing <Code>Input</Code>, bear in mind that styles you write will be applied to both. You can use\n        CSS selectors like <Code>&:not(input)</Code> to apply styles to just the <Code>{'<label>'}</Code>, or selectors\n        like <Code>&:not(label)</Code> to target just the <Code>{'<input>'}</Code>. You can target the actual label text\n        with a CSS selector like <Code>&:not(input) > span</Code>.\n      </Paragraph>\n      <CodeBlock>{`const FancyPinkInput = styled(Input)\\`\n  border-color: purple;\n  border-radius: 8px;\n  &:not(input) {\n    padding: 8px;\n    span {\n      font-style: italic;\n    }\n  }\n  background: pink;\n  color: purple;\n  font-size: 24px;\n  &:focus {\n    box-shadow: 0 0 0 3px pink,\n    0 0 0 4px purple;\n  }\n\\``}</CodeBlock>\n      <Paragraph>\n        <FancyPinkInput\n          label={`Fancy pink input${customValue?.match(/fancy/i) ? '🌸' :''}`}\n          value={customValue}\n          onChange={handleFancyChange}\n        />\n      </Paragraph>\n      <Header as='h2' id='examples'>\n        <Link href={'https://github.com/chadlavi/clear/blob/master/playground/src/Pages/InputPage.tsx#L37'}>\n          Examples\n        </Link>\n      </Header>\n      <Grid spacing={8}>\n        <GridItem size={6}>\n          <Input \n            value={numericValue}\n            label={'Numeric input'}\n            type={'number'}\n            inputMode={'numeric'}\n            onChange={(e): void => setNumericValue(parseInt(e.currentTarget.value || '0'))}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Input\n            value={textValue}\n            label={'Text input'}\n            onChange={(e): void => setTextValue(e.currentTarget.value)}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Input\n            value={errorValue}\n            error\n            label={'Input with error'}\n            onChange={(e): void => setErrorValue(e.currentTarget.value)}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Input\n            value={requiredValue}\n            required\n            label={'Input'}\n            onChange={(e): void => setRequiredValue(e.currentTarget.value)}\n          />\n        </GridItem>\n      </Grid>\n    </>\n  )\n}","import * as React from 'react'\nimport {HashLink} from 'react-router-hash-link'\nimport styled from 'styled-components'\nimport {\n  Code,\n  Grid,\n  GridItem,\n  GridItemSize,\n  Header,\n  Input,\n  Link,\n  Paragraph,\n  numbers,\n} from '../component-lib'\n\ninterface ExampleContainerProps extends React.HTMLAttributes<HTMLDivElement> {\n  background?: string\n  color: string\n  padded?: boolean\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst ExampleContainer = ({background, color, padded, ...props}: ExampleContainerProps): JSX.Element => (\n  <div {...props} />\n)\n\nconst ExampleBorder = styled(ExampleContainer)`\nwidth: 100%;\nborder: 1px solid ${(p): string => p.color};\npadding: ${(p): string => p.padded === false ? '0' : 'var(--clear-unit)'};\nbackground: ${(p): string => p.background || 'var(--clear-background)'};\nborder-radius: var(--clear-unit);\n`\n\nexport const LayoutPage: React.FC = () => {\n  const [gridSpacing, setGridSpacing] = React.useState<number>(8)\n  const [gridItem1, setGridItem1] = React.useState<GridItemSize>(6)\n  const [gridItem2, setGridItem2] = React.useState<GridItemSize>(6)\n  const [gridItem3, setGridItem3] = React.useState<GridItemSize>(12)\n  \n  const gridItemOnChange = (\n    setter: React.Dispatch<React.SetStateAction<GridItemSize>>\n  ) => (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const newValue = parseInt(e.currentTarget.value, 10)\n    if (newValue > 0 && newValue <= 12) {\n      setter(newValue as GridItemSize)\n    }\n  }\n\n  return (\n    <>\n      <Header>Layout components</Header>\n      <Header as='h2' id='page'><Code>{'<Page>'}</Code></Header>\n      <Paragraph>\n        The <Code>Page</Code> component renders a horizontally centered <Code>{'<main>'}</Code> HTML element (though you\n        can use the <Link href={'https://styled-components.com/docs/api#as-polymorphic-prop'}><Code>as</Code> prop\n        </Link> to render a div or other block-level lement as necessary).\n      </Paragraph>\n      <Paragraph>\n        <Code>Page</Code>s have a width of {numbers.width.main}px or the full screen width, whichever is lower.\n      </Paragraph>\n      <Paragraph>\n        All content in your app should be contained within a <Code>Page</Code>.\n      </Paragraph>\n      <Header as='h2' id='grid'><Code>{'<Grid>'}</Code></Header>\n      <Paragraph>\n        Use the <Code>Grid</Code> component to create a 12-column layout, with <Code>GridItem</Code> children that\n        occupy a specified number of columns.\n      </Paragraph>\n      <Paragraph>\n        Besides children, <Code>Grid</Code> accepts the prop <Code>spacing?: number</Code>. If spacing is supplied, that\n        number of pixels of space will be shown around all <Code>GridItem</Code>s.\n      </Paragraph>\n      <Header as='h2' id='griditem'><Code>{'<GridItem>'}</Code></Header>\n      <Paragraph>\n        Besides children, <Code>GridItem</Code>s accept the prop <Code>size?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 |\n        11 | 12</Code>. The <Code>size</Code> prop defines how many columns the <Code>GridItem</Code> occupies. This\n        prop defaults to <Code>12</Code>.\n      </Paragraph>\n      <Header as='h3' id='responsive-sizing'>Responsive sizing</Header>\n      <Paragraph>\n        Below the <Code>xs</Code> breakpoint ({numbers.breakpoint.xs}px), all <Code>GridItem</Code>s are full-width.\n      </Paragraph>\n      <Header as='h2' id='customization'>Customization</Header>\n      <Paragraph>\n        See <Link as={HashLink} to={'/start#customizing'}>Customizing</Link> discussion on the Getting started page.\n      </Paragraph>\n      <Header as='h2' id='examples'>\n        <Link href={'https://github.com/chadlavi/clear/blob/master/playground/src/Pages/LayoutPage.tsx#L97'}>\n          Examples\n        </Link>\n      </Header>\n      <Paragraph>\n        The following interactive example grid has colored borders on the outside of the <Code>Grid</Code> and\n        the content of each <Code>GridItem</Code> to illustrate how <Code>Grid</Code>'s <Code>spacing</Code> prop\n        and <Code>GridItem</Code>'s <Code>size</Code> prop work. Change the values below to increase/decrease the Grid\n        spacing and change the column size of each item.\n      </Paragraph>\n      <ExampleBorder color='var(--clear-border)' background='var(--clear-zebra)' padded={false}>\n        <Grid spacing={gridSpacing}>\n          <GridItem>\n            <ExampleBorder color='blue'>\n              <Input \n                value={gridSpacing}\n                label={'Grid spacing'}\n                type={'number'}\n                inputMode={'numeric'}\n                min={0}\n                onChange={(e): void => setGridSpacing(parseInt(e.currentTarget.value || '0'))}\n              />\n            </ExampleBorder>\n          </GridItem>\n          <GridItem size={gridItem1}>\n            <ExampleBorder color='forestgreen'>\n              <Input\n                value={gridItem1}\n                type={'number'}\n                inputMode={'numeric'}\n                label={'Green GridItem\\'s size'}\n                onChange={gridItemOnChange(setGridItem1)}\n              />\n            </ExampleBorder>\n          </GridItem>\n          <GridItem size={gridItem2}>\n            <ExampleBorder color='red'>\n              <Input\n                value={gridItem2}\n                type={'number'}\n                inputMode={'numeric'}\n                label={'Red GridItem\\'s size'}\n                onChange={gridItemOnChange(setGridItem2)}\n              />\n            </ExampleBorder>\n          </GridItem>\n          <GridItem size={gridItem3}>\n            <ExampleBorder color='violet'>\n              <Input\n                value={gridItem3}\n                type={'number'}\n                inputMode={'numeric'}\n                label={'Violet GridItem\\'s size'}\n                onChange={gridItemOnChange(setGridItem3)}\n              />\n            </ExampleBorder>\n          </GridItem>\n        </Grid>\n      </ExampleBorder>\n    </>\n  )\n}","import * as React from 'react'\nimport {HashLink} from 'react-router-hash-link'\nimport {\n  Code,\n  CodeBlock,\n  Header,\n  Link,\n  Paragraph,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n} from '../component-lib'\nexport const TablePage: React.FC = () => (\n  <>\n    <Header>Table</Header>\n    <Paragraph>\n      Clear provides styled versions of the table primitives <Code>{'<table>'}</Code>, <Code>{'<thead>'}</Code>,\n      <Code>{'<tbody>'}</Code>, <Code>{'<tr>'}</Code>, and <Code>{'<td>'}</Code> (which can be extended to\n      cover <Code>{'<th>'}</Code>).\n    </Paragraph>\n    <Header as='h2' id='table'><Code>{'<Table>'}</Code></Header>\n    <Paragraph>\n      Use the <Code>Table</Code> component where you would use an HTML <Code>{'<table>'}</Code>.\n    </Paragraph>\n    <Header as='h2' id='tablehead'><Code>{'<TableHead>'}</Code></Header>\n    <Paragraph>\n      Use the <Code>TableHead</Code> component where you would use an HTML <Code>{'<thead>'}</Code>.\n    </Paragraph>\n    <Header as='h2' id='tablebody'><Code>{'<TableBody>'}</Code></Header>\n    <Paragraph>\n      Use the <Code>TableBody</Code> component where you would use an HTML <Code>{'<tbody>'}</Code>.\n    </Paragraph>\n    <Header as='h2' id='tablerow'><Code>{'<TableRow>'}</Code></Header>\n    <Paragraph>\n      Use the <Code>TableRow</Code> component where you would use an HTML <Code>{'<tr>'}</Code>.\n    </Paragraph>\n    <Header as='h2' id='tablecell'><Code>{'<TableCell>'}</Code></Header>\n    <Paragraph>\n      Use the <Code>TableCell</Code> component where you would use an HTML <Code>{'<td>'}</Code>.\n    </Paragraph>\n    <Paragraph>\n      <Code>TableCell</Code> can also be used for <Code>{'<th>'}</Code> (table header cell) by extending it with\n      the <Link href={'https://styled-components.com/docs/api#as-polymorphic-prop'}><Code>as</Code> prop</Link> like\n      so:\n    </Paragraph>\n    <CodeBlock>{`<TableCell as='th'>\n  This will render in the DOM as a th\n</TableCell>`}\n    </CodeBlock>\n    <Header as='h2' id='customization'>Customization</Header>\n    <Paragraph>\n      See <Link as={HashLink} to={'/start#customizing'}>Customizing</Link> discussion on the Getting started page.\n    </Paragraph>\n    <Header as='h2' id='examples'>\n      <Link href={'https://github.com/chadlavi/clear/blob/master/playground/src/Pages/TablePage.tsx#L57'}>Example</Link>\n    </Header>\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell as={'th'}>Name</TableCell>\n          <TableCell as={'th'}>email</TableCell>\n          <TableCell as={'th'}>Occupation</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        <TableRow>\n          <TableCell>Phillip J Fry</TableCell>\n          <TableCell>cosmicphil@panuccispizza.net</TableCell>\n          <TableCell>Delivery boy</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell>Turanga Leela</TableCell>\n          <TableCell>1bdi@planetexpress.biz</TableCell>\n          <TableCell>Captain</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell>Hubert J Farnsworth</TableCell>\n          <TableCell>hubie@planetexpress.biz</TableCell>\n          <TableCell>Professor</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell>Bender \"Bending\" Rodriguez</TableCell>\n          <TableCell>bender@benderisgreat.com</TableCell>\n          <TableCell>Bending unit</TableCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n  </>\n)","import * as React from 'react'\nimport {HashLink} from 'react-router-hash-link'\nimport {Link as RouterLink} from 'react-router-dom'\nimport {\n  Code,\n  CodeBlock,\n  Header,\n  Link,\n  Paragraph,\n} from '../component-lib'\n\nexport const LinkPage: React.FC = () => (\n  <>\n    <Header id={'link'}><Code>{'<Link>'}</Code></Header>\n    <Paragraph>\n      The <Code>Link</Code> component is a simple styled wrapper around an HTML <Code>{'<a>'}</Code> element.\n    </Paragraph>\n    <Header as='h2' id='external'>External vs internal links</Header>\n    <Paragraph>\n      Links with an <Code>href</Code> that matches <Code>/^http/</Code> are marked as external, and will automatically\n      open in a new tab. External links are decorated with a \"{'\\u2197'}\" icon.\n    </Paragraph>\n    <Header as='h2' id='router'>Router links</Header>\n    <Paragraph>\n      Use the <Link href={'https://styled-components.com/docs/api#as-polymorphic-prop'}><Code>as</Code> prop</Link> to\n      substitute the Link component of your choice:\n    </Paragraph>\n    <CodeBlock>\n      {'<Link as={RouterLink} to={\\'/\\'}>Router link</Link>'}\n    </CodeBlock>\n    <Header as='h2' id='customization'>Customization</Header>\n    <Paragraph>\n      See <Link as={HashLink} to={'/start#customizing'}>Customizing</Link> discussion on the Getting started page.\n    </Paragraph>\n    <Header as='h2' id='examples'>\n      <Link href={'https://github.com/chadlavi/clear/blob/master/playground/src/Pages/LinkPage.tsx#L42'}>Examples</Link>\n    </Header>\n    <Paragraph>\n      <Link href={'/clear/'}>Internal HTML link</Link> (causes page load)\n    </Paragraph>\n    <Paragraph>\n      <Link as={RouterLink} to={'/'}>Router link</Link> (does not cause page load)\n    </Paragraph>\n    <Paragraph>\n      <Link href={'https://github.com/chadlavi/clear'}>External link</Link>\n    </Paragraph>\n  </>\n)","import * as React from 'react'\nimport {\n  Code,\n  Header,\n  Link,\n  Paragraph,\n} from '../component-lib'\n\nexport const HomePage: React.FC = () => (\n  <>\n    <Header>Clear</Header>\n    <Paragraph>\n      <Link href={'https://github.com/chadlavi/clear'}>Clear</Link> is a simple personal Design System for TypeScript\n      React apps created by <Link href={'https://github.com/chadlavi'}>Chad Lavimoniere</Link>.\n    </Paragraph>\n    <Paragraph>\n      Clear features automatic dark mode support and minimalist styling via <Code>styled-components</Code>.\n    </Paragraph>\n  </>\n)","import * as React from 'react'\nimport {HashLink} from 'react-router-hash-link'\nimport {\n  Code,\n  Header,\n  Link,\n  Paragraph,\n} from '../component-lib'\n\nexport const GlobalStylesPage: React.FC = () => (\n  <>\n    <Header>Globals</Header>\n    <Header as='h2' id='cssvariables'><Code>{'<CSSVariables>'}</Code></Header>\n    <Paragraph>\n      Clear uses CSS variables extensively, so an instance of the <Code>CSSVariables</Code> component is\n      required at the top level in your application for Clear to work correctly. The component declares a set of CSS\n      variables with names that start with <Code>--clear-*</Code> that define the colors and measurements used in Clear\n      components.\n    </Paragraph>\n    <Header as='h3' id='dark-mode'>Dark mode</Header>\n    <Paragraph>\n      The <Code>CSSVariables</Code> component uses <Code>@media (prefers-color-scheme: dark)</Code> to define a set of\n      colors for use when the user's device is in dark mode. Switching between light and dark mode is handled\n      automatically.\n    </Paragraph>\n    <Header as='h2' id='globalstyles'><Code>{'<GlobalStyles>'}</Code></Header>  \n    <Paragraph>\n      The <Code>GlobalStyles</Code> component applies styles to the <Code>{'<body>'}</Code> tag. As such, <strong>this\n      component has side effects</strong>, because it creates CSS rules that affect elements outside the Clear design\n      system.\n    </Paragraph>\n    <Paragraph>\n      Omitting the <Code>GlobalStyles</Code> component in your application will mean that any content not contained in\n      a <Link as={HashLink} to={'/layout#page'}><Code>Page</Code></Link> component may have unpredictable colors,\n      background colors, font sizes, and margins. Omitting <Code>GlobalStyles</Code> is not recommended.\n    </Paragraph>\n  </>\n)","import * as React from 'react'\nimport {HashLink} from 'react-router-hash-link'\nimport {\n  Button,\n  Code,\n  Header,\n  Link,\n  Paragraph,\n} from '../component-lib'\n\nconst onClick = (copy: string) =>  (e: React.MouseEvent<HTMLButtonElement>): void => {\n  e.preventDefault()\n  alert(copy)\n}\n\nexport const ButtonPage: React.FC = () => (\n  <>\n    <Header><Code>{'<Button>'}</Code></Header>\n    <Paragraph>\n      The <Code>Button</Code> component is a simple styled wrapper around an HTML <Code>{'<button>'}</Code>.\n    </Paragraph>\n    <Header as='h2' id='props'>Props</Header>\n    <Paragraph>\n      Besides the standard props an HTML <Code>{'<button>'}</Code> accepts, <Code>Button</Code> also accepts the\n      prop <Code>primary?: boolean</Code> to mark a button as a primary call to action button.\n    </Paragraph>\n    <Header as='h2' id='customization'>Customization</Header>\n    <Paragraph>\n      See <Link as={HashLink} to={'/start#customizing'}>Customizing</Link> discussion on the Getting started page.\n    </Paragraph>\n    <Header as='h2' id='examples'>\n      <Link href={'https://github.com/chadlavi/clear/blob/master/playground/src/Pages/ButtonPage.tsx#L31'}>\n        Examples\n      </Link>\n    </Header>\n    <Header as='h3' id='standard-button'>Standard button</Header>\n    <Paragraph>\n      <Button\n        onClick={onClick('You clicked the standard button')}\n      >\n        This is a standard button\n      </Button>\n    </Paragraph>\n    <Header as='h3' id='primary-button'>Primary button</Header>\n    <Paragraph>\n      <Button\n        primary\n        onClick={onClick('You clicked the primary button')}\n      >\n        This is a primary button\n      </Button>\n    </Paragraph>\n    <Header as='h3' id='disabled-button'>Disabled button</Header>\n    <Paragraph>\n      <Button\n        disabled\n        onClick={onClick('You\\'ll never see this alert because this button is disabled')}\n      >\n        This is a disabled standard button\n      </Button>\n    </Paragraph>\n    <Paragraph>\n      <Button\n        disabled\n        primary\n        onClick={onClick('You\\'ll never see this alert because this button is disabled')}\n      >\n        This is a disabled primary button\n      </Button>\n    </Paragraph>\n  </>\n)","import * as React from 'react'\nimport {HashLink} from 'react-router-hash-link'\nimport {Code, CodeBlock, Header, Link, Paragraph, numbers} from '../component-lib'\n\nexport const TextPage: React.FC = () => (\n  <>\n    <Header>Text formatting components</Header>\n    <Paragraph>\n      Clear offers various components for formatting text.\n      See <Link href={'https://github.com/chadlavi/clear/blob/master/playground/src/Pages/TextPage.tsx'}>the source code\n      for this page</Link> for examples.\n    </Paragraph>\n    <Header as='h2' id='header'><Code>{'<Header>'}</Code></Header>\n    <Paragraph>\n      <Code>Header</Code> can be used to create HTML header elements like <Code>{'<h1>'}</Code>, <Code>{'<h2>'}</Code>,\n      etc. With no props passed, the <Code>Header</Code> defaults to rendering an <Code>{'<h1>'}</Code>.\n    </Paragraph>\n    <Header as='h3' id='header-props'><Code>Header</Code> props</Header>\n    <Paragraph>\n      Use the <Link href={'https://styled-components.com/docs/api#as-polymorphic-prop'}><Code>as</Code> prop</Link> to\n      substitute a different header element like so:\n    </Paragraph>\n    <CodeBlock>{`<Header as='h2'>\n  This will render in the DOM as an h2\n</Header>\n<Header as='h3'>\n  This will render in the DOM as an h3\n</Header>\n`}\n    </CodeBlock>\n    <Header as='h2' id='paragraph'><Code>{'<Paragraph>'}</Code></Header>\n    <Paragraph>\n      <Code>Paragraph</Code> is a simple styled wrapper around <Code>{'<p>'}</Code>.\n    </Paragraph>\n    <Header as='h3'><Code>Paragraph</Code> props</Header>\n    <Paragraph>\n      Besides the standard props that can be passed to an HTML <Code>{'<p>'}</Code> element, <Code>Paragraph</Code> also\n      accepts the prop <Code>margins?: boolean</Code>. If <Code>margins</Code> is false, the <Code>Paragraph</Code> will\n      not have margins; if it is true or undefined, the <Code>Paragraph</Code> will default to\n      having {numbers.fontSize.default}px margins at the top and bottom.\n    </Paragraph>\n    <Header as='h2' id='code'><Code>{'<Code>'}</Code></Header>\n    <Paragraph>\n      <Code>Code</Code> is a simple styled wrapper around <Code>{'<code>'}</Code>, used for formatting inline code\n      snippets.\n    </Paragraph>\n    <Header as='h2' id='codeblock'><Code>{'<CodeBlock>'}</Code></Header>\n    <Paragraph>\n      <Code>CodeBlock</Code> is a simple styled wrapper around <Code>{'<pre>'}</Code>, used for formatting block code\n      snippets.\n    </Paragraph>\n    <Header as='h2' id='customization'>Customization</Header>\n    <Paragraph>\n      See <Link as={HashLink} to={'/start#customizing'}>Customizing</Link> discussion on the Getting started page.\n    </Paragraph>\n  </>\n)","import * as React from 'react'\nimport {HashLink} from 'react-router-hash-link'\nimport styled from 'styled-components'\nimport {\n  Button,\n  ButtonProps,\n  Code,\n  CodeBlock,\n  Header,\n  Link,\n  Paragraph,\n  colors,\n  errorFocusStyle,\n  numbers,\n  useResponsiveColor,\n  useDarkMode,\n} from '../component-lib'\n\nconst ErrorButton = styled(Button)`\nbackground: var(--clear-error);\ncolor: var(--clear-background);\n`\nconst BigErrorButton = styled(Button)`\nbackground: ${colors.light.error};\ncolor: ${colors.light.background};\nfont-size: ${numbers.fontSize.default * 2}px;\nborder-radius: ${numbers.unit * 2}px;\npadding: ${numbers.unit * 4}px ${numbers.unit * 8}px;\n`\n\ninterface ExtendedButtonProps extends ButtonProps {\n  background: string\n  color: string\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst ExtendedButton = ({background, color, ...props}: ExtendedButtonProps): JSX.Element => <Button {...props} />\n\nconst ResponsiveBigErrorButton = styled(ExtendedButton)`\n  background: ${(p): string => p.background};\n  color: ${(p): string => p.color};\n  font-size: ${numbers.fontSize.default * 2}px;\n  border-radius: ${numbers.unit * 2}px;\n  padding: ${numbers.unit * 4}px ${numbers.unit * 8}px;\n`\n\nconst FocusableResponsiveBigErrorButton = styled(ExtendedButton)`\n  background: ${(p): string => p.background};\n  color: ${(p): string => p.color};\n  font-size: ${numbers.fontSize.default * 2}px;\n  border-radius: ${numbers.unit * 2}px;\n  padding: ${numbers.unit * 4}px ${numbers.unit * 8}px;\n  ${errorFocusStyle}\n`\n\nexport const GettingStartedPage: React.FC = () => (\n  <>\n    <Header>Getting started</Header>\n    <Header as='h2'>Editing your <Code>.npmrc</Code></Header>\n    <Paragraph>\n      Clear is hosted on GitHub package registry. To install it, add the following to your project's <Code>.npmrc\n      </Code>:\n    </Paragraph>\n    <CodeBlock>registry=https://npm.pkg.github.com/chadlavi</CodeBlock>\n    <Header as='h2'>Installing</Header>\n    <Paragraph>\n      After editing your <Code>.npmrc</Code>, run the following to install Clear and its required peer\n      dependency, <Code>styled-components</Code>.\n    </Paragraph>\n    <CodeBlock>{`npm i @chadlavi/clear styled-components\n\n# only necessary if you use TypeScript\nnpm i -D @types/styled-components`}</CodeBlock>\n    <Paragraph>\n      (Note: we assume here that you have already installed <Code>react</Code>. If not, install that too! Clear only\n      works in React applications.)\n    </Paragraph>\n    <Header as='h2'>Setting up your app</Header>\n    <Header as='h3'>Globals</Header>\n    <Paragraph>\n      When using Clear, you need to include a single instance\n      of <Link as={HashLink} to={'/global-styles#cssvariables'}><Code>{'<CSSVariables />'}</Code></Link> at the top\n      level of your application. You should also include an instance\n      of <Link as={HashLink} to={'/global-styles#globalstyles'}><Code>{'<GlobalStyles />'}</Code></Link>. Something\n      like:\n    </Paragraph>\n    <CodeBlock>{`// inside your index.js file\n\nimport * as React from 'react'\nimport {MyApp} from './MyApp'\nimport ReactDOM from 'react-dom'\nimport {\n  CSSVariables,\n  GlobalStyles,\n} from '@chadlavi/clear'\n\nReactDOM.render(\n  <React.StrictMode>\n    <CSSVariables/>\n    <GlobalStyles />\n    <MyApp />\n  </React.StrictMode>,\ndocument.getElementById('root')\n)`}</CodeBlock>\n    <Header as='h3'>Structure</Header>\n    <Paragraph>\n      You should wrap content in your app with a <Link as={HashLink} to ={'/layout#page'}><Code>{'<Page>'}</Code>\n      </Link>.\n    </Paragraph>\n    <Paragraph>\n      Use the <Link as={HashLink} to ={'/layout#grid'}><Code>{'<Grid>'}</Code> and <Code>{'<GridItem>'}</Code>\n      </Link> components to organize content on a 12-column grid.\n    </Paragraph>\n    <Header as='h3'>Import statements</Header>\n    <Paragraph>\n      All components in Clear are exported at the top level in the library, so you can write import statements like\n    </Paragraph>\n    <CodeBlock>{`import {\n  CSSVariables,\n  GlobalStyles,\n  Header,\n  Link,\n  Page,\n} from '@chadlavi/clear'`}\n    </CodeBlock>\n    <Header as='h3' id='customizing'>Customizing</Header>\n    <Paragraph>\n      Since <Link as={HashLink} to={'/global-styles#cssvariables'}><Code>{'<CSSVariables />'}</Code></Link> creates\n      global CSS variables, you can access them in your app's styles.\n    </Paragraph>\n    <Paragraph>\n      Let's say you want to create an error button. You can access the Clear CSS variable <Code>var(--clear-error)\n      </Code> like this:\n    </Paragraph>\n    <CodeBlock>{`// ErrorButton.tsx\n\nimport * as React from 'react'\nimport styled from 'styled-components'\nimport {Button} from '@chadlavi/clear'\n\nexport const ErrorButton = styled(Button)\\`\n  background: var(--clear-error);\n  color: var(--clear-background);\n\\``}</CodeBlock>\n    <CodeBlock>{`// somewhere in your app\n\n<ErrorButton\n  onClick={(): void => alert('You clicked the error button')}\n>\n  Error button\n</ErrorButton>`}</CodeBlock>\n    <Paragraph>\n      <ErrorButton\n        onClick={(): void => alert('You clicked the error button')}\n      >\n        Error button\n      </ErrorButton>\n    </Paragraph>\n    <Paragraph>\n      Note that CSS variables from Clear automatically change to accommodate dark mode; the variable <Code>\n      var(--clear-error)</Code> will yield <Code>{colors.light.error}</Code> in light mode\n      and <Code>{colors.dark.error}</Code> in dark mode. Your browser is currently\n      in {useDarkMode() ? 'dark' : 'light'} mode, so the button above should have background\n      color <Code>{useResponsiveColor('error')}</Code>.\n    </Paragraph>\n    <Header as='h4'>Accessing theme values in code</Header>\n    <Paragraph>\n      If you use JSS or just need access to a theme value in your code, you can also access color and number values\n      from Clear directly in your code with the exported <Code>colors</Code> and <Code>numbers</Code> objects:\n    </Paragraph>\n    <CodeBlock>{`// BigErrorButton.tsx\n\nimport * as React from 'react'\nimport styled from 'styled-components'\nimport {\n  Button,\n  colors,\n  numbers,\n} from '@chadlavi/clear'\n\nexport const BigErrorButton = styled(Button)\\`\n  background: \\${colors.light.error};\n  border-radius: \\${numbers.unit * 2}px;\n  color: \\${colors.light.background};\n  font-size: \\${numbers.fontSize.default * 2}px;\n  padding: \\${numbers.unit * 4}px \\${numbers.unit * 8}px;\n\\``}</CodeBlock>\n    <CodeBlock>{`// somewhere in your app\n\n<BigErrorButton\n  onClick={(): void => alert('You clicked the big error button')}\n>\n  Big error button (BEB)\n</BigErrorButton>`}</CodeBlock>\n    <Paragraph>\n      <BigErrorButton\n        onClick={(): void => alert('You clicked the big error button')}\n      >\n        Big error button (BEB)\n      </BigErrorButton>\n    </Paragraph>\n    <Paragraph>\n      Note that in this case, the colors used will <i>not</i> respond to system dark/light mode changes. If you toggle\n      your device back and forth between light and dark mode, you'll see that the big error button example above does\n      not change.\n    </Paragraph>\n    <Paragraph>\n      You can solve this by using the React hook <Code>useResponsiveColor: (name: Color) => string</Code> inside a React\n      functional component to select a color value.\n    </Paragraph>\n    <CodeBlock>{`// ResponsiveBigErrorButton.tsx\n\nimport * as React from 'react'\nimport styled from 'styled-components'\nimport {\n  ButtonProps,\n  Button,\n  numbers,\n  useResponsiveColor,\n} from '@chadlavi/clear'\n\ninterface ExtendedButtonProps extends ButtonProps {\n  background: string\n  color: string\n}\n\nconst ExtendedButton = (\n  {background, color, ...props}: ExtendedButtonProps\n): JSX.Element => <Button {...props} />\n\nexport const ResponsiveBigErrorButton = styled(ExtendedButton)\\`\n  background: \\${(p): string => p.background};\n  color: \\${(p): string => p.color};\n  font-size: \\${numbers.fontSize.default * 2}px;\n  border-radius: \\${numbers.unit * 2}px;\n  padding: \\${numbers.unit * 4}px ${numbers.unit * 8}px;\n\\``}</CodeBlock>\n    <CodeBlock>{`// somewhere inside your React functional component\n    \n<ResponsiveBigErrorButton\n  background={useResponsiveColor('error')}\n  color={useResponsiveColor('background')}\n  onClick={(): void => alert('You clicked the responsive big error button')}\n>\n  Responsive BEB\n</ResponsiveBigErrorButton>`}</CodeBlock>\n    <Paragraph>\n      <ResponsiveBigErrorButton\n        background={useResponsiveColor('error')}\n        color={useResponsiveColor('background')}\n        onClick={(): void => alert('You clicked the responsive big error button')}\n      >\n        Responsive BEB\n      </ResponsiveBigErrorButton>\n    </Paragraph>\n    <Paragraph>\n      You can also access the standard Clear focus style and error focus style with <Code>focusStyle</Code> and <Code>\n      errorFocusStyle</Code>. Let's give our responsive big error button an error focus style:\n    </Paragraph>\n    <CodeBlock>{`// FocusableResponsiveBigErrorButton.tsx\n \nimport * as React from 'react'\nimport styled from 'styled-components'\nimport {\n  ButtonProps,\n  Button,\n  numbers,\n  useResponsiveColor,\n} from '@chadlavi/clear'\n\ninterface ExtendedButtonProps extends ButtonProps {\n  background: string\n  color: string\n}\n\nconst ExtendedButton = (\n  {background, color, ...props}: ExtendedButtonProps\n): JSX.Element => <Button {...props} />\n\nexport const FocusableResponsiveBigErrorButton = styled(ExtendedButton)\\`\n  background: \\${(p): string => p.background};\n  color: \\${(p): string => p.color};\n  font-size: \\${numbers.fontSize.default * 2}px;\n  border-radius: \\${numbers.unit * 2}px;\n  padding: \\${numbers.unit * 4}px ${numbers.unit * 8}px;\n  \\${errorFocusStyle}\n\\``}</CodeBlock>\n    <CodeBlock>{`// somewhere inside your React functional component\n\n<FocusableResponsiveBigErrorButton\n  background={useResponsiveColor('error')}\n  color={useResponsiveColor('background')}\n  onClick={(): void => alert(\n    'Focus this button and the last one to see the difference'\n  )}\n>\n  Responsive BEB with error focus\n</FocusableResponsiveBigErrorButton>`}</CodeBlock>\n    <Paragraph>\n      <FocusableResponsiveBigErrorButton\n        background={useResponsiveColor('error')}\n        color={useResponsiveColor('background')}\n        onClick={(): void => alert('Focus this button and the last one to see the difference')}\n      >\n        Responsive BEB with error focus\n      </FocusableResponsiveBigErrorButton>\n    </Paragraph>\n  </>\n)\n","import * as React from 'react'\nimport {version} from '../package.json'\nimport {\n  ButtonPage,\n  GettingStartedPage,\n  GlobalStylesPage,\n  HomePage,\n  InputPage,\n  LayoutPage,\n  LinkPage,\n  TablePage,\n  TextPage,\n} from './Pages'\nimport {\n  Grid,\n  GridItem,\n  Link,\n  Page,\n} from './component-lib'\nimport {\n  Route,\n  HashRouter as Router,\n  Link as RouterLink,\n  Switch\n} from 'react-router-dom'\n\nconst routes = [\n  {\n    label: `Clear (${version})`,\n    exact: true,\n    route: '/',\n    component: <HomePage />,\n  },\n  {\n    label: 'Getting started',\n    route: '/start',\n    component: <GettingStartedPage />,\n  },\n  {\n    label: 'Globals',\n    route: '/global-styles',\n    component: <GlobalStylesPage />,\n  },\n  {\n    label: 'Layout',\n    route: '/layout',\n    component: <LayoutPage />,\n  },\n  {\n    label: 'Input',\n    route: '/input',\n    component: <InputPage />,\n  },\n  {\n    label: 'Button',\n    route: '/button',\n    component: <ButtonPage />,\n  },\n  {\n    label: 'Link',\n    route: '/link',\n    component: <LinkPage />,\n  },\n  {\n    label: 'Text',\n    route: '/text',\n    component: <TextPage />,\n  },\n  {\n    label: 'Table',\n    route: '/table',\n    component: <TablePage />,\n  }\n]\n\nexport const Routes: React.FC = () => (\n  <Page>\n    <Router basename='/'>\n      <Grid spacing={16}>\n        <GridItem>\n          {routes.map((r, i) => (\n            <React.Fragment key={r.label}>\n              <Link\n                as={RouterLink}\n                to={r.route}\n              >\n                {r.label}\n              </Link>\n              {i !== routes.length - 1 ? ' \\u00b7 ' : ''}\n            </React.Fragment>\n          ))}\n        </GridItem>\n        <GridItem>\n          <Switch>\n            {routes.map((r) => (\n              <Route\n                key={r.label}\n                exact\n                path={r.route}\n              >\n                {r.component}\n              </Route>\n            ))}\n          </Switch>\n        </GridItem>\n      </Grid>\n    </Router>\n  </Page>\n)\n","import * as React from 'react'\nimport * as serviceWorker from './serviceWorker'\nimport ReactDOM from 'react-dom'\nimport {Routes} from './Routes'\nimport {CSSVariables, GlobalStyles} from './component-lib'\n\nReactDOM.render(\n  <React.StrictMode>\n    <CSSVariables/>\n    <GlobalStyles />\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}