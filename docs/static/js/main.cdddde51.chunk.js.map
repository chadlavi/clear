{"version":3,"sources":["serviceWorker.ts","utils.ts","component-lib/index.js","Pages/ButtonPage.tsx","Pages/GettingStartedPage.tsx","Pages/GlobalStylesPage.tsx","Pages/HelpersPage.tsx","Pages/HomePage.tsx","Pages/InputPage.tsx","Pages/LayoutPage.tsx","Pages/LinkPage.tsx","Pages/NotificationPage.tsx","Pages/TablePage.tsx","Pages/TextPage.tsx","Routes.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","setTitle","title","document","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__makeTemplateObject","cooked","raw","defineProperty","value","templateObject_1","templateObject_1$1","templateObject_1$2","templateObject_1$3","templateObject_2","templateObject_3","templateObject_4","templateObject_5","templateObject_1$4","templateObject_1$5","templateObject_1$6","templateObject_1$7","templateObject_1$8","templateObject_1$9","templateObject_1$a","templateObject_1$b","templateObject_1$c","templateObject_2$1","templateObject_3$1","templateObject_4$1","templateObject_1$d","templateObject_1$e","templateObject_1$f","templateObject_2$2","templateObject_3$2","templateObject_4$2","templateObject_5$1","templateObject_6","templateObject_1$g","templateObject_2$3","templateObject_1$h","templateObject_1$i","templateObject_1$j","templateObject_1$k","templateObject_1$l","templateObject_1$m","templateObject_1$n","colors","light","background","blue","border","error","green","link","textColor","violet","zebra","dark","focusStyle","errorFocusStyle","numbers","breakpoint","xs","sm","md","lg","fontSize","default","unit","label","width","main","Math","pow","xl","CSSVariables","createGlobalStyle","keys","map","c","k","GlobalStyles","useMediaQuery","query","_a","useState","matchMedia","matches","result","setResult","callback","useCallback","matchMediaResult","useEffect","addListener","removeListener","useDarkMode","useResponsiveColor","color","theme","Button","styled","primary","props","createElement","disabled","Wrapper","div","InputWrapper","StyledInput","type","checked","Icon","version","xmlns","x","y","StyledLabel","Checkbox","other","viewBox","points","htmlFor","id","Code","CodeBlock","GridItem","size","Grid","spacing","Header","forwardOnFocus","func","currentTarget","setTimeout","select","Input","onClick","onFocus","Label","required","Fragment","children","Link","isExternal","href","target","rel","NotificationBase","buttonProps","dismissible","mini","success","timeOut","transient","NotificationWrapper","StyledNotification","NotificationContent","DismissButton","Notification","_b","open","setOpen","transientOnClose","className","undefined","Page","Paragraph","margins","Wrapper$1","InputWrapper$1","StyledInput$1","SVGContainer","Icon$1","cx","cy","r","stroke","fill","strokeWidth","StyledLabel$1","Radio","role","tabIndex","Container$2","contentMinHeight","contentMinWidth","direction","maxHeight","maxWidth","Content","ScrollContainer","StyledSelect","SelectOptions","options","o","key","Select","multiple","defaultValue","hidden","handleMutliSelectOnChange","setter","updatedOptions","Array","from","filter","option","selected","jumpTo","el","getElementById","scrollIntoView","focus","SkipLinkButton","SkipLink","Table","TableCell","TableHead","TableBody","TableRow","GenerateTable","data","headers","h","as","charAt","toUpperCase","slice","JSON","stringify","copy","preventDefault","alert","ButtonPage","React","standard","setStandard","setPrimary","HashLink","to","ErrorButton","BigErrorButton","ExtendedButton","ResponsiveBigErrorButton","FocusableResponsiveBigErrorButton","GettingStartedPage","GlobalStylesPage","HelpersPage","style","HomePage","FancyPinkParagraph","FancyPinkInput","selectOptions","InputPage","numericValue","setNumericValue","textValue","setTextValue","errorValue","setErrorValue","disabledValue","requiredValue","setRequiredValue","customValue","setCustomValue","textAreaValue","setTextAreaValue","singleSelectValue","setSingleSelectValue","errorSingleSelectValue","setErrorSingleSelectValue","requiredSingleSelectValue","setRequiredSingleSelectValue","multiSelectValue","setMultiSelectValue","errorMultiSelectValue","setErrorMultiSelectValue","requiredMultiSelectValue","setRequiredMultiSelectValue","setChecked","errorChecked","setErrorChecked","radioValue","setRadioValue","onChange","inputMode","parseInt","rows","name","ExampleBorder","padded","LayoutPage","gridSpacing","setGridSpacing","gridItem1","setGridItem1","gridItem2","setGridItem2","gridItem3","setGridItem3","gridItemOnChange","newValue","min","borderRadius","padding","position","bottom","fontWeight","right","height","LinkPage","RouterLink","NotificationPage","setSuccess","setError","setTransient","transientUndismissible","setTransientUndismissible","setMini","setAllFalse","tableHeaders","tableData","email","occupation","TablePage","toString","TextPage","routes","exact","route","component","Routes","scrollinate","a","anchor","scrollToHash","hash","replace","substr","split","basename","aria-label","NavLink","path","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.cdddde51.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const setTitle = (title?: string): void => {\n  document.title = `Clear${title? ` | ${title}` : ''}`\n}\n","/* eslint-disable */\nimport { useState, useCallback, useEffect, createElement, Fragment } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n}\n\nvar colors = {\r\n    light: {\r\n        background: 'white',\r\n        blue: '#005cb8',\r\n        border: '#ddd',\r\n        error: '#cf0303',\r\n        green: '#067940',\r\n        link: '#55e',\r\n        textColor: '#111',\r\n        violet: '#bc1abc',\r\n        zebra: '#f8f8f8',\r\n    },\r\n    dark: {\r\n        background: '#0a0a0a',\r\n        blue: 'dodgerblue',\r\n        border: '#555',\r\n        error: '#f99',\r\n        green: '#40bf80',\r\n        link: '#9e9efa',\r\n        textColor: 'white',\r\n        violet: 'violet',\r\n        zebra: '#1a1a1a',\r\n    }\r\n};\n\nvar focusStyle = \"\\n:focus {\\n  outline: none;\\n  box-shadow: 0 0 0 calc(var(--clear-unit) / 4) var(--clear-background),\\n    0 0 0 calc(var(--clear-unit) / 2) var(--clear-link);\\n}\\n::-moz-focus-inner {\\n  border:0;\\n}\\n\";\r\nvar errorFocusStyle = \"\\n:focus {\\n  outline: none;\\n  box-shadow: 0 0 0 calc(var(--clear-unit) / 4) var(--clear-background),\\n    0 0 0 calc(var(--clear-unit) / 2) var(--clear-error);\\n}\\n::-moz-focus-inner {\\n  border:0;\\n}\\n\";\n\nvar unit = 8;\r\nvar width = {\r\n    main: 95 * unit,\r\n    lg: Math.pow(unit, 3) * 2,\r\n    xl: Math.pow(unit, 3) * 4,\r\n};\r\nvar numbers = {\r\n    breakpoint: {\r\n        xs: 600,\r\n        sm: 960,\r\n        md: 1280,\r\n        lg: 1920,\r\n    },\r\n    fontSize: {\r\n        default: unit * 2,\r\n        label: unit * 1.75,\r\n    },\r\n    width: width,\r\n    unit: unit,\r\n};\n\n/**\r\n * Creates a set of css variables necessary for global colors. This component\r\n * should be included once at the top level of your application.\r\n *\r\n * https://chadlavi.github.io/clear/#/global-styles#cssvariables\r\n */\r\nvar CSSVariables = createGlobalStyle(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  :root {\\n    \", \"\\n\\n    --clear-unit: \", \"px;\\n    --clear-main-width: \", \"px;\\n    --clear-font-size-default: \", \"px;\\n    --clear-font-size-label: \", \"px;\\n\\n    \", \"\\n\\n    --clear-font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, Ubuntu,\\n      roboto, noto, segoe ui, arial, sans-serif;\\n    --clear-monospace-font-family: Menlo, Consolas, Monaco, Liberation Mono, Lucida Console, monospace;\\n  }\\n\\n  @media (prefers-color-scheme: dark) {\\n    :root {\\n      \", \"\\n    }\\n  }\\n  \"], [\"\\n  :root {\\n    \", \"\\n\\n    --clear-unit: \", \"px;\\n    --clear-main-width: \", \"px;\\n    --clear-font-size-default: \", \"px;\\n    --clear-font-size-label: \", \"px;\\n\\n    \",\r\n    \"\\n\\n    --clear-font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, Ubuntu,\\n      roboto, noto, segoe ui, arial, sans-serif;\\n    --clear-monospace-font-family: Menlo, Consolas, Monaco, Liberation Mono, Lucida Console, monospace;\\n  }\\n\\n  @media (prefers-color-scheme: dark) {\\n    :root {\\n      \", \"\\n    }\\n  }\\n  \"])), Object.keys(colors.light).map(function (c) { return \"--clear-\" + c + \": \" + colors.light[c] + \";\"; }), numbers.unit, numbers.width.main, numbers.fontSize.default, numbers.fontSize.label, Object.keys(numbers.breakpoint).map(function (k) { return \"--clear-breakpoint-\" + k + \": \" + numbers.breakpoint[k] + \"px;\"; }), Object.keys(colors.dark).map(function (c) { return \"--clear-\" + c + \": \" + colors.dark[c] + \";\"; }));\r\nvar templateObject_1;\n\n/**\r\n * Applies styles to the `<body>` of your app.\r\n *\r\n * https://chadlavi.github.io/clear/#/global-styles#globalstyles\r\n */\r\nvar GlobalStyles = createGlobalStyle(templateObject_1$1 || (templateObject_1$1 = __makeTemplateObject([\"\\n  body {\\n    margin: 0;\\n    background-color: var(--clear-background);\\n    color: var(--clear-textColor);\\n    font-family: var(--clear-font-family);\\n    font-size: var(--clear-font-size-default);\\n    text-rendering: geometricPrecision;\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n    -webkit-text-size-adjust: 100%;\\n  }\\n\"], [\"\\n  body {\\n    margin: 0;\\n    background-color: var(--clear-background);\\n    color: var(--clear-textColor);\\n    font-family: var(--clear-font-family);\\n    font-size: var(--clear-font-size-default);\\n    text-rendering: geometricPrecision;\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n    -webkit-text-size-adjust: 100%;\\n  }\\n\"])));\r\nvar templateObject_1$1;\n\n/**\r\n * This basic React hook returns a boolean value that reflects whether or not the given query matches.\r\n *\r\n * https://chadlavi.github.io/clear/#/helpers#usemediaquery\r\n */\r\nvar useMediaQuery = function (query) {\r\n    var _a = useState(matchMedia(query).matches), result = _a[0], setResult = _a[1];\r\n    var callback = useCallback(function (matchMediaResult) { return setResult(matchMediaResult.matches); }, [setResult]);\r\n    useEffect(function () {\r\n        var matchMediaResult = matchMedia(query);\r\n        callback(matchMediaResult);\r\n        matchMediaResult.addListener(callback);\r\n        return function () { return matchMediaResult.removeListener(callback); };\r\n    }, [callback]);\r\n    return result;\r\n};\r\n/**\r\n * Returns a boolean value that reflects whether or not the user's viewport is smaller than the given breakpoint.\r\n *\r\n * https://chadlavi.github.io/clear/#/helpers#usebreakpoint\r\n */\r\nvar useBreakpoint = function (breakpoint) { return useMediaQuery(\"(max-width: \" + numbers.breakpoint[breakpoint] + \"px)\"); };\r\n/**\r\n * Returns a boolean value that reflects whether or not the user's browser is currently in dark mode.\r\n *\r\n * https://chadlavi.github.io/clear/#/helpers#usedarkmode\r\n */\r\nvar useDarkMode = function () { return useMediaQuery('(prefers-color-scheme: dark)'); };\r\n/**\r\n * Returns a boolean value that reflects whether or not the user's browser is currently in dark mode.\r\n *\r\n * https://chadlavi.github.io/clear/#/helpers#useresponsivecolor\r\n */\r\nvar useResponsiveColor = function (color) {\r\n    var theme = useDarkMode() ? 'dark' : 'light';\r\n    return colors[theme][color];\r\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar ButtonBase = function (_a) {\r\n    var primary = _a.primary, props = __rest(_a, [\"primary\"]);\r\n    return createElement(\"button\", __assign({}, props));\r\n};\r\n/**\r\n * A simple styled `<button>`\r\n *\r\n * https://chadlavi.github.io/clear/#/button\r\n */\r\nvar Button = styled(ButtonBase)(templateObject_1$2 || (templateObject_1$2 = __makeTemplateObject([\"\\n  background: var(--clear-border);\\n  border-radius: var(--clear-unit);\\n  border: none;\\n  color: var(--clear-textColor);\\n  \", \";\\n  cursor: pointer;\\n  \", \";\\n  font-size: var(--clear-font-size-label);\\n  margin: 0;\\n  padding: var(--clear-unit) calc(var(--clear-unit) * 2);\\n  @media (prefers-color-scheme: dark) {\\n    font-weight: 500;\\n  }\\n  \", \"\\n\"], [\"\\n  background: var(--clear-border);\\n  border-radius: var(--clear-unit);\\n  border: none;\\n  color: var(--clear-textColor);\\n  \",\r\n    \";\\n  cursor: pointer;\\n  \",\r\n    \";\\n  font-size: var(--clear-font-size-label);\\n  margin: 0;\\n  padding: var(--clear-unit) calc(var(--clear-unit) * 2);\\n  @media (prefers-color-scheme: dark) {\\n    font-weight: 500;\\n  }\\n  \", \"\\n\"])), function (p) { return p.primary ? \"\\n    background: var(--clear-link);\\n    color: var(--clear-background);\\n  \" : ''; }, function (p) { return p.disabled ? \"\\n    cursor: not-allowed;\\n    opacity: 0.5;\\n  \" : ''; }, focusStyle);\r\nvar templateObject_1$2;\n\nvar Wrapper = styled.div(templateObject_1$3 || (templateObject_1$3 = __makeTemplateObject([\"\\n  align-items: center;\\n  display: flex;\\n  margin: var(--clear-unit);\\n\"], [\"\\n  align-items: center;\\n  display: flex;\\n  margin: var(--clear-unit);\\n\"])));\r\nvar InputWrapper = styled.div(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  display: block;\\n  height: var(--clear-font-size-label);\\n  width: var(--clear-font-size-label);\\n  position: relative;\\n\"], [\"\\n  display: block;\\n  height: var(--clear-font-size-label);\\n  width: var(--clear-font-size-label);\\n  position: relative;\\n\"\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n])));\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar InputBase = function (_a) {\r\n    var error = _a.error, label = _a.label, props = __rest(_a, [\"error\", \"label\"]);\r\n    return (createElement(\"input\", __assign({}, props, { type: 'checkbox' })));\r\n};\r\nvar StyledInput = styled(InputBase)(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n  -webkit-appearance: none;\\n  background: var(--clear-\", \");\\n  border-radius: calc(var(--clear-unit) / 4);\\n  border: 1px solid var(--clear-\", \");\\n  display: block;\\n  height: var(--clear-font-size-label);\\n  margin: 0;\\n  width: var(--clear-font-size-label);\\n  opacity: \", \";\\n  cursor: \", \";\\n  \", \"\\n  \", \"\\n\"], [\"\\n  -webkit-appearance: none;\\n  background: var(--clear-\", \");\\n  border-radius: calc(var(--clear-unit) / 4);\\n  border: 1px solid var(--clear-\", \");\\n  display: block;\\n  height: var(--clear-font-size-label);\\n  margin: 0;\\n  width: var(--clear-font-size-label);\\n  opacity: \", \";\\n  cursor: \", \";\\n  \", \"\\n  \", \"\\n\"])), function (p) { return p.checked ? (p.error ? 'error' : 'link') : 'background'; }, function (p) { return p.error ? 'error' : (p.checked ? 'link' : 'textColor'); }, function (p) { return p.disabled ? '0.5' : '1'; }, function (p) { return p.disabled ? 'not-allowed' : 'pointer'; }, focusStyle, function (p) { return p.error ? errorFocusStyle : ''; });\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar SVGBase = function (_a) {\r\n    var checked = _a.checked, props = __rest(_a, [\"checked\"]);\r\n    return (createElement(\"svg\", __assign({ version: '1.1', xmlns: 'http://www.w3.org/2000/svg', x: '0', y: '0' }, props)));\r\n};\r\nvar Icon = styled(SVGBase)(templateObject_4 || (templateObject_4 = __makeTemplateObject([\"\\n  fill: none;\\n  stroke: var(--clear-background);\\n  stroke-width: calc(var(--clear-unit) / 4 + 1px);\\n  pointer-events: none;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  display: \", \"\\n\"], [\"\\n  fill: none;\\n  stroke: var(--clear-background);\\n  stroke-width: calc(var(--clear-unit) / 4 + 1px);\\n  pointer-events: none;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  display: \", \"\\n\"])), function (p) { return p.checked ? 'block' : 'none'; });\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar LabelBase = function (_a) {\r\n    var disabled = _a.disabled, error = _a.error, props = __rest(_a, [\"disabled\", \"error\"]);\r\n    return (createElement(\"label\", __assign({}, props)));\r\n};\r\nvar StyledLabel = styled(LabelBase)(templateObject_5 || (templateObject_5 = __makeTemplateObject([\"\\n  \", \";\\n  opacity: \", \";\\n  cursor: \", \";\\n  margin-left: var(--clear-unit);\\n\"], [\"\\n  \", \";\\n  opacity: \", \";\\n  cursor: \", \";\\n  margin-left: var(--clear-unit);\\n\"\r\n    /**\r\n     * A wrapper around HTML `<input type='checkbox'>`.\r\n     *\r\n     * https://chadlavi.github.io/clear/#/input#checkbox\r\n     */\r\n])), function (p) { return p.error ? 'color: var(--clear-error)' : ''; }, function (p) { return p.disabled ? '0.5' : '1'; }, function (p) { return p.disabled ? 'not-allowed' : 'pointer'; });\r\n/**\r\n * A wrapper around HTML `<input type='checkbox'>`.\r\n *\r\n * https://chadlavi.github.io/clear/#/input#checkbox\r\n */\r\nvar Checkbox = function (props) {\r\n    var error = props.error, label = props.label, other = __rest(props, [\"error\", \"label\"]);\r\n    return (createElement(Wrapper, null,\r\n        createElement(InputWrapper, null,\r\n            createElement(StyledInput, __assign({ error: error }, other)),\r\n            createElement(Icon, { checked: other.checked, viewBox: '0 0 24 24' },\r\n                createElement(\"polyline\", { points: '20 6 9 17 4 12' }))),\r\n        label &&\r\n            createElement(StyledLabel, { disabled: other.disabled, error: error, htmlFor: other.id }, label)));\r\n};\r\nvar templateObject_1$3, templateObject_2, templateObject_3, templateObject_4, templateObject_5;\n\n/**\r\n * A simple styled `<code>`\r\n *\r\n * https://chadlavi.github.io/clear/#/text#code\r\n */\r\nvar Code = styled('code')(templateObject_1$4 || (templateObject_1$4 = __makeTemplateObject([\"\\n  font-family: var(--clear-monospace-font-family);\\n  font-size: 0.9em;\\n  display: inline;\\n  margin: 0;\\n  background: var(--clear-zebra);\\n  padding: calc(1em / 8) calc(1em / 8 + 1px);\\n  border-radius: calc(1em / 4);\\n\"], [\"\\n  font-family: var(--clear-monospace-font-family);\\n  font-size: 0.9em;\\n  display: inline;\\n  margin: 0;\\n  background: var(--clear-zebra);\\n  padding: calc(1em / 8) calc(1em / 8 + 1px);\\n  border-radius: calc(1em / 4);\\n\"])));\r\nvar templateObject_1$4;\n\n/**\r\n * A simple styled `<pre>` for formatting code blocks\r\n *\r\n * https://chadlavi.github.io/clear/#/text#codeblock\r\n */\r\nvar CodeBlock = styled('pre')(templateObject_1$5 || (templateObject_1$5 = __makeTemplateObject([\"\\n  font-family: var(--clear-monospace-font-family);\\n  font-size: 0.9em;\\n  line-height: 1.5;\\n  display: block;\\n  margin-block-end: calc(var(--clear-unit) * 2);\\n  margin-block-start: calc(var(--clear-unit) * 2);\\n  background: var(--clear-zebra);\\n  padding: calc(var(--clear-unit) * 2);\\n  border-radius: var(--clear-unit);\\n  overflow-x: auto;\\n\"], [\"\\n  font-family: var(--clear-monospace-font-family);\\n  font-size: 0.9em;\\n  line-height: 1.5;\\n  display: block;\\n  margin-block-end: calc(var(--clear-unit) * 2);\\n  margin-block-start: calc(var(--clear-unit) * 2);\\n  background: var(--clear-zebra);\\n  padding: calc(var(--clear-unit) * 2);\\n  border-radius: var(--clear-unit);\\n  overflow-x: auto;\\n\"])));\r\nvar templateObject_1$5;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar Container = function (_a) {\r\n    var size = _a.size, props = __rest(_a, [\"size\"]);\r\n    return createElement(\"div\", __assign({}, props));\r\n};\r\n/**\r\n * A simple 12-column grid item. Must be used as a direct child of `<Grid>`.\r\n *\r\n * https://chadlavi.github.io/clear/#/layout#griditem\r\n */\r\nvar GridItem = styled(Container)(templateObject_1$6 || (templateObject_1$6 = __makeTemplateObject([\"\\n  flex-basis: calc(100% * \", \" / 12);\\n  width: calc(100% * \", \" / 12);\\n  max-width: calc(100% * \", \" / 12);\\n  @media only screen and (max-width: \", \"px) {\\n    flex-basis: 100%;\\n    width: 100%;\\n    max-width: 100%;\\n  }\\n\"], [\"\\n  flex-basis: calc(100% * \", \" / 12);\\n  width: calc(100% * \", \" / 12);\\n  max-width: calc(100% * \", \" / 12);\\n  @media only screen and (max-width: \", \"px) {\\n    flex-basis: 100%;\\n    width: 100%;\\n    max-width: 100%;\\n  }\\n\"])), function (p) { return p.size || 12; }, function (p) { return p.size || 12; }, function (p) { return p.size || 12; }, numbers.breakpoint.xs);\r\nvar templateObject_1$6;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar Container$1 = function (_a) {\r\n    var spacing = _a.spacing, props = __rest(_a, [\"spacing\"]);\r\n    return createElement(\"div\", __assign({}, props));\r\n};\r\n/**\r\n * A simple 12-column grid container. Must be used in conjunciton with\r\n * `<GridItem>`.\r\n *\r\n * https://chadlavi.github.io/clear/#/layout#grid\r\n */\r\nvar Grid = styled(Container$1)(templateObject_1$7 || (templateObject_1$7 = __makeTemplateObject([\"\\n  display: flex;\\n  flex-wrap: wrap;\\n  padding: \", \"px;\\n  & > \", \" {\\n    padding: \", \"px;\\n  }\\n\"], [\"\\n  display: flex;\\n  flex-wrap: wrap;\\n  padding: \", \"px;\\n  & > \", \" {\\n    padding: \", \"px;\\n  }\\n\"])), function (p) { return p.spacing ? p.spacing / 2 : 0; }, GridItem, function (p) { return p.spacing ? p.spacing / 2 : 0; });\r\nvar templateObject_1$7;\n\n/**\r\n * A simple styled `<h1>`\r\n *\r\n * Can also be used to create any header (`h1` through `h6`):\r\n *\r\n * ```tsx\r\n * <Header as='h2'>\r\n *  This will render in the DOM as an `<h2>`\r\n * </Header>\r\n * ```\r\n *\r\n * https://chadlavi.github.io/clear/#/text#header\r\n */\r\nvar Header = styled('h1')(templateObject_1$8 || (templateObject_1$8 = __makeTemplateObject([\"\"], [\"\"])));\r\nvar templateObject_1$8;\n\n/**\r\n * Calls props.onClick, but also selects the contents of the Input on click\r\n * @param func the onClick passed to `<Input>`\r\n */\r\nvar forwardOnClick = function (func) { return function (e) {\r\n    var t = e.currentTarget;\r\n    if (func)\r\n        func(e);\r\n    if (t.value)\r\n        setTimeout(function () {\r\n            t.select();\r\n        }, 1);\r\n}; };\r\n/**\r\n * Calls props.onFocus, but also selects the contents of the Input on focus\r\n * @param func the onFocus passed to `<Input>`\r\n */\r\nvar forwardOnFocus = function (func) { return function (e) {\r\n    var t = e.currentTarget;\r\n    if (func)\r\n        func(e);\r\n    if (t.value)\r\n        setTimeout(function () {\r\n            t.select();\r\n        }, 1);\r\n}; };\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar InputBase$1 = function (_a) {\r\n    var error = _a.error, props = __rest(_a, [\"error\"]);\r\n    return createElement(\"input\", __assign({}, props, { onClick: forwardOnClick(props.onClick), onFocus: forwardOnFocus(props.onFocus), value: props.value || (props.type === 'number' ? ' ' : '') }));\r\n};\r\n/**\r\n * A simple styled Input\r\n *\r\n * https://chadlavi.github.io/clear/#/input#input\r\n */\r\nvar Input = styled(InputBase$1)(templateObject_1$9 || (templateObject_1$9 = __makeTemplateObject([\"\\n  background-color: var(--clear-background);\\n  color: var(--clear-\", \");\\n  border: 1px solid var(--clear-\", \");\\n  border-radius: var(--clear-unit);\\n  padding: calc(var(--clear-unit) * 1.5);\\n  font-size: var(--clear-font-size-default);\\n  margin: calc(var(--clear-unit) / 2) 0;\\n  width: 100%;\\n  min-width: 100%;\\n  max-width: 100%;\\n  -webkit-appearance: none;\\n  \", \"\\n  \", \"\\n  \", \"\\n\"], [\"\\n  background-color: var(--clear-background);\\n  color: var(--clear-\", \");\\n  border: 1px solid var(--clear-\", \");\\n  border-radius: var(--clear-unit);\\n  padding: calc(var(--clear-unit) * 1.5);\\n  font-size: var(--clear-font-size-default);\\n  margin: calc(var(--clear-unit) / 2) 0;\\n  width: 100%;\\n  min-width: 100%;\\n  max-width: 100%;\\n  -webkit-appearance: none;\\n  \", \"\\n  \", \"\\n  \", \"\\n\"])), function (p) { return p.error ? 'error' : 'textColor'; }, function (p) { return p.error ? 'error' : 'border'; }, focusStyle, function (p) { return p.error ? errorFocusStyle : ''; }, function (p) { return p.disabled ? 'cursor: not-allowed;' : ''; });\r\nvar templateObject_1$9;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar LabelBase$1 = function (_a) {\r\n    var disabled = _a.disabled, error = _a.error, required = _a.required, props = __rest(_a, [\"disabled\", \"error\", \"required\"]);\r\n    return (createElement(\"label\", __assign({}, props), required ? createElement(Fragment, null,\r\n        props.children,\r\n        ' (Required)') : props.children));\r\n};\r\n/**\r\n * A simple styled `<label>`\r\n *\r\n * https://chadlavi.github.io/clear/#/text#label\r\n */\r\nvar Label = styled(LabelBase$1)(templateObject_1$a || (templateObject_1$a = __makeTemplateObject([\"\\n  color: \", \";\\n  \", \";\\n  width: 100%;\\n  font-size: var(--clear-font-size-label);\\n\"], [\"\\n  color: \", \";\\n  \",\r\n    \";\\n  width: 100%;\\n  font-size: var(--clear-font-size-label);\\n\"])), function (p) { return p.error ? 'var(--clear-error)' : 'inherit'; }, function (p) { return p.disabled ? \"\\n    opacity: 0.5;\\n  \" : ''; });\r\nvar templateObject_1$a;\n\nvar Anchor = function (props) {\r\n    var _a;\r\n    var isExternal = Boolean((_a = props.href) === null || _a === void 0 ? void 0 : _a.match(/^http/));\r\n    return (createElement(\"a\", __assign({}, props, { target: isExternal ? '_blank' : props.target, rel: isExternal ? 'noopener noreferrer' : props.rel, title: props.title || \"Open \\\"\" + props.href + \"\\\"\" + (isExternal ? ' in a new Tab' : '') })));\r\n};\r\n/**\r\n * A simple styled `<a>`\r\n *\r\n * https://chadlavi.github.io/clear/#/link\r\n */\r\nvar Link = styled(Anchor)(templateObject_1$b || (templateObject_1$b = __makeTemplateObject([\"\\n  color: var(--clear-link);\\n  \", \"\\n  &[target='_blank']::after {\\n    content: ' [\\u2197]';\\n  }\\n\"], [\"\\n  color: var(--clear-link);\\n  \", \"\\n  &[target='_blank']::after {\\n    content: ' [\\\\u2197]';\\n  }\\n\"])), focusStyle);\r\nvar templateObject_1$b;\n\nvar NotificationBase = function (\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n_a) {\r\n    var buttonProps = _a.buttonProps, dismissible = _a.dismissible, error = _a.error, mini = _a.mini, success = _a.success, timeOut = _a.timeOut, transient = _a.transient, props = __rest(_a, \r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    [\"buttonProps\", \"dismissible\", \"error\", \"mini\", \"success\", \"timeOut\", \"transient\"]);\r\n    return (createElement(\"div\", __assign({}, props)));\r\n};\r\nvar NotificationWrapper = styled(NotificationBase)(templateObject_1$c || (templateObject_1$c = __makeTemplateObject([\"\\n  bottom: 0;\\n  display: flex;\\n  justify-content: center;\\n  left: 0;\\n  max-width: 100%;\\n  padding: calc(var(--clear-unit) * 2);\\n  pointer-events: none;\\n  position: fixed;\\n  width: 100%;\\n  z-index: 1500;\\n\"], [\"\\n  bottom: 0;\\n  display: flex;\\n  justify-content: center;\\n  left: 0;\\n  max-width: 100%;\\n  padding: calc(var(--clear-unit) * 2);\\n  pointer-events: none;\\n  position: fixed;\\n  width: 100%;\\n  z-index: 1500;\\n\"])));\r\nvar StyledNotification = styled(NotificationBase)(templateObject_2$1 || (templateObject_2$1 = __makeTemplateObject([\"\\n  align-items: center;\\n  background: var(--clear-\", \");\\n  border-radius: var(--clear-font-size-default);\\n  display: flex;\\n  font-size: var(--clear-font-size-default);\\n  font-style: normal;\\n  font-weight: normal;\\n  justify-content: space-between;\\n  max-width: \", \";\\n  padding: var(--clear-font-size-default);\\n  pointer-events: auto;\\n  width: \", \";\\n  @keyframes slideInFromBottom {\\n    0% {\\n      transform: translateY(100%);\\n    }\\n    100% {\\n      transform: translateY(0);\\n    }\\n  }\\n  animation: 0.1s ease-out 0s 1 slideInFromBottom;\\n\"], [\"\\n  align-items: center;\\n  background: var(--clear-\", \");\\n  border-radius: var(--clear-font-size-default);\\n  display: flex;\\n  font-size: var(--clear-font-size-default);\\n  font-style: normal;\\n  font-weight: normal;\\n  justify-content: space-between;\\n  max-width: \", \";\\n  padding: var(--clear-font-size-default);\\n  pointer-events: auto;\\n  width: \", \";\\n  @keyframes slideInFromBottom {\\n    0% {\\n      transform: translateY(100%);\\n    }\\n    100% {\\n      transform: translateY(0);\\n    }\\n  }\\n  animation: 0.1s ease-out 0s 1 slideInFromBottom;\\n\"])), function (p) { return p.error ? 'error' : p.success ? 'green' : 'link'; }, function (p) { return p.mini ? 'calc(var(--clear-unit) * 24)' : '100%'; }, function (p) { return p.mini ? 'unset' : 'calc(var(--clear-unit) * 64)'; });\r\nvar NotificationContent = styled(NotificationBase)(templateObject_3$1 || (templateObject_3$1 = __makeTemplateObject([\"\\n  color: var(--clear-background);\\n  flex-grow: 1;\\n  text-align: \", \";\\n  \", \"\\n\"], [\"\\n  color: var(--clear-background);\\n  flex-grow: 1;\\n  text-align: \", \";\\n  \", \"\\n\"])), function (p) { return p.mini ? 'center' : 'left'; }, function (p) { return (p.mini || p.dismissible === false) ? '' : 'margin-right: calc(var(--clear-unit) * 2);'; });\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar DismissButtonBase = function (_a) {\r\n    var error = _a.error, success = _a.success, props = __rest(_a, [\"error\", \"success\"]);\r\n    return createElement(Button, __assign({}, props));\r\n};\r\nvar DismissButton = styled(DismissButtonBase)(templateObject_4$1 || (templateObject_4$1 = __makeTemplateObject([\"\\n  background: none;\\n  border: 1px solid var(--clear-background);\\n  color: var(--clear-background);\\n  :focus {\\n    box-shadow: 0 0 0 calc(var(--clear-unit) / 4) var(--clear-\", \"),\\n    0 0 0 calc(var(--clear-unit) / 2) var(--clear-background);\\n  }\\n\"], [\"\\n  background: none;\\n  border: 1px solid var(--clear-background);\\n  color: var(--clear-background);\\n  :focus {\\n    box-shadow: 0 0 0 calc(var(--clear-unit) / 4) var(--clear-\",\r\n    \"),\\n    0 0 0 calc(var(--clear-unit) / 2) var(--clear-background);\\n  }\\n\"\r\n    /**\r\n     * Use a `<Notification>` to show users a short, timely message that might\r\n     * automatically disappear and that the user may be able to manually dismiss (or both).\r\n     *\r\n     * https://chadlavi.github.io/clear/#/notification\r\n     */\r\n])), function (p) { return p.error ? 'error' : p.success ? 'green' : 'link'; });\r\n/**\r\n * Use a `<Notification>` to show users a short, timely message that might\r\n * automatically disappear and that the user may be able to manually dismiss (or both).\r\n *\r\n * https://chadlavi.github.io/clear/#/notification\r\n */\r\nvar Notification = function (props) {\r\n    var _a, _b;\r\n    var buttonProps = props.buttonProps, children = props.children, dismissible = props.dismissible, error = props.error, mini = props.mini, open = props.open, setOpen = props.setOpen, success = props.success, timeOut = props.timeOut, transient = props.transient, other = __rest(props, [\"buttonProps\", \"children\", \"dismissible\", \"error\", \"mini\", \"open\", \"setOpen\", \"success\", \"timeOut\", \"transient\"]);\r\n    var onClose = function () { return setOpen(false); };\r\n    var transientOnClose = function () {\r\n        setTimeout(function () {\r\n            setOpen(false);\r\n        }, timeOut !== null && timeOut !== void 0 ? timeOut : 2000);\r\n    };\r\n    return (createElement(Fragment, null, open ?\r\n        createElement(NotificationWrapper, null,\r\n            createElement(StyledNotification, __assign({ className: 'notification', error: error, mini: mini, success: success }, other),\r\n                createElement(NotificationContent, { dismissible: dismissible, mini: mini, className: 'notification-content' }, children),\r\n                (transient && !mini) && transientOnClose(),\r\n                (mini || dismissible === false)\r\n                    ? transientOnClose()\r\n                    : createElement(DismissButton, __assign({}, buttonProps, { className: 'notification-dismiss-button', error: error, onClick: (_a = buttonProps === null || buttonProps === void 0 ? void 0 : buttonProps.onClick) !== null && _a !== void 0 ? _a : onClose, success: success }), (_b = buttonProps === null || buttonProps === void 0 ? void 0 : buttonProps.children) !== null && _b !== void 0 ? _b : 'Okay')))\r\n        : undefined));\r\n};\r\nvar templateObject_1$c, templateObject_2$1, templateObject_3$1, templateObject_4$1;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar PageBase = function (_a) {\r\n    var size = _a.size, props = __rest(_a, [\"size\"]);\r\n    return (createElement(\"main\", __assign({}, props)));\r\n};\r\n/**\r\n * A simple styled `<main>`\r\n *\r\n * https://chadlavi.github.io/clear/#/layout#page\r\n */\r\nvar Page = styled(PageBase)(templateObject_1$d || (templateObject_1$d = __makeTemplateObject([\"\\nmargin: 0 auto;\\nmargin-bottom: calc(var(--clear-unit) * 15);\\npadding: var(--clear-unit);\\nwidth: \", \"px;\\nbackground-color: var(--clear-background);\\ncolor: var(--clear-textColor);\\nfont-family: var(--clear-font-family);\\nfont-size: var(--clear-font-size-default);\\n-webkit-font-smoothing: antialiased;\\n-moz-osx-font-smoothing: grayscale;\\nmax-width: 100%;\\n&, & * {\\n  box-sizing: border-box;\\n}\\n\"], [\"\\nmargin: 0 auto;\\nmargin-bottom: calc(var(--clear-unit) * 15);\\npadding: var(--clear-unit);\\nwidth: \", \"px;\\nbackground-color: var(--clear-background);\\ncolor: var(--clear-textColor);\\nfont-family: var(--clear-font-family);\\nfont-size: var(--clear-font-size-default);\\n-webkit-font-smoothing: antialiased;\\n-moz-osx-font-smoothing: grayscale;\\nmax-width: 100%;\\n&, & * {\\n  box-sizing: border-box;\\n}\\n\"])), function (p) { var _a; return numbers.width[(_a = p.size) !== null && _a !== void 0 ? _a : 'main']; });\r\nvar templateObject_1$d;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar ParagraphBase = function (_a) {\r\n    var margins = _a.margins, props = __rest(_a, [\"margins\"]);\r\n    return createElement(\"p\", __assign({}, props));\r\n};\r\n/**\r\n * A simple styled `<p>`\r\n *\r\n * https://chadlavi.github.io/clear/#/text#paragraph\r\n */\r\nvar Paragraph = styled(ParagraphBase)(templateObject_1$e || (templateObject_1$e = __makeTemplateObject([\"\\n  line-height: 1.5;\\n  \", \"\\n\"], [\"\\n  line-height: 1.5;\\n  \",\r\n    \"\\n\"])), function (p) { return p.margins === false ? \"\\n    margin-block-start: 0;\\n    margin-block-end: 0;\\n  \" : \"\\n    margin-block-start: 1em;\\n    margin-block-end: 1em;\\n  \"; });\r\nvar templateObject_1$e;\n\nvar Wrapper$1 = styled.div(templateObject_1$f || (templateObject_1$f = __makeTemplateObject([\"\\n  align-items: center;\\n  display: flex;\\n  margin: var(--clear-unit);\\n\"], [\"\\n  align-items: center;\\n  display: flex;\\n  margin: var(--clear-unit);\\n\"])));\r\nvar InputWrapper$1 = styled.div(templateObject_2$2 || (templateObject_2$2 = __makeTemplateObject([\"\\n  display: block;\\n  height: var(--clear-font-size-label);\\n  width: var(--clear-font-size-label);\\n  position: relative;\\n\"], [\"\\n  display: block;\\n  height: var(--clear-font-size-label);\\n  width: var(--clear-font-size-label);\\n  position: relative;\\n\"\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n])));\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar InputBase$2 = function (_a) {\r\n    var error = _a.error, label = _a.label, props = __rest(_a, [\"error\", \"label\"]);\r\n    return (createElement(\"input\", __assign({}, props, { type: 'radio' })));\r\n};\r\nvar StyledInput$1 = styled(InputBase$2)(templateObject_3$2 || (templateObject_3$2 = __makeTemplateObject([\"\\n  -webkit-appearance: none;\\n  background: var(--clear-\", \");\\n  border-radius: var(--clear-font-size-label);\\n  border: 1px solid var(--clear-\", \");\\n  display: block;\\n  height: var(--clear-font-size-label);\\n  margin: 0;\\n  width: var(--clear-font-size-label);\\n  opacity: \", \";\\n  cursor: \", \";\\n  \", \"\\n  \", \"\\n\"], [\"\\n  -webkit-appearance: none;\\n  background: var(--clear-\", \");\\n  border-radius: var(--clear-font-size-label);\\n  border: 1px solid var(--clear-\", \");\\n  display: block;\\n  height: var(--clear-font-size-label);\\n  margin: 0;\\n  width: var(--clear-font-size-label);\\n  opacity: \", \";\\n  cursor: \", \";\\n  \", \"\\n  \", \"\\n\"])), function (p) { return p.checked ? (p.error ? 'error' : 'link') : 'background'; }, function (p) { return p.error ? 'error' : (p.checked ? 'link' : 'textColor'); }, function (p) { return p.disabled ? '0.5' : '1'; }, function (p) { return p.disabled ? 'not-allowed' : 'pointer'; }, focusStyle, function (p) { return p.error ? errorFocusStyle : ''; });\r\nvar SVGContainer = styled.div(templateObject_4$2 || (templateObject_4$2 = __makeTemplateObject([\"\\n  pointer-events: none;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: calc(var(--clear-font-size-label) * 10);\\n  height: calc(var(--clear-font-size-label) * 10);\\n  transform-origin: top left;\\n  padding: 20px;\\n  transform: scale(0.1);\\n  svg {\\n    width: 100%;\\n    height: 100%;\\n  }\\n\"], [\"\\n  pointer-events: none;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: calc(var(--clear-font-size-label) * 10);\\n  height: calc(var(--clear-font-size-label) * 10);\\n  transform-origin: top left;\\n  padding: 20px;\\n  transform: scale(0.1);\\n  svg {\\n    width: 100%;\\n    height: 100%;\\n  }\\n\"\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n])));\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar SVGBase$1 = function (_a) {\r\n    var checked = _a.checked, props = __rest(_a, [\"checked\"]);\r\n    return (createElement(SVGContainer, null,\r\n        createElement(\"div\", null,\r\n            createElement(\"svg\", __assign({ viewBox: '0 0 100 100' }, props),\r\n                createElement(\"circle\", { cx: '50', cy: '50', r: '40', stroke: 'var(--clear-background)', fill: 'none', strokeWidth: '20' })))));\r\n};\r\nvar Icon$1 = styled(SVGBase$1)(templateObject_5$1 || (templateObject_5$1 = __makeTemplateObject([\"\\n  display: \", \"\\n\"], [\"\\n  display: \", \"\\n\"])), function (p) { return p.checked ? 'block' : 'none'; });\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar LabelBase$2 = function (_a) {\r\n    var disabled = _a.disabled, error = _a.error, props = __rest(_a, [\"disabled\", \"error\"]);\r\n    return (createElement(\"label\", __assign({}, props)));\r\n};\r\nvar StyledLabel$1 = styled(LabelBase$2)(templateObject_6 || (templateObject_6 = __makeTemplateObject([\"\\n  \", \";\\n  opacity: \", \";\\n  cursor: \", \";\\n  margin-left: var(--clear-unit);\\n\"], [\"\\n  \", \";\\n  opacity: \", \";\\n  cursor: \", \";\\n  margin-left: var(--clear-unit);\\n\"\r\n    /**\r\n     * A wrapper around HTML `<input type='radio'>`.\r\n     *\r\n     * https://chadlavi.github.io/clear/#/input#radio\r\n     */\r\n])), function (p) { return p.error ? 'color: var(--clear-error)' : ''; }, function (p) { return p.disabled ? '0.5' : '1'; }, function (p) { return p.disabled ? 'not-allowed' : 'pointer'; });\r\n/**\r\n * A wrapper around HTML `<input type='radio'>`.\r\n *\r\n * https://chadlavi.github.io/clear/#/input#radio\r\n */\r\nvar Radio = function (props) {\r\n    var error = props.error, label = props.label, other = __rest(props, [\"error\", \"label\"]);\r\n    return (createElement(Wrapper$1, { role: 'radio' },\r\n        createElement(InputWrapper$1, { role: 'radio' },\r\n            createElement(StyledInput$1, __assign({ error: error, tabIndex: 0 }, other)),\r\n            createElement(Icon$1, { checked: other.checked })),\r\n        label &&\r\n            createElement(StyledLabel$1, { disabled: other.disabled, error: error, htmlFor: other.id }, label)));\r\n};\r\nvar templateObject_1$f, templateObject_2$2, templateObject_3$2, templateObject_4$2, templateObject_5$1, templateObject_6;\n\nvar ContainerBase = function (_a) {\r\n    var  \r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    contentMinHeight = _a.contentMinHeight, contentMinWidth = _a.contentMinWidth, _b = _a.direction, maxHeight = _a.maxHeight, maxWidth = _a.maxWidth, props = __rest(_a, [\"contentMinHeight\", \"contentMinWidth\", \"direction\", \"maxHeight\", \"maxWidth\"]);\r\n    return createElement(\"div\", __assign({}, props));\r\n};\r\nvar Container$2 = styled(ContainerBase)(templateObject_1$g || (templateObject_1$g = __makeTemplateObject([\"\\n  width: 100%;\\n  \", \"\\n  \", \"\\n\\n  \", \"\\n\"], [\"\\n  width: 100%;\\n  \",\r\n    \"\\n  \",\r\n    \"\\n\\n  \",\r\n    \"\\n\"])), function (p) {\r\n    var direction = p.direction;\r\n    if (direction === 'horizontal') {\r\n        return 'overflow-x: auto; max-width: 100%;';\r\n    }\r\n    else {\r\n        return 'overflow-y: auto; max-height: 100%;';\r\n    }\r\n}, function (p) {\r\n    var maxHeight = p.maxHeight;\r\n    if (typeof maxHeight === 'number') {\r\n        return \"max-height: \" + maxHeight + \"px;\";\r\n    }\r\n    else if (maxHeight) {\r\n        return \"max-height: \" + maxHeight + \";\";\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}, function (p) {\r\n    var maxWidth = p.maxWidth;\r\n    if (typeof maxWidth === 'number') {\r\n        return \"max-width: \" + maxWidth + \"px;\";\r\n    }\r\n    else if (maxWidth) {\r\n        return \"max-width: \" + maxWidth + \";\";\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n});\r\nvar ContentBase = function (_a) {\r\n    var  \r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    contentMinHeight = _a.contentMinHeight, contentMinWidth = _a.contentMinWidth, _b = _a.direction, maxHeight = _a.maxHeight, maxWidth = _a.maxWidth, props = __rest(_a, [\"contentMinHeight\", \"contentMinWidth\", \"direction\", \"maxHeight\", \"maxWidth\"]);\r\n    return createElement(\"div\", __assign({}, props));\r\n};\r\nvar Content = styled(ContentBase)(templateObject_2$3 || (templateObject_2$3 = __makeTemplateObject([\"\\n  \", \"\\n  \", \"\\n\"], [\"\\n  \",\r\n    \"\\n  \",\r\n    \"\\n\"\r\n    /**\r\n     * You can use a ScrollContainer to create a verticall or horizontally scrollable div with content of a fixed minimum\r\n     * height/width. Scroll containers are very convenient ways to prevent <Table>s from becoming unmanageable on\r\n     * responsive devices.\r\n     *\r\n     * https://chadlavi.github.io/clear/#/layout#scrollcontainer\r\n     */\r\n])), function (p) {\r\n    var contentMinHeight = p.contentMinHeight;\r\n    if (typeof contentMinHeight === 'number') {\r\n        return \"min-height: \" + contentMinHeight + \"px;\";\r\n    }\r\n    else if (contentMinHeight) {\r\n        return \"min-height: \" + contentMinHeight + \";\";\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}, function (p) {\r\n    var contentMinWidth = p.contentMinWidth;\r\n    if (typeof contentMinWidth === 'number') {\r\n        return \"min-width: \" + contentMinWidth + \"px;\";\r\n    }\r\n    else if (contentMinWidth) {\r\n        return \"min-width: \" + contentMinWidth + \";\";\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n});\r\n/**\r\n * You can use a ScrollContainer to create a verticall or horizontally scrollable div with content of a fixed minimum\r\n * height/width. Scroll containers are very convenient ways to prevent <Table>s from becoming unmanageable on\r\n * responsive devices.\r\n *\r\n * https://chadlavi.github.io/clear/#/layout#scrollcontainer\r\n */\r\nvar ScrollContainer = function (props) {\r\n    return createElement(Container$2, { direction: props.direction, maxHeight: props.maxHeight, maxWidth: props.maxWidth },\r\n        createElement(Content, __assign({ contentMinHeight: props.contentMinHeight, contentMinWidth: props.contentMinWidth }, props)));\r\n};\r\nvar templateObject_1$g, templateObject_2$3;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nvar SelectBase = function (_a) {\r\n    var error = _a.error, props = __rest(_a, [\"error\"]);\r\n    return createElement(\"select\", __assign({}, props));\r\n};\r\nvar StyledSelect = styled(SelectBase)(templateObject_1$h || (templateObject_1$h = __makeTemplateObject([\"\\n  background-color: var(--clear-background);\\n  color: var(--clear-\", \");\\n  border: 1px solid var(--clear-\", \");\\n  border-radius: var(--clear-unit);\\n  padding: calc(var(--clear-unit) * 1.5);\\n  font-size: inherit;\\n  margin: calc(var(--clear-unit) / 2) 0;\\n  width: 100%;\\n  -webkit-appearance: none;\\n  \", \"\\n  \", \"\\n  cursor: \", \";\\n  opacity: \", \";\\n\"], [\"\\n  background-color: var(--clear-background);\\n  color: var(--clear-\", \");\\n  border: 1px solid var(--clear-\", \");\\n  border-radius: var(--clear-unit);\\n  padding: calc(var(--clear-unit) * 1.5);\\n  font-size: inherit;\\n  margin: calc(var(--clear-unit) / 2) 0;\\n  width: 100%;\\n  -webkit-appearance: none;\\n  \", \"\\n  \", \"\\n  cursor: \", \";\\n  opacity: \", \";\\n\"])), function (p) { return p.error ? 'error' : 'textColor'; }, function (p) { return p.error ? 'error' : 'border'; }, focusStyle, function (p) { return p.error ? errorFocusStyle : ''; }, function (p) { return p.disabled ? 'not-allowed' : 'pointer'; }, function (p) { return p.disabled ? '0.5' : '1'; });\r\nvar SelectOptions = function (_a) {\r\n    var options = _a.options;\r\n    return (createElement(Fragment, null, options.map(function (o) { return (createElement(\"option\", { key: o.label + \":\" + o.value, value: o.value }, o.label)); })));\r\n};\r\n/**\r\n * A simple styled HTML `<select>`\r\n *\r\n * https://chadlavi.github.io/clear/#/input#select\r\n */\r\nvar Select = function (props) {\r\n    var multiple = props.multiple, options = props.options, other = __rest(props, [\"multiple\", \"options\"]);\r\n    return (createElement(StyledSelect, __assign({}, other, { defaultValue: multiple ? undefined : '', multiple: multiple }),\r\n        multiple ? '' : createElement(\"option\", { hidden: true, disabled: true, value: '' }),\r\n        createElement(SelectOptions, { options: options })));\r\n};\r\n/**\r\n * handles update logic to update the value of a `<Select>` with `multiple={true}`\r\n *\r\n * Requires one argument, the function to set the `<select>` value. Defaults to\r\n * expecting a React `useState` hook, but you can optionally specify a type for the\r\n * setter function.\r\n */\r\nvar handleMutliSelectOnChange = function (setter) { return function (e) {\r\n    var updatedOptions = Array.from(e.target.options)\r\n        .filter(function (option) { return option.selected; })\r\n        .map(function (x) { return x.value; });\r\n    setter(updatedOptions);\r\n}; };\r\nvar templateObject_1$h;\n\nvar jumpTo = function (id) { return function () {\r\n    var el = document.getElementById(id);\r\n    if (el) {\r\n        el.scrollIntoView();\r\n        el.focus();\r\n    }\r\n}; };\r\nvar SkipLinkButton = styled(Button)(templateObject_1$i || (templateObject_1$i = __makeTemplateObject([\"\\n  position: absolute;\\n  top: var(--clear-unit);\\n  left: var(--clear-unit);\\n  opacity: 0;\\n  pointer-events: none;\\n  user-select: none;\\n  :focus {\\n    opacity: 1;\\n    pointer-events: unset;\\n    user-select: unset;\\n  }\\n  \\n\"], [\"\\n  position: absolute;\\n  top: var(--clear-unit);\\n  left: var(--clear-unit);\\n  opacity: 0;\\n  pointer-events: none;\\n  user-select: none;\\n  :focus {\\n    opacity: 1;\\n    pointer-events: unset;\\n    user-select: unset;\\n  }\\n  \\n\"])));\r\nvar SkipLink = function (_a) {\r\n    var id = _a.id;\r\n    return (createElement(SkipLinkButton, { onClick: jumpTo(id), primary: true }, \"Skip to main content\"));\r\n};\r\nvar templateObject_1$i;\n\n/**\r\n * A simple styled `<table>`\r\n *\r\n * https://chadlavi.github.io/clear/#/table#table\r\n */\r\nvar Table = styled('table')(templateObject_1$j || (templateObject_1$j = __makeTemplateObject([\"\\n  border-collapse: collapse;\\n  flex-basis: 100%;\\n  width: 100%;\\n  margin-bottom: var(--clear-font-size-default);\\n\"], [\"\\n  border-collapse: collapse;\\n  flex-basis: 100%;\\n  width: 100%;\\n  margin-bottom: var(--clear-font-size-default);\\n\"])));\r\nvar templateObject_1$j;\n\n/**\r\n * A simple styled `<td>`\r\n *\r\n * Can also be used to create a `<th>`:\r\n *\r\n * ```tsx\r\n * <TableCell as='th'>\r\n *  This will be rendered as a `<th>`\r\n * </TableCell>\r\n * ```\r\n *\r\n * https://chadlavi.github.io/clear/#/table#tablecell\r\n */\r\nvar TableCell = styled('td')(templateObject_1$k || (templateObject_1$k = __makeTemplateObject([\"\\n  text-align: left;\\n  padding: var(--clear-unit);\\n\"], [\"\\n  text-align: left;\\n  padding: var(--clear-unit);\\n\"])));\r\nvar templateObject_1$k;\n\n/**\r\n * A simple styled `<thead>`\r\n *\r\n * https://chadlavi.github.io/clear/#/table#tablehead\r\n */\r\nvar TableHead = styled('thead')(templateObject_1$l || (templateObject_1$l = __makeTemplateObject([\"\\n  \", \" {\\n    font-size: var(--clear-font-size-label);\\n    text-align: left;\\n    padding: var(--clear-unit);\\n    padding-bottom: calc(var(--clear-unit) / 2);\\n  }\\n\"], [\"\\n  \", \" {\\n    font-size: var(--clear-font-size-label);\\n    text-align: left;\\n    padding: var(--clear-unit);\\n    padding-bottom: calc(var(--clear-unit) / 2);\\n  }\\n\"])), TableCell);\r\nvar templateObject_1$l;\n\n/**\r\n * A simple styled `<tbody>`\r\n *\r\n * https://chadlavi.github.io/clear/#/table#tablebody\r\n */\r\nvar TableBody = styled('tbody')(templateObject_1$m || (templateObject_1$m = __makeTemplateObject([\"\"], [\"\"])));\r\nvar templateObject_1$m;\n\n/**\r\n * A simple styled `<tr>`\r\n *\r\n * https://chadlavi.github.io/clear/#/table#tablerow\r\n */\r\nvar TableRow = styled('tr')(templateObject_1$n || (templateObject_1$n = __makeTemplateObject([\"\\n  &:nth-child(even) {\\n    \", \" {\\n      background-color: var(--clear-zebra);\\n    }\\n    \", \":first-child {\\n      border-radius: var(--clear-unit) 0 0 var(--clear-unit);\\n    }\\n    \", \":last-child {\\n      border-radius: 0 var(--clear-unit) var(--clear-unit) 0;\\n    }\\n  }\\n\"], [\"\\n  &:nth-child(even) {\\n    \", \" {\\n      background-color: var(--clear-zebra);\\n    }\\n    \", \":first-child {\\n      border-radius: var(--clear-unit) 0 0 var(--clear-unit);\\n    }\\n    \", \":last-child {\\n      border-radius: 0 var(--clear-unit) var(--clear-unit) 0;\\n    }\\n  }\\n\"])), TableCell, TableCell, TableCell);\r\nvar templateObject_1$n;\n\n/**\r\n * Generates a table using Clear's `<Table>`, `<TableHead>`, `<TableBody>`, `<TableRow>`, and `<TableCell>` components\r\n * based on the `data` array and `headers` array passed to it.\r\n *\r\n * https://chadlavi.github.io/clear/#/table#generatetable\r\n */\r\nvar GenerateTable = function (_a) {\r\n    var data = _a.data, headers = _a.headers;\r\n    return (createElement(Table, null,\r\n        createElement(TableHead, null,\r\n            createElement(TableRow, null, headers.map(function (h, i) { return (createElement(TableCell, { key: h + \"-\" + i, as: 'th' }, typeof h === 'string' ? \"\" + h.charAt(0).toUpperCase() + h.slice(1) : h.label || h.key)); }))),\r\n        createElement(TableBody, null, data.map(function (r) { return (createElement(TableRow, { key: JSON.stringify(r) }, headers.map(function (c, i) { return (createElement(TableCell, { key: c + \"-\" + i }, r[typeof c === 'string' ? c : c.key])); }))); }))));\r\n};\n\nexport { Button, CSSVariables, Checkbox, Code, CodeBlock, GenerateTable, GlobalStyles, Grid, GridItem, Header, Input, Label, Link, Notification, Page, Paragraph, Radio, ScrollContainer, Select, SkipLink, Table, TableBody, TableCell, TableHead, TableRow, colors, errorFocusStyle, focusStyle, handleMutliSelectOnChange, numbers, useBreakpoint, useDarkMode, useMediaQuery, useResponsiveColor };\n","import * as React from 'react'\nimport {HashLink} from 'react-router-hash-link'\nimport {setTitle} from '../utils'\nimport {\n  Button,\n  Code,\n  Header,\n  Link,\n  Notification,\n  Paragraph,\n} from '../component-lib'\n\nconst onClick = (copy: string) =>  (e: React.MouseEvent<HTMLButtonElement>): void => {\n  e.preventDefault()\n  alert(copy)\n}\n\nexport const ButtonPage: React.FC = () => {\n  const [standard, setStandard] = React.useState<boolean>(false)\n  const [primary, setPrimary] = React.useState<boolean>(false)\n  return (\n    <>\n      {setTitle('Button')}\n      <Header><Code>{'<Button>'}</Code></Header>\n      <Paragraph>\n      The <Code>Button</Code> component is a simple styled wrapper around an HTML <Code>{'<button>'}</Code>.\n      </Paragraph>\n      <Header as='h2' id='props'>Props: <Code>ButtonProps</Code></Header>\n      <Paragraph>\n      Besides the standard props an HTML <Code>{'<button>'}</Code> accepts, <Code>Button</Code> also accepts the\n      prop <Code>primary?: boolean</Code> to mark a button as a primary call to action button.\n      </Paragraph>\n      <Header as='h2' id='customization'>Customization</Header>\n      <Paragraph>\n      See <Link as={HashLink} to={'/start#customization'}>Customization</Link> discussion on the Getting started page.\n      </Paragraph>\n      <Header as='h2' id='examples'>\n        <Link href={'https://github.com/chadlavi/clear/blob/master/playground/src/Pages/ButtonPage.tsx#L31'}>\n        Examples\n        </Link>\n      </Header>\n      <Header as='h3' id='standard-button'>Standard button</Header>\n      <Paragraph as='div'>\n        <Button\n          onClick={(): void => setStandard(true)}\n        >\n          This is a standard button\n        </Button>\n        <Notification\n          open={standard}\n          setOpen={setStandard}\n          transient\n        >\n          You clicked the standard button\n        </Notification>\n      </Paragraph>\n      <Header as='h3' id='primary-button'>Primary button</Header>\n      <Paragraph as='div'>\n        <Button\n          primary\n          onClick={(): void => setPrimary(true)}\n        >\n          This is a primary button\n        </Button>\n        <Notification\n          open={primary}\n          setOpen={setPrimary}\n          transient\n        >\n          You clicked the primary button\n        </Notification>\n      </Paragraph>\n      <Header as='h3' id='disabled-button'>Disabled button</Header>\n      <Paragraph>\n        <Button\n          disabled\n          onClick={onClick('You\\'ll never see this alert because this button is disabled')}\n        >\n        This is a disabled standard button\n        </Button>\n      </Paragraph>\n      <Paragraph>\n        <Button\n          disabled\n          primary\n          onClick={onClick('You\\'ll never see this alert because this button is disabled')}\n        >\n        This is a disabled primary button\n        </Button>\n      </Paragraph>\n    </>\n  )\n}\n","import * as React from 'react'\nimport {HashLink} from 'react-router-hash-link'\nimport {setTitle} from '../utils'\nimport styled from 'styled-components'\nimport {\n  Button,\n  ButtonProps,\n  Code,\n  CodeBlock,\n  Header,\n  Link,\n  Paragraph,\n  colors,\n  errorFocusStyle,\n  numbers,\n  useDarkMode,\n  useResponsiveColor,\n} from '../component-lib'\n\nconst ErrorButton = styled(Button)`\nbackground: var(--clear-error);\ncolor: var(--clear-background);\n`\nconst BigErrorButton = styled(Button)`\nbackground: ${colors.light.error};\ncolor: ${colors.light.background};\nfont-size: ${numbers.fontSize.default * 2}px;\nborder-radius: ${numbers.unit * 2}px;\npadding: ${numbers.unit * 4}px ${numbers.unit * 8}px;\n`\n\ninterface ExtendedButtonProps extends ButtonProps {\n  background: string\n  color: string\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst ExtendedButton = ({background, color, ...props}: ExtendedButtonProps): JSX.Element => <Button {...props} />\n\nconst ResponsiveBigErrorButton = styled(ExtendedButton)`\n  background: ${(p): string => p.background};\n  color: ${(p): string => p.color};\n  font-size: ${numbers.fontSize.default * 2}px;\n  border-radius: ${numbers.unit * 2}px;\n  padding: ${numbers.unit * 4}px ${numbers.unit * 8}px;\n`\n\nconst FocusableResponsiveBigErrorButton = styled(ExtendedButton)`\n  background: ${(p): string => p.background};\n  color: ${(p): string => p.color};\n  font-size: ${numbers.fontSize.default * 2}px;\n  border-radius: ${numbers.unit * 2}px;\n  padding: ${numbers.unit * 4}px ${numbers.unit * 8}px;\n  ${errorFocusStyle}\n`\n\nexport const GettingStartedPage: React.FC = () =>\n  <>\n    {setTitle('Getting started')}\n    <Header>Getting started</Header>\n    <Header as ='h2'>Contents</Header>\n    <Paragraph as={'nav'}>\n      <Link as={HashLink} to={'#npmrc'}>Editing your <Code>.npmrc</Code></Link><br />\n      <Link as={HashLink} to={'#installing'}>Installing</Link><br />\n      <Link as={HashLink} to={'#usage'}>Usage</Link><br />\n      <Link as={HashLink} to={'#globals'}>Globals</Link><br />\n      <Link as={HashLink} to={'#structure'}>Structure</Link><br />\n      <Link as={HashLink} to={'#customization'}>Customization</Link><br />\n    </Paragraph>\n    <Header as='h2' id='npmrc'>Editing your <Code>.npmrc</Code></Header>\n    <Paragraph>\n      Clear is hosted on GitHub package registry. To install it, add the following to your project's <Code>.npmrc\n      </Code>:\n    </Paragraph>\n    <CodeBlock>registry=https://npm.pkg.github.com/chadlavi</CodeBlock>\n    <Header as='h2' id='installing'>Installing</Header>\n    <Paragraph>\n      After editing your <Code>.npmrc</Code>, run the following to install Clear and its required peer\n      dependency, <Code>styled-components</Code>.\n    </Paragraph>\n    <CodeBlock>{`npm i @chadlavi/clear styled-components\n\n# only necessary if you use TypeScript\nnpm i -D @types/styled-components`}</CodeBlock>\n    <Paragraph>\n      (Note: we assume here that you have already installed <Code>react</Code>. If not, install that too! Clear only\n      works in React applications.)\n    </Paragraph>\n    <Header as='h2' id='usage'>Usage</Header>\n    <Header as='h3' id='globals'>Globals</Header>\n    <Paragraph>\n      When using Clear, you need to include a single instance\n      of <Link as={HashLink} to={'/global-styles#cssvariables'}><Code>{'<CSSVariables />'}</Code></Link> at the top\n      level of your application. You should also include an instance\n      of <Link as={HashLink} to={'/global-styles#globalstyles'}><Code>{'<GlobalStyles />'}</Code></Link>. Something\n      like:\n    </Paragraph>\n    <CodeBlock>{`// inside your index.js file\n\nimport * as React from 'react'\nimport {MyApp} from './MyApp'\nimport ReactDOM from 'react-dom'\nimport {\n  CSSVariables,\n  GlobalStyles,\n} from '@chadlavi/clear'\n\nReactDOM.render(\n  <React.StrictMode>\n    <CSSVariables/>\n    <GlobalStyles />\n    <MyApp />\n  </React.StrictMode>,\ndocument.getElementById('root')\n)`}</CodeBlock>\n    <Header as='h3' id='structure'>Structure</Header>\n    <Paragraph>\n      You should wrap content in your app with a <Link as={HashLink} to ={'/layout#page'}><Code>{'<Page>'}</Code>\n      </Link>.\n    </Paragraph>\n    <Paragraph>\n      Use the <Link as={HashLink} to ={'/layout#grid'}><Code>{'<Grid>'}</Code> and <Code>{'<GridItem>'}</Code>\n      </Link> components to organize content on a 12-column grid.\n    </Paragraph>\n    <Header as='h3'>Import statements</Header>\n    <Paragraph>\n      All components in Clear are exported at the top level in the library, so you can write import statements like\n    </Paragraph>\n    <CodeBlock>{`import {\n  CSSVariables,\n  GlobalStyles,\n  Header,\n  Link,\n  Page,\n} from '@chadlavi/clear'`}\n    </CodeBlock>\n    <Header as='h3' id='customization'>Customization</Header>\n    <Paragraph>\n      Since <Link as={HashLink} to={'/global-styles#cssvariables'}><Code>{'<CSSVariables />'}</Code></Link> creates\n      global CSS variables, you can access them in your app's styles.\n    </Paragraph>\n    <Paragraph>\n      Let's say you want to create an error button. You can access the Clear CSS variable <Code>var(--clear-error)\n      </Code> like this:\n    </Paragraph>\n    <CodeBlock>{`// ErrorButton.tsx\n\nimport * as React from 'react'\nimport styled from 'styled-components'\nimport {Button} from '@chadlavi/clear'\n\nexport const ErrorButton = styled(Button)\\`\n  background: var(--clear-error);\n  color: var(--clear-background);\n\\``}</CodeBlock>\n    <CodeBlock>{`// somewhere in your app\n\n<ErrorButton\n  onClick={(): void => alert('You clicked the error button')}\n>\n  Error button\n</ErrorButton>`}</CodeBlock>\n    <Paragraph>\n      <ErrorButton\n        onClick={(): void => alert('You clicked the error button')}\n      >\n        Error button\n      </ErrorButton>\n    </Paragraph>\n    <Paragraph>\n      Note that CSS variables from Clear automatically change to accommodate dark mode; the variable <Code>\n      var(--clear-error)</Code> will yield <Code>{colors.light.error}</Code> in light mode\n      and <Code>{colors.dark.error}</Code> in dark mode. Your browser is currently\n      in {useDarkMode() ? 'dark' : 'light'} mode, so the button above should have background\n      color <Code>{useResponsiveColor('error')}</Code>.\n    </Paragraph>\n    <Header as='h4'>Accessing theme values in code</Header>\n    <Paragraph>\n      If you use JSS or just need access to a theme value in your code, you can also access color and number values\n      from Clear directly in your code with the exported <Code>colors</Code> and <Code>numbers</Code> objects:\n    </Paragraph>\n    <CodeBlock>{`// BigErrorButton.tsx\n\nimport * as React from 'react'\nimport styled from 'styled-components'\nimport {\n  Button,\n  colors,\n  numbers,\n} from '@chadlavi/clear'\n\nexport const BigErrorButton = styled(Button)\\`\n  background: \\${colors.light.error};\n  border-radius: \\${numbers.unit * 2}px;\n  color: \\${colors.light.background};\n  font-size: \\${numbers.fontSize.default * 2}px;\n  padding: \\${numbers.unit * 4}px \\${numbers.unit * 8}px;\n\\``}</CodeBlock>\n    <CodeBlock>{`// somewhere in your app\n\n<BigErrorButton\n  onClick={(): void => alert('You clicked the big error button')}\n>\n  Big error button (BEB)\n</BigErrorButton>`}</CodeBlock>\n    <Paragraph>\n      <BigErrorButton\n        onClick={(): void => alert('You clicked the big error button')}\n      >\n        Big error button (BEB)\n      </BigErrorButton>\n    </Paragraph>\n    <Paragraph>\n      Note that in this case, the colors used will <i>not</i> respond to system dark/light mode changes. If you toggle\n      your device back and forth between light and dark mode, you'll see that the big error button example above does\n      not change.\n    </Paragraph>\n    <Paragraph>\n      You can solve this by using the React hook <Code>useResponsiveColor: (name: Color) => string</Code> inside a React\n      functional component to select a color value.\n    </Paragraph>\n    <CodeBlock>{`// ResponsiveBigErrorButton.tsx\n\nimport * as React from 'react'\nimport styled from 'styled-components'\nimport {\n  ButtonProps,\n  Button,\n  numbers,\n  useResponsiveColor,\n} from '@chadlavi/clear'\n\ninterface ExtendedButtonProps extends ButtonProps {\n  background: string\n  color: string\n}\n\nconst ExtendedButton = (\n  {background, color, ...props}: ExtendedButtonProps\n): JSX.Element => <Button {...props} />\n\nexport const ResponsiveBigErrorButton = styled(ExtendedButton)\\`\n  background: \\${(p): string => p.background};\n  color: \\${(p): string => p.color};\n  font-size: \\${numbers.fontSize.default * 2}px;\n  border-radius: \\${numbers.unit * 2}px;\n  padding: \\${numbers.unit * 4}px ${numbers.unit * 8}px;\n\\``}</CodeBlock>\n    <CodeBlock>{`// somewhere inside your React functional component\n    \n<ResponsiveBigErrorButton\n  background={useResponsiveColor('error')}\n  color={useResponsiveColor('background')}\n  onClick={(): void => alert('You clicked the responsive big error button')}\n>\n  Responsive BEB\n</ResponsiveBigErrorButton>`}</CodeBlock>\n    <Paragraph>\n      <ResponsiveBigErrorButton\n        background={useResponsiveColor('error')}\n        color={useResponsiveColor('background')}\n        onClick={(): void => alert('You clicked the responsive big error button')}\n      >\n        Responsive BEB\n      </ResponsiveBigErrorButton>\n    </Paragraph>\n    <Paragraph>\n      You can also access the standard Clear focus style and error focus style with <Code>focusStyle</Code> and <Code>\n      errorFocusStyle</Code>. Let's give our responsive big error button an error focus style:\n    </Paragraph>\n    <CodeBlock>{`// FocusableResponsiveBigErrorButton.tsx\n \nimport * as React from 'react'\nimport styled from 'styled-components'\nimport {\n  ButtonProps,\n  Button,\n  numbers,\n  useResponsiveColor,\n} from '@chadlavi/clear'\n\ninterface ExtendedButtonProps extends ButtonProps {\n  background: string\n  color: string\n}\n\nconst ExtendedButton = (\n  {background, color, ...props}: ExtendedButtonProps\n): JSX.Element => <Button {...props} />\n\nexport const FocusableResponsiveBigErrorButton = styled(ExtendedButton)\\`\n  background: \\${(p): string => p.background};\n  color: \\${(p): string => p.color};\n  font-size: \\${numbers.fontSize.default * 2}px;\n  border-radius: \\${numbers.unit * 2}px;\n  padding: \\${numbers.unit * 4}px ${numbers.unit * 8}px;\n  \\${errorFocusStyle}\n\\``}</CodeBlock>\n    <CodeBlock>{`// somewhere inside your React functional component\n\n<FocusableResponsiveBigErrorButton\n  background={useResponsiveColor('error')}\n  color={useResponsiveColor('background')}\n  onClick={(): void => alert(\n    'Focus this button and the last one to see the difference'\n  )}\n>\n  Responsive BEB with error focus\n</FocusableResponsiveBigErrorButton>`}</CodeBlock>\n    <Paragraph>\n      <FocusableResponsiveBigErrorButton\n        background={useResponsiveColor('error')}\n        color={useResponsiveColor('background')}\n        onClick={(): void => alert('Focus this button and the last one to see the difference')}\n      >\n        Responsive BEB with error focus\n      </FocusableResponsiveBigErrorButton>\n    </Paragraph>\n  </>\n\n","import * as React from 'react'\nimport {HashLink} from 'react-router-hash-link'\nimport {setTitle} from '../utils'\nimport {\n  Code,\n  Header,\n  Link,\n  Paragraph,\n} from '../component-lib'\n\nexport const GlobalStylesPage: React.FC = () =>\n  <>\n    {setTitle('Globals')}\n    <Header>Globals</Header>\n    <Paragraph as={'nav'}>\n      <Link as={HashLink} to={'#cssvariables'}><Code>{'<CSSVariables>'}</Code></Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#dark-mode'}>dark mode</Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#globalstyles'}><Code>{'<GlobalStyles>'}</Code></Link>\n    </Paragraph>\n    <Header as='h2' id='cssvariables'><Code>{'<CSSVariables>'}</Code></Header>\n    <Paragraph>\n      Clear uses CSS variables extensively, so an instance of the <Code>CSSVariables</Code> component is\n      required at the top level in your application for Clear to work correctly. The component declares a set of CSS\n      variables with names that start with <Code>--clear-*</Code> that define the colors and measurements used in Clear\n      components.\n    </Paragraph>\n    <Header as='h3' id='dark-mode'>Dark mode</Header>\n    <Paragraph>\n      The <Code>CSSVariables</Code> component uses <Code>@media (prefers-color-scheme: dark)</Code> to define a set of\n      colors for use when the user's device is in dark mode. Switching between light and dark mode is handled\n      automatically.\n    </Paragraph>\n    <Header as='h2' id='globalstyles'><Code>{'<GlobalStyles>'}</Code></Header>\n    <Paragraph>\n      The <Code>GlobalStyles</Code> component applies styles to the <Code>{'<body>'}</Code> tag. As such, <strong>this\n      component has side effects</strong>, because it creates CSS rules that affect elements outside the Clear design\n      system.\n    </Paragraph>\n    <Paragraph>\n      Omitting the <Code>GlobalStyles</Code> component in your application will mean that any content not contained in\n      a <Link as={HashLink} to={'/layout#page'}><Code>Page</Code></Link> component may have unpredictable colors,\n      background colors, font sizes, and margins. Omitting <Code>GlobalStyles</Code> is not recommended.\n    </Paragraph>\n  </>\n","import * as React from 'react'\nimport {setTitle} from '../utils'\nimport {\n  Code,\n  CodeBlock,\n  Header,\n  Link,\n  Paragraph,\n  numbers,\n  useBreakpoint,\n  useDarkMode,\n  useMediaQuery,\n  useResponsiveColor,\n} from '../component-lib'\n\nexport const HelpersPage: React.FC = () =>\n  <>\n    {setTitle('Helpers')}\n    <Header>Helpers</Header>\n    <Paragraph>\n      The following <Link href='https://reactjs.org/docs/hooks-intro.html'>React hooks</Link> are available in Clear.\n      When using them, please bear in mind the <Link href='https://reactjs.org/docs/hooks-rules.html'>rules of\n      hooks</Link> &mdash; most importantly, that <i>React hooks can only be used inside functional React\n      components</i>.\n    </Paragraph>\n    <Header as='h3' id='usemediaquery'><Code>useMediaQuery</Code></Header>\n    <CodeBlock>{'useMediaQuery(query: string) => boolean'}</CodeBlock>\n    <Paragraph>\n      This basic React hook returns a boolean value that reflects whether or not the given <Code>query</Code> matches.\n    </Paragraph>\n    <CodeBlock>\n      {'Your browser is in {useMediaQuery(\\'(orientation: landscape)\\') ? \\'landscape\\' : \\'portrait\\'} orientation.'}\n    </CodeBlock>\n    <Paragraph>\n      Your browser is in {useMediaQuery('(orientation: landscape)') ? 'landscape' : 'portrait'} orientation.\n    </Paragraph>\n    <Header as='h3' id='usebreakpoint'><Code>useBreakpoint</Code></Header>\n    <CodeBlock>{`type Breakpoint = 'xs' | 'sm' | 'md' | 'lg'\n\nuseBreakpoint(breakpoint: Breakpoint) => boolean`}</CodeBlock>\n    <Paragraph>\n      Returns a boolean value that reflects whether or not the user's viewport is smaller than the given breakpoint.\n    </Paragraph>\n    <CodeBlock>\n      {'Your browser is {useBreakpoint(\\'sm\\') ? \\'narrower\\' : \\'wider\\'} than {numbers.breakpoint.sm}px.'}\n    </CodeBlock>\n    <Paragraph>\n      Your browser is {useBreakpoint('sm') ? 'narrower' : 'wider'} than {numbers.breakpoint.sm}px.\n    </Paragraph>\n    <Header as='h3' id='usedarkmode'><Code>useDarkMode</Code></Header>\n    <CodeBlock>{'useDarkMode() => boolean'}</CodeBlock>\n    <Paragraph>\n      Returns a boolean value that reflects whether or not the user's browser is currently in dark mode.\n    </Paragraph>\n    <CodeBlock>\n      {'Your browser is in {useDarkMode() ? \\'dark\\' : \\'light\\'} mode.'}\n    </CodeBlock>\n    <Paragraph>\n      Your browser is in {useDarkMode() ? 'dark' : 'light'} mode.\n    </Paragraph>\n    <Header as='h3' id='useresponsivecolor'><Code>useResponsiveColor</Code></Header>\n    <CodeBlock>{`type Colors = 'background' | 'blue' | 'border' | 'error' | 'link' |\n  'textColor' | 'violet' | 'zebra'\n\nuseResponsiveColor(color: Colors) => string`}</CodeBlock>\n    <Paragraph>\n      Returns the CSS color value that matches the user's browser's current theme (light or dark mode) for the given\n      color.\n    </Paragraph>\n    <CodeBlock>\n      {`<Paragraph style={{color: useResponsiveColor('violet')}}>\n  This paragraph is <b>'{useResponsiveColor('violet')}'</b>, the tone of violet\n  that has appropriate contrast on <b>{useResponsiveColor('background')}</b>,\n  the current background color.\n</Paragraph>`}\n    </CodeBlock>\n    <Paragraph style={{color: useResponsiveColor('violet')}}>\n      This paragraph is <b>'{useResponsiveColor('violet')}'</b>, the tone of violet that has appropriate contrast\n      on <b>{useResponsiveColor('background')}</b>, the current background color.\n    </Paragraph>\n  </>\n","import * as React from 'react'\nimport {setTitle} from '../utils'\nimport {\n  Code,\n  Header,\n  Link,\n  Paragraph,\n} from '../component-lib'\n\nexport const HomePage: React.FC = () => (\n  <>\n    {setTitle()}\n    <Header>Clear</Header>\n    <Paragraph>\n      <Link href={'https://github.com/chadlavi/clear'}>Clear</Link> is a simple personal Design System for TypeScript\n      React apps created by <Link href={'https://github.com/chadlavi'}>Chad Lavimoniere</Link>.\n    </Paragraph>\n    <Paragraph>\n      Clear features automatic dark mode support and minimalist styling via <Code>styled-components</Code>.\n    </Paragraph>\n  </>\n)\n","import * as React from 'react'\nimport {HashLink} from 'react-router-hash-link'\nimport {setTitle} from '../utils'\nimport styled from 'styled-components'\nimport {\n  Checkbox,\n  Code,\n  CodeBlock,\n  Grid,\n  GridItem,\n  Header,\n  Input,\n  Label,\n  Link,\n  Paragraph,\n  Radio,\n  Select,\n  SelectProps,\n  handleMutliSelectOnChange,\n} from '../component-lib'\n\nconst FancyPinkParagraph = styled(Paragraph)`\n  border-radius: var(--clear-unit);\n  color: purple;\n  padding: var(--clear-unit);\n  background: pink;\n  label {\n    font-style: italic;\n  }\n`\n\nconst FancyPinkInput = styled(Input)`\n  border-color: purple;\n  border-radius: var(--clear-unit);\n  background: pink;\n  color: purple;\n  font-size: calc(var(--clear-unit) * 3);\n  ::selection {\n    color: pink;\n    background: purple;\n  }\n  &:focus {\n    box-shadow: 0 0 0 calc(var(--clear-unit) / 2 - 1px) pink,\n    0 0 0 calc(var(--clear-unit) / 2) purple;\n  }\n`\n\nconst selectOptions: SelectProps['options'] = [\n  {label: 'Buzz cola', value: 'buzz'},\n  {label: 'Slurm', value: 'slurm'},\n  {label: 'Slurm loco', value: 'slurm loco'},\n  {label: 'Oil-ade', value: 'oilade'},\n  {label: 'José Servo tequila', value: 'jose servo'},\n  {label: '\\'66 Thunderschewitz', value: 'thunderschewitz'},\n  {label: 'Löwenbrau', value: 'lowenbrau'},\n  {label: 'Dr. Jitter', value: 'dr jitter'},\n  {label: '100 coffees', value: '100 coffees'},\n  {label: 'Maltese liquor', value: 'maltese liquor'},\n]\n\nexport const InputPage: React.FC = () => {\n  const [numericValue, setNumericValue] = React.useState<number | undefined>()\n  const [textValue, setTextValue] = React.useState<string | undefined>()\n  const [errorValue, setErrorValue] = React.useState<string | undefined>()\n  const [disabledValue] = React.useState<string | undefined>()\n  const [requiredValue, setRequiredValue] = React.useState<string | undefined>()\n  const [customValue, setCustomValue] = React.useState<string | undefined>()\n  const [textAreaValue, setTextAreaValue] = React.useState<string | undefined>()\n\n  const [singleSelectValue, setSingleSelectValue] = React.useState<string | number | string[] | undefined>()\n  const [errorSingleSelectValue, setErrorSingleSelectValue] = React.useState<string | number | string[] | undefined>()\n  const [\n    requiredSingleSelectValue,\n    setRequiredSingleSelectValue\n  ] = React.useState<string | number | string[] | undefined>()\n\n  const [multiSelectValue, setMultiSelectValue] = React.useState<string[] | undefined>()\n  const [errorMultiSelectValue, setErrorMultiSelectValue] = React.useState<string[] | undefined>()\n  const [requiredMultiSelectValue, setRequiredMultiSelectValue] = React.useState<string[] | undefined>()\n\n  const [checked, setChecked] = React.useState(false)\n  const [errorChecked, setErrorChecked] = React.useState(false)\n\n  const [radioValue, setRadioValue] = React.useState<string>()\n\n  const handleFancyChange = (e: React.ChangeEvent<HTMLInputElement>): void => setCustomValue(e.currentTarget.value)\n\n  return (\n    <>\n      {setTitle('Input')}\n      <Header id='inputs'>Inputs</Header>\n      <Paragraph as={'nav'}>\n        <Link as={HashLink} to={'#input'}><Code>{'<Input>'}</Code></Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#inputprops'}><Code>InputProps</Code></Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#select'}><Code>{'<Select>'}</Code></Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#selectprops'}><Code>SelectProps</Code></Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#checkbox'}><Code>{'<Checkbox>'}</Code></Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#checkboxprops'}><Code>CheckBoxProps</Code></Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#radio'}><Code>{'<Radio>'}</Code></Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#radioprops'}><Code>RadioProps</Code></Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#customization'}>Customization</Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#examples'}>Examples</Link>\n      </Paragraph>\n      <Header as='h2' id='input'><Code>{'<Input>'}</Code></Header>\n      <Paragraph>\n        The <Code>Input</Code> component is a styled wrapper around an HTML <Code>{'<input>'}</Code> element.\n      </Paragraph>\n      <Paragraph>\n        Note that <Code>Input</Code> should always be paired with\n        a <Link as={HashLink} to={'/text#label'}><Code>{'<Label>'}</Code></Link>.\n      </Paragraph>\n      <Header as='h2' id='props'>Props: <Code>InputProps</Code></Header>\n      <Paragraph>\n        <Code>Input</Code> accepts all the props you'd expect for an HTML <Code>{'<input>'}</Code>, plus the\n        prop <Code>error?: boolean</Code> to toggle an error state.\n      </Paragraph>\n      <Paragraph>\n        You can also use\n        the <Link href={'https://styled-components.com/docs/api#as-polymorphic-prop'}><Code>as</Code> prop</Link> to\n        render a <Code>{'<textarea>'}</Code> instead of an <Code>{'<input>'}</Code>, as shown in\n        the <Link as={HashLink} to={'#examples'}>examples</Link> below.\n      </Paragraph>\n      <Header as='h2' id='select'><Code>{'<Select>'}</Code></Header>\n      <Paragraph>\n        <Code>{'<Select>'}</Code> is a wrapper around HTML <Code>{'<select>'}</Code>. Instead of manually building a\n        set of child <Code>{'<option>'}</Code>s as in HTML, you pass an array of options to\n        the <Code>options</Code> prop.\n      </Paragraph>\n      <Header as='h3' id='selectprops'>Props: <Code>SelectProps</Code></Header>\n      <Paragraph>\n        Besides the normal props that could be passed to an HTML<Code>{'<select>'}</Code> in any React app,\n        Clear's <Code>{'<Select>'}</Code> also has the required prop <Code>options</Code>, which expects a value of\n        type\n      </Paragraph>\n      <CodeBlock>{'{label: string; value: string | number | string[]}[]'}</CodeBlock>\n      <Paragraph>\n        <Code>{'<Select>'}</Code> also accepts the props <Code>error?: boolean</Code> to control whether it appears in\n        an error state, and <Code>label?: string</Code> to provide label content for the field.\n      </Paragraph>\n\n      <Header as='h2' id='checkbox'><Code>{'<Checkbox>'}</Code></Header>\n      <Paragraph>\n        <Code>{'<Checkbox>'}</Code> is a wrapper around HTML <Code>{'<input type=\\'checkbox\\'>'}</Code>.\n      </Paragraph>\n      <Header as='h3' id='checkboxprops'>Props: <Code>CheckboxProps</Code></Header>\n      <Paragraph>\n        <Code>{'<Checkbox>'}</Code> accepts the normal props that could be passed to an\n        HTML <Code>{'<input type=\\'checkbox\\'>'}</Code>. You can also pass the props <Code>label?: string</Code> to\n        define a label for the checkbox, and <Code>error?: boolean</Code> to toggle an error state.\n      </Paragraph>\n      <Header as='h2' id='radio'><Code>{'<Radio>'}</Code></Header>\n      <Paragraph>\n        <Code>{'<Radio>'}</Code> is a wrapper around HTML <Code>{'<input type=\\'radio\\'>'}</Code>.\n      </Paragraph>\n      <Header as='h3' id='radioprops'>Props: <Code>RadioProps</Code></Header>\n      <Paragraph>\n        Identically to <Code>{'<Checkbox>'}</Code>, <Code>{'<Radio>'}</Code> accepts the normal props that could be\n        passed to an HTML <Code>{'<input type=\\'checkbox\\'>'}</Code>. You can also pass the\n        props <Code>label?: string</Code> to define a label for the radio option,\n        and <Code>error?: boolean</Code> to toggle an error state for the option.\n      </Paragraph>\n      <Header as='h2' id='customization'>Customization</Header>\n      <Paragraph>\n        See <Link as={HashLink} to={'/start#customization'}>Customization</Link> discussion on the Getting started page.\n      </Paragraph>\n      <Paragraph>\n        Here's an example of a customized Input:\n      </Paragraph>\n      <CodeBlock>{`const FancyPinkParagraph = styled(Paragraph)\\`\n  border-radius: var(--clear-unit);\n  color: purple;\n  padding: var(--clear-unit);\n  background: pink;\n  label {\n    font-style: italic;\n  }\n\\`\n\nconst FancyPinkInput = styled(Input)\\`\n  border-color: purple;\n  border-radius: var(--clear-unit);\n  background: pink;\n  color: purple;\n  font-size: calc(var(--clear-unit) * 3);\n  ::selection {\n    color: pink;\n    background: purple;\n  }\n  &:focus {\n    box-shadow: 0 0 0 calc(var(--clear-unit) / 2 - 1px) pink,\n    0 0 0 calc(var(--clear-unit) / 2) purple;\n  }\n\\`\n\n<FancyPinkParagraph>\n  <Label htmlFor={'fancy-input'}>Fancy pink input</Label>\n  <FancyPinkInput\n    id={'fancy-input'}\n    value={customValue}\n    onChange={handleFancyChange}\n  />\n</FancyPinkParagraph>`}</CodeBlock>\n      <FancyPinkParagraph>\n        <Label\n          htmlFor={'fancy-input'}>\n          {`Fancy pink input${customValue?.match(/fancy/i) ? '🌸' :''}`}\n        </Label>\n        <FancyPinkInput\n          id={'fancy-input'}\n          value={customValue}\n          onChange={handleFancyChange}\n        />\n      </FancyPinkParagraph>\n      <Header as='h2' id='examples'>\n        <Link href={'https://github.com/chadlavi/clear/blob/master/playground/src/Pages/InputPage.tsx#L188'}>\n          Examples\n        </Link>\n      </Header>\n      <Grid spacing={8}>\n        <GridItem>\n          <Header as='h3' id='input-examples'><Code>{'<Input>'}</Code></Header>\n        </GridItem>\n        <GridItem size={6}>\n          <Label htmlFor={'numeric-input'}>Numeric input</Label>\n          <Input\n            value={numericValue}\n            id={'numeric-input'}\n            type={'number'}\n            inputMode={'numeric'}\n            onChange={(e): void => setNumericValue(parseInt(e.currentTarget.value || '0', 10))}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label htmlFor={'text-input'}>Basic text input</Label>\n          <Input\n            id={'text-input'}\n            value={textValue}\n            onChange={(e): void => setTextValue(e.currentTarget.value)}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label error htmlFor={'error-input'}>Input with error</Label>\n          <Input\n            id={'error-input'}\n            value={errorValue}\n            error\n            onChange={(e): void => setErrorValue(e.currentTarget.value)}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label disabled htmlFor={'disabled-input'}>Disabled input</Label>\n          <Input\n            id={'disabled-input'}\n            value={disabledValue}\n            disabled\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label required htmlFor={'required-input'}>Input</Label>\n          <Input\n            id={'required-input'}\n            value={requiredValue}\n            required\n            onChange={(e): void => setRequiredValue(e.currentTarget.value)}\n          />\n        </GridItem>\n        <GridItem>\n          <Label htmlFor={'textarea-input'}>Input with <Code>{'as={\\'textarea\\'}'}</Code></Label>\n          <Input\n            as={'textarea'}\n            id={'textarea-input'}\n            value={textAreaValue}\n            rows={7}\n            onChange={(e: React.ChangeEvent<HTMLTextAreaElement>): void => setTextAreaValue(e.currentTarget.value)}\n          />\n        </GridItem>\n        <GridItem>\n          <Header as='h3' id='select-examples'><Code>{'<Select>'}</Code></Header>\n        </GridItem>\n        <GridItem size={6}>\n          <Label htmlFor={'single-select'}>Single select</Label>\n          <Select\n            id={'single-select'}\n            value={singleSelectValue}\n            onChange={(e): void => setSingleSelectValue(e.currentTarget.value)}\n            options={selectOptions}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label error htmlFor={'single-select-error'}>Single select with error</Label>\n          <Select\n            error\n            id={'single-select-error'}\n            value={errorSingleSelectValue}\n            onChange={(e): void => setErrorSingleSelectValue(e.currentTarget.value)}\n            options={selectOptions}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label required htmlFor={'single-select'}>Single select</Label>\n          <Select\n            id={'single-select'}\n            value={requiredSingleSelectValue}\n            onChange={(e): void => setRequiredSingleSelectValue(e.currentTarget.value)}\n            options={selectOptions}\n            required\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label disabled htmlFor={'disabled-select'}>Disabled single select</Label>\n          <Select\n            id={'disabled-select'}\n            disabled\n            options={selectOptions}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label htmlFor={'multiple-select'}>Multiple select</Label>\n          <Select\n            id={'multiple-select'}\n            multiple\n            onChange={handleMutliSelectOnChange(setMultiSelectValue)}\n            options={selectOptions}\n            size={3}\n            value={multiSelectValue}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label error htmlFor={'multiple-select-error'}>Multiple select with error</Label>\n          <Select\n            error\n            id={'multiple-select-error'}\n            multiple\n            onChange={handleMutliSelectOnChange(setErrorMultiSelectValue)}\n            options={selectOptions}\n            size={3}\n            value={errorMultiSelectValue}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label required htmlFor={'required-multiple-select'}>Multiple select</Label>\n          <Select\n            id={'required-multiple-select'}\n            multiple\n            onChange={handleMutliSelectOnChange(setRequiredMultiSelectValue)}\n            options={selectOptions}\n            required\n            size={3}\n            value={requiredMultiSelectValue}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Label disabled htmlFor={'disabled-multiple-select'}>Disabled multiple select</Label>\n          <Select\n            id={'disabled-multiple-select'}\n            multiple\n            options={selectOptions}\n            disabled\n            size={3}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Header as='h3' id='checkbox-examples'><Code>{'<Checkbox>'}</Code></Header>\n          <Checkbox\n            checked={checked}\n            onChange={(e): void => setChecked(e.target.checked)}\n            id={'basic-checkbox'}\n            label={'Checkbox'}\n          />\n          <Checkbox\n            checked={errorChecked}\n            onChange={(e): void => setErrorChecked(e.target.checked)}\n            id={'error-checkbox'}\n            error\n            label={'Checkbox with error'}\n          />\n          <Checkbox\n            checked={false}\n            id={'disabled-checkbox'}\n            disabled\n            label={'Disabled checkbox'}\n          />\n          <Checkbox\n            checked={true}\n            id={'disabled-checkbox-checked'}\n            disabled\n            label={'Disabled checkbox (checked)'}\n          />\n        </GridItem>\n        <GridItem size={6}>\n          <Header as='h3' id='radio-examples'><Code>{'<Radio>'}</Code></Header>\n          <form role={'radiogroup'}>\n            <Radio\n              checked={radioValue === 'standard'}\n              onChange={(e): void => setRadioValue(e.target.value)}\n              id={'basic-radio'}\n              label={'Radio button'}\n              name={'radio'}\n              value={'standard'}\n            />\n            <Radio\n              checked={radioValue === 'error'}\n              onChange={(e): void => setRadioValue(e.target.value)}\n              id={'error-radio'}\n              error\n              label={'Radio button with error'}\n              name={'radio'}\n              value={'error'}\n            />\n            <Radio\n              checked={radioValue === 'disabled'}\n              onChange={(e): void => setRadioValue(e.target.value)}\n              disabled\n              id={'disabled-radio'}\n              label={'Disabled radio button'}\n              name={'radio'}\n              value={'disabled'}\n            />\n          </form>\n        </GridItem>\n      </Grid>\n    </>\n  )\n}\n","import * as React from 'react'\nimport {HashLink} from 'react-router-hash-link'\nimport {setTitle} from '../utils'\nimport styled from 'styled-components'\nimport {\n  Code,\n  CodeBlock,\n  Grid,\n  GridItem,\n  GridItemSize,\n  Header,\n  Input,\n  Label,\n  Link,\n  Paragraph,\n  ScrollContainer,\n  numbers,\n} from '../component-lib'\n\ninterface ExampleContainerProps extends React.HTMLAttributes<HTMLDivElement> {\n  background?: string\n  color: string\n  padded?: boolean\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst ExampleContainer = ({background, color, padded, ...props}: ExampleContainerProps): JSX.Element =>\n  <div {...props} />\n\n\nconst ExampleBorder = styled(ExampleContainer)`\nwidth: 100%;\nborder: 1px solid ${(p): string => p.color};\npadding: ${(p): string => p.padded === false ? '0' : 'var(--clear-unit)'};\nbackground: ${(p): string => p.background || 'var(--clear-background)'};\nborder-radius: var(--clear-unit);\n`\n\nexport const LayoutPage: React.FC = () => {\n  const [gridSpacing, setGridSpacing] = React.useState<number>(8)\n  const [gridItem1, setGridItem1] = React.useState<GridItemSize>(6)\n  const [gridItem2, setGridItem2] = React.useState<GridItemSize>(6)\n  const [gridItem3, setGridItem3] = React.useState<GridItemSize>(12)\n\n  const gridItemOnChange = (\n    setter: React.Dispatch<React.SetStateAction<GridItemSize>>\n  ) => (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const newValue = parseInt(e.currentTarget.value, 10)\n    if (newValue > 0 && newValue <= 12) {\n      setter(newValue as GridItemSize)\n    }\n  }\n\n  return (\n    <>\n      {setTitle('Layout components')}\n      <Header>Layout components</Header>\n      <Paragraph>\n        <Link as={HashLink} to={'#page'}><Code>{'<Page>'}</Code></Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#skiplink'}><Code>{'<Skiplink>'}</Code></Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#grid'}><Code>{'<Grid>'}</Code></Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#griditem'}><Code>{'<GridItem>'}</Code></Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#scrollcontainer'}><Code>{'<ScrollContainer>'}</Code></Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#responsive-sizing'}>Responsive sizing</Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#customization'}>Customization</Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#examples'}>Examples</Link>\n      </Paragraph>\n      <Header as='h2' id='page'><Code>{'<Page>'}</Code></Header>\n      <Paragraph>\n        The <Code>Page</Code> component renders a horizontally\n        centered <Code>{'<main>'}</Code> HTML element (though you can use\n        the <Link href={'https://styled-components.com/docs/api#as-polymorphic-prop'}>\n          <Code>as</Code> prop</Link> to render a div or other block-level lement as necessary).\n      </Paragraph>\n      <Paragraph>\n        <Code>Page</Code>s have a width of {numbers.width.main}px or the full\n        screen width, whichever is lower.\n      </Paragraph>\n      <Paragraph>\n        All content in your app should be contained within a <Code>Page</Code>.\n      </Paragraph>\n      <Header as='h3'>Props: <Code>PageProps</Code></Header>\n      <Paragraph>\n        <Code>{'<Page>'}</Code> accepts the props that could normally be passed to an\n        HTML <Code>{'<main>'}</Code> element.\n      </Paragraph>\n      <Paragraph>\n        <Code>{'<Page>'}</Code> also accepts the optional\n        prop <Code>size?: 'main' | 'lg' | 'xl'</Code> that controls the width of\n        the <Code>{'<Page>'}</Code>. If nothing is provided, the width defaults\n        to <Code>main</Code>.\n      </Paragraph>\n      <CodeBlock>{`Page size values:\n  main: ${numbers.width.main}px (default)\n    lg: ${numbers.width.lg}px\n    xl: ${numbers.width.xl}px`}</CodeBlock>\n      <Header as='h2' id='skiplink'><Code>{'<Skiplink>'}</Code></Header>\n      <Paragraph>\n        Use a <Code>{'<Skiplink>'}</Code> to enable users who rely on keyboard\n        navigation to skip over menus/navigational\n        elements on your site. <Code>{'<Skiplink>'}</Code> renders a button that\n        is hidden until it gets focus, and on click\n        it will move focus to the element whose id is passed to its <Code>id</Code> prop.\n      </Paragraph>\n      <Paragraph>\n        The <Code>{'<Skiplink>'}</Code> component should be inserted before the\n        navigational elements of your application. You can see an example of\n        a <Code>{'<Skiplink>'}</Code> by reloading this page and hitting\n        the <Code>Tab</Code> key on your keyboard.\n      </Paragraph>\n      <Header as='h3'>Props: <Code>SkipLinkProps</Code></Header>\n      <Paragraph>\n        <Code>{'<Skiplink>'}</Code> accepts only one\n        prop: <Code>id: string</Code>. Pass the id of the element to which\n        the <Code>{'<Skiplink>'}</Code> should skip.\n      </Paragraph>\n      <Header as='h2' id='grid'><Code>{'<Grid>'}</Code></Header>\n      <Paragraph>\n        Use the <Code>{'<Grid>'}</Code> component to create a 12-column layout,\n        with <Code>{'<GridItem>'}</Code> children that occupy a specified\n        number of columns.\n      </Paragraph>\n      <Header as='h3'>Props: <Code>GridProps</Code></Header>\n      <Paragraph>\n        Besides children, <Code>{'<Grid>'}</Code> accepts the\n        prop <Code>spacing?: number</Code>. If spacing is supplied, that number\n        of pixels of space will be shown around all <Code>{'<GridItem>'}</Code>s.\n      </Paragraph>\n      <Header as='h2' id='griditem'><Code>{'<GridItem>'}</Code></Header>\n      <Paragraph>\n        Every child of a <Code>{'<Grid>'}</Code> should be a <Code>{'<GridItem>'}</Code>.\n      </Paragraph>\n      <Header as='h3'>Props: <Code>GridItemProps</Code></Header>\n      <Paragraph>\n        Besides children, <Code>{'<GridItem>'}</Code>s accept the\n        prop <Code>size?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12</Code>.\n        The <Code>size</Code> prop defines how many columns\n        the <Code>{'<GridItem>'}</Code> occupies. This prop defaults to <Code>12</Code>.\n      </Paragraph>\n      <Header as='h3' id='responsive-sizing'>Responsive sizing of <Code>{'<GridItem>'}</Code>s</Header>\n      <Paragraph>\n        Note that below the <Code>xs</Code> breakpoint ({numbers.breakpoint.xs}px),\n        the <Code>size</Code> prop is ignored and all <Code>{'<GridItem>'}</Code>s are full-width.\n      </Paragraph>\n      <Header as='h2' id='scrollcontainer'><Code>{'<ScrollContainer>'}</Code></Header>\n      <Paragraph>\n        You can use a <Code>ScrollContainer</Code> to create a verticall or\n        horizontally scrollable div with content of\n        a fixed minimum height/width. Scroll containers are very convenient ways\n        to prevent <Link as={HashLink} to={'/table#table'}><Code>{'<Table>'}</Code>\n        </Link>s from becoming unmanageable on responsive devices.\n      </Paragraph>\n      <Header as='h3'>Props: <Code>ScrollContainerProps</Code></Header>\n      <Paragraph>\n        Besides the props that can be passed to an\n        HTML <Code>{'<div>'}</Code>, <Code>ScrollContainer</Code> accepts the following props:\n      </Paragraph>\n      <CodeBlock>{`contentMinHeight?: number | string\ncontentMinWidth?: number | string\ndirection: 'horizontal' | 'vertical'\nmaxHeight?: number | string\nmaxWidth?: number | string`}</CodeBlock>\n      <Header as='h2' id='customization'>Customization</Header>\n      <Paragraph>\n        See <Link as={HashLink} to={'/start#customization'}>Customization</Link> discussion on the Getting started page.\n      </Paragraph>\n      <Header as='h2' id='examples'>\n        <Link href={'https://github.com/chadlavi/clear/blob/master/playground/src/Pages/LayoutPage.tsx#L141'}>\n          Examples\n        </Link>\n      </Header>\n      <Header as='h3'><Code>{'<Grid>'}</Code></Header>\n      <Paragraph>\n        The following interactive example grid has colored borders on the\n        outside of the <Code>{'<Grid>'}</Code> and the content of\n        each <Code>{'<GridItem>'}</Code> to illustrate how <Code>{'<Grid>'}\n        </Code>'s <Code>spacing</Code> prop and <Code>{'<GridItem>'}\n        </Code>'s <Code>size</Code> prop work. Change the values below to\n        increase/decrease the Grid spacing and change the column size of each item.\n      </Paragraph>\n      <ExampleBorder color='var(--clear-border)' background='var(--clear-zebra)' padded={false}>\n        <Grid spacing={gridSpacing}>\n          <GridItem>\n            <ExampleBorder color='dodgerblue'>\n              <Label htmlFor={'grid-spacing'}>Grid spacing</Label>\n              <Input\n                id={'grid-spacing'}\n                inputMode={'numeric'}\n                min={0}\n                onChange={(e): void => setGridSpacing(parseInt(e.currentTarget.value || '0', 10))}\n                type={'number'}\n                value={gridSpacing}\n              />\n            </ExampleBorder>\n          </GridItem>\n          <GridItem size={gridItem1}>\n            <ExampleBorder color='forestgreen'>\n              <Label htmlFor={'grid-item-1'}>Green GridItem's size</Label>\n              <Input\n                id={'grid-item-1'}\n                inputMode={'numeric'}\n                onChange={gridItemOnChange(setGridItem1)}\n                type={'number'}\n                value={gridItem1}\n              />\n            </ExampleBorder>\n          </GridItem>\n          <GridItem size={gridItem2}>\n            <ExampleBorder color='red'>\n              <Label htmlFor={'grid-item-2'}>Red GridItem's size</Label>\n              <Input\n                id={'grid-item-2'}\n                inputMode={'numeric'}\n                onChange={gridItemOnChange(setGridItem2)}\n                type={'number'}\n                value={gridItem2}\n              />\n            </ExampleBorder>\n          </GridItem>\n          <GridItem size={gridItem3}>\n            <ExampleBorder color='violet'>\n              <Label htmlFor={'grid-item-3'}>Violet GridItem's size</Label>\n              <Input\n                id={'grid-item-3'}\n                inputMode={'numeric'}\n                onChange={gridItemOnChange(setGridItem3)}\n                type={'number'}\n                value={gridItem3}\n              />\n            </ExampleBorder>\n          </GridItem>\n        </Grid>\n      </ExampleBorder>\n      <Header as='h3'><Code>ScrollContainer</Code></Header>\n      <ScrollContainer direction={'horizontal'}>\n        <div\n          style={{\n            background: 'violet',\n            borderRadius: 8,\n            color: 'black',\n            padding: 20,\n            position: 'relative',\n            width: 2000,\n          }}\n        >\n          This div has a min-width of 2000px, but\n          its <Code style={{color: 'var(--clear-textColor)'}}>ScrollContainer</Code> is only 100% width\n          <div\n            style={{\n              bottom: 20,\n              fontWeight: 'bold',\n              position: 'absolute',\n              right: 20,\n            }}\n          >\n            neat!\n          </div>\n        </div>\n      </ScrollContainer>\n      <br/>\n      <ScrollContainer direction={'vertical'} maxHeight={58}>\n        <div\n          style={{\n            background: 'dodgerblue',\n            borderRadius: 8,\n            color: 'black',\n            padding: 20,\n            position: 'relative',\n            height: 1000,\n          }}\n        >\n          This div has a min-height of 1000px, but\n          its <Code style={{color: 'var(--clear-textColor)'}}>ScrollContainer</Code> is only 58px tall\n          <div\n            style={{\n              bottom: 20,\n              fontWeight: 'bold',\n              position: 'absolute',\n              right: 20,\n            }}\n          >\n            neat!\n          </div>\n        </div>\n      </ScrollContainer>\n    </>\n  )\n}\n","import * as React from 'react'\nimport {HashLink} from 'react-router-hash-link'\nimport {Link as RouterLink} from 'react-router-dom'\nimport {setTitle} from '../utils'\nimport {\n  Code,\n  CodeBlock,\n  Header,\n  Link,\n  Paragraph,\n} from '../component-lib'\n\nexport const LinkPage: React.FC = () =>\n  <>\n    {setTitle('Link')}\n    <Header id={'link'}><Code>{'<Link>'}</Code></Header>\n    <Paragraph as={'nav'}>\n      <Link as={HashLink} to={'#external'}>External vs internal links</Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#router'}>Router</Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#props'}>Props</Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#customization'}>Customization</Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#examples'}>Examples</Link>\n    </Paragraph>\n    <Paragraph>\n      The <Code>Link</Code> component is a simple styled wrapper around an HTML <Code>{'<a>'}</Code> element.\n    </Paragraph>\n    <Header as='h2' id='external'>External vs internal links</Header>\n    <Paragraph>\n      Links with an <Code>href</Code> that matches <Code>/^http/</Code> are marked as external, and will automatically\n      open in a new tab. External links are decorated with a \"{'\\u2197'}\" icon.\n    </Paragraph>\n    <Header as='h2' id='router'>Router links</Header>\n    <Paragraph>\n      Use the <Link href={'https://styled-components.com/docs/api#as-polymorphic-prop'}><Code>as</Code> prop</Link> to\n      substitute the Link component of your choice:\n    </Paragraph>\n    <CodeBlock>\n      {'<Link as={RouterLink} to={\\'/\\'}>Router link</Link>'}\n    </CodeBlock>\n    <Header as='h2' id='props'>Props: <Code>LinkProps</Code></Header>\n    <Paragraph>\n      <Code>Link</Code> accepts standard HTML anchor element props. Note that if you use\n      the <Link href={'https://styled-components.com/docs/api#as-polymorphic-prop'}><Code>as</Code> prop</Link> to\n      substitute a different component, then your instance of <Code>Link</Code> will change to accept the props of the\n      substituted component. For example, a RouterLink will accept the prop <Code>to: string</Code> which is not\n      accepted by <Code>{'<a>'}</Code>.\n    </Paragraph>\n    <Header as='h2' id='customization'>Customization</Header>\n    <Paragraph>\n      See <Link as={HashLink} to={'/start#customization'}>Customization</Link> discussion on the Getting started page.\n    </Paragraph>\n    <Header as='h2' id='examples'>\n      <Link href={'https://github.com/chadlavi/clear/blob/master/playground/src/Pages/LinkPage.tsx#L56'}>Examples</Link>\n    </Header>\n    <Paragraph>\n      <Link href={'/clear/'}>Internal HTML link</Link> (causes page load)\n    </Paragraph>\n    <Paragraph>\n      <Link as={RouterLink} to={'/'}>Router link</Link> (does not cause page load)\n    </Paragraph>\n    <Paragraph>\n      <Link href={'https://github.com/chadlavi/clear'}>External link</Link>\n    </Paragraph>\n  </>\n","import * as React from 'react'\nimport {HashLink} from 'react-router-hash-link'\nimport {setTitle} from '../utils'\nimport {\n  Button,\n  Code,\n  CodeBlock,\n  Header,\n  Link,\n  Notification,\n  Paragraph,\n} from '../component-lib'\n\nexport const NotificationPage: React.FC = () => {\n  const [standard, setStandard] = React.useState(false)\n  const [success, setSuccess] = React.useState(false)\n  const [error, setError] = React.useState(false)\n  const [transient, setTransient] = React.useState(false)\n  const [transientUndismissible, setTransientUndismissible] = React.useState(false)\n  const [mini, setMini] = React.useState(false)\n\n  const setAllFalse = (): void => {\n    setStandard(false)\n    setSuccess(false)\n    setError(false)\n    setTransient(false)\n    setTransientUndismissible(false)\n    setMini(false)\n  }\n\n  return (\n    <>\n      {setTitle('Notifications')}\n      <Header><Code>{'<Notification>'}</Code></Header>\n      <Paragraph as={'nav'}>\n        <Link as={HashLink} to={'#props'}>Props</Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#customization'}>Customization</Link>{' \\u00b7 '}\n        <Link as={HashLink} to={'#examples'}>Examples</Link>\n      </Paragraph>\n      <Paragraph>\n        Use a <Code>{'<Notification>'}</Code> to show users a short, timely message that might automatically disappear\n        and that the user may be able to manually dismiss (or both).\n      </Paragraph>\n      <Paragraph>\n        For accessibility reasons, it's best to insert the <Code>{'<Notification>'}</Code> component in your code\n        within the context it's relevant to. In the <Link as={HashLink} to='#examples'>examples</Link> below, you can\n        see that the <Code>{'<Notification>'}</Code> immediately follows the <Code>{'<Button>'}</Code> that invokes it.\n      </Paragraph>\n      <Header as='h2' id='props'>Props: <Code>NotificationProps</Code></Header>\n      <Paragraph>\n        <Code>{'<Notification>'}</Code> has two required props:\n      </Paragraph>\n      <CodeBlock>{`/**\n * Control whether or not the Notification is open\n */\nopen: boolean`}</CodeBlock>\n      <Paragraph>and</Paragraph>\n      <CodeBlock>{`/**\n * Pass a function to set the value of \\`open\\` to this prop\n */\nsetOpen: React.Dispatch<React.SetStateAction<boolean>> | (() => void)`}</CodeBlock>\n      <Paragraph>\n      You can also pass these props:\n      </Paragraph>\n      <CodeBlock>{`/**\n * Optional props to pass to the dismiss button\n */\nbuttonProps?: ButtonProps\n/**\n * If true or undefined, a dismiss button will be shown that the user can use\n * to manually dismiss the Notification.\n */\ndismissible?: boolean\n/**\n * If true, the Notification will be styled with error coloring\n */\nerror?: boolean\n/**\n * If true, the notification will be narrower, with centered text, and a\n * dismiss button will not be shown regardless of the value of \\`dismissible\\`.\n */\nmini?: boolean\n/**\n * If true, the Notification will be styled with success coloring\n */\nsuccess?: boolean\n/**\n * Overrides the default timeout duration of a transient Notification.\n * Defaults to 1500ms.\n */\ntimeOut?: number\n/**\n * If true, the Notification will self-dismiss after either 1500ms or the\n * number of milliseconds passed to \\`timeOut\\`.\n *\n * Note: this prop and \\`dismissible\\` can be used together.\n */\ntransient?: boolean`}</CodeBlock>\n      <Header as='h2' id='customization'>Customization</Header>\n      <Paragraph>\n      See <Link as={HashLink} to={'/start#customization'}>Customization</Link> discussion on the Getting started page.\n      </Paragraph>\n      <Paragraph>\n        To make customization easier, some fixed class names are applied to elements\n        inside <Code>{'<Notification>'}</Code>. The base component has class <Code>notification</Code>. The content has\n        class <Code>notification-content</Code>. The dismiss button, if present, has\n        class <Code>notification-dismiss-button</Code>.\n      </Paragraph>\n      <Header as ='h2' id='examples'>Examples</Header>\n      <Paragraph as='div'>\n        <Button\n          onClick={(): void => {setAllFalse(); setStandard(true)}}\n        >\n          Show standard Notification\n        </Button>\n        <Notification\n          open={standard}\n          setOpen={setStandard}\n        >\n          This is a standard notification\n        </Notification>\n      </Paragraph>\n      <Paragraph as='div'>\n        <Button\n          onClick={(): void => {setAllFalse(); setSuccess(true)}}\n        >\n          Show success Notification\n        </Button>\n        <Notification\n          open={success}\n          setOpen={setSuccess}\n          success\n        >\n          This is a success notification\n        </Notification>\n      </Paragraph>\n      <Paragraph as='div'>\n        <Button\n          onClick={(): void => {setAllFalse(); setError(true)}}\n        >\n          Show error Notification\n        </Button>\n        <Notification\n          open={error}\n          setOpen={setError}\n          error\n        >\n          This is an error notification\n        </Notification>\n      </Paragraph>\n      <Paragraph as='div'>\n        <Button\n          onClick={(): void => {setAllFalse(); setTransient(true)}}\n        >\n          Show transient dismissible Notification\n        </Button>\n        <Notification\n          open={transient}\n          setOpen={setTransient}\n          transient\n          timeOut={1000 * 3}\n        >\n          This is a transient notification you can dismiss manually too\n        </Notification>\n      </Paragraph>\n      <Paragraph as='div'>\n        <Button\n          onClick={(): void => {setAllFalse(); setTransientUndismissible(true)}}\n        >\n          Show transient-only Notification\n        </Button>\n        <Notification\n          open={transientUndismissible}\n          setOpen={setTransientUndismissible}\n          transient\n          dismissible={false}\n        >\n          This is a transient-only notification\n        </Notification>\n      </Paragraph>\n      <Paragraph as='div'>\n        <Button\n          onClick={(): void => {setAllFalse(); setMini(true)}}\n        >\n          Show mini Notification\n        </Button>\n        <Notification\n          open={mini}\n          setOpen={setMini}\n          mini\n        >\n          Mini notification\n        </Notification>\n      </Paragraph>\n    </>\n  )\n}\n","import * as React from 'react'\nimport {HashLink} from 'react-router-hash-link'\nimport {setTitle} from '../utils'\nimport {\n  Code,\n  CodeBlock,\n  GenerateTable,\n  Header,\n  Link,\n  Paragraph,\n  ScrollContainer,\n  Table,\n  TableBody,\n  TableCell,\n  TableData,\n  TableHead,\n  TableHeaderType,\n  TableRow,\n} from '../component-lib'\n\ntype TableHeaders = 'name' | 'email' | 'occupation'\n\nconst tableHeaders: TableHeaderType<TableHeaders>[] = [\n  'name',\n  'email',\n  'occupation',\n]\n\nconst tableData: TableData<TableHeaders> = [\n  {\n    name: 'Phillip J. Fry',\n    email: 'cosmicphil@panuccispizza.net',\n    occupation: 'Delivery boy',\n  },\n  {\n    name: 'Turanga Leela',\n    email: '1bdi@planetexpress.biz',\n    occupation: 'Captain',\n  },\n  {\n    name: 'Hubert J. Farnsworth',\n    email: 'hubie@planetexpress.biz',\n    occupation: 'Professor',\n  },\n  {\n    name: 'Bender \"Bending\" Rodriguez',\n    email: 'bender@benderisgreat.com',\n    occupation: 'Bending unit',\n  },\n  {\n    name: 'Dr. Amy Wong',\n    email: 'awong@marsu.edu',\n    occupation: 'Intern',\n  },\n  {\n    name: 'Dr. John A. Zoidberg',\n    email: 'woopwoopwoopwoop@drzoidberg.biz',\n    occupation: 'Staff doctor',\n  },\n  {\n    name: 'Hermes Conrad',\n    email: 'bureaucratman@limbo.org',\n    occupation: 'Grade 39 bureaucrat',\n  }\n]\n\nexport const TablePage: React.FC = () =>\n  <>\n    {setTitle('Table')}\n    <Header>Table</Header>\n    <Paragraph as={'nav'}>\n      <Link as={HashLink} to={'#props'}>Props</Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#table'}><Code>{'<Table>'}</Code></Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#tablehead'}><Code>{'<TableHead>'}</Code></Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#tablebody'}><Code>{'<TableBody>'}</Code></Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#tablerow'}><Code>{'<TableRow>'}</Code></Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#tablecell'}><Code>{'<TableCell>'}</Code></Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#generatetable'}><Code>{'<GenerateTable>'}</Code></Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#customization'}>Customization</Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#examples'}>Examples</Link>\n    </Paragraph>\n    <Paragraph>\n      Clear provides styled versions of the table primitives <Code>{'<table>'}</Code>, <Code>{'<thead>'}</Code>,\n      <Code>{'<tbody>'}</Code>, <Code>{'<tr>'}</Code>, and <Code>{'<td>'}</Code> (which can be extended to\n      cover <Code>{'<th>'}</Code>).\n    </Paragraph>\n    <Header as='h2' id='props'>Props</Header>\n    <Paragraph>\n      All of Clear's table-related components accept the standard props that could normally be passed to their HTML\n      equivalents.\n    </Paragraph>\n    <Header as='h2' id='table'><Code>{'<Table>'}</Code></Header>\n    <Paragraph>\n      Use the <Code>Table</Code> component where you would use an HTML <Code>{'<table>'}</Code>.\n    </Paragraph>\n    <Header as='h2' id='tablehead'><Code>{'<TableHead>'}</Code></Header>\n    <Paragraph>\n      Use the <Code>TableHead</Code> component where you would use an HTML <Code>{'<thead>'}</Code>.\n    </Paragraph>\n    <Header as='h2' id='tablebody'><Code>{'<TableBody>'}</Code></Header>\n    <Paragraph>\n      Use the <Code>TableBody</Code> component where you would use an HTML <Code>{'<tbody>'}</Code>.\n    </Paragraph>\n    <Header as='h2' id='tablerow'><Code>{'<TableRow>'}</Code></Header>\n    <Paragraph>\n      Use the <Code>TableRow</Code> component where you would use an HTML <Code>{'<tr>'}</Code>.\n    </Paragraph>\n    <Header as='h2' id='tablecell'><Code>{'<TableCell>'}</Code></Header>\n    <Paragraph>\n      Use the <Code>TableCell</Code> component where you would use an HTML <Code>{'<td>'}</Code>.\n    </Paragraph>\n    <Paragraph>\n      <Code>TableCell</Code> can also be used for <Code>{'<th>'}</Code> (table header cell) by extending it with\n      the <Link href={'https://styled-components.com/docs/api#as-polymorphic-prop'}><Code>as</Code> prop</Link> like\n      so:\n    </Paragraph>\n    <CodeBlock>{`<TableCell as='th'>\n  This will render in the DOM as a th\n</TableCell>`}\n    </CodeBlock>\n    <Header as='h2' id='generatetable'><Code>{'<GenerateTable>'}</Code></Header>\n    <Paragraph>\n      You can also generate a table from an array of headers and an array of row data with\n      the <Code>GenerateTable</Code> component. Using this component is much terser in terms of JSX, but requires more\n      thoroughly typed data.\n    </Paragraph>\n    <Header as='h2' id='customization'>Customization</Header>\n    <Paragraph>\n      See <Link as={HashLink} to={'/start#customization'}>Customization</Link> discussion on the Getting started page.\n    </Paragraph>\n    <Header as='h2' id='examples'>\n      <Link href={'https://github.com/chadlavi/clear/blob/master/playground/src/Pages/TablePage.tsx#L145'}>\n        Examples\n      </Link>\n    </Header>\n    <Paragraph>\n      Both <Code>Table</Code>s below are wrapped\n      in <Link as={HashLink} to={'/layout#scrollcontainer'}><Code>{'<ScrollContainer>'}</Code></Link>s and has a\n      min-width of 600px. In narrow viewports, they will be horizontally scrollable.\n    </Paragraph>\n    <Paragraph>\n      Normally constructed table:\n    </Paragraph>\n    <ScrollContainer direction='horizontal' maxWidth={'100%'} contentMinWidth={600}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell as={'th'}>Name</TableCell>\n            <TableCell as={'th'}>Email</TableCell>\n            <TableCell as={'th'}>Occupation</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {tableData.map((r) => (\n            <TableRow key={r.name?.toString()}>\n              <TableCell>{r.name}</TableCell>\n              <TableCell>{r.email}</TableCell>\n              <TableCell>{r.occupation}</TableCell>\n            </TableRow>\n          ))\n          }\n        </TableBody>\n      </Table>\n    </ScrollContainer>\n    <Paragraph>\n      Here's the same table, generated with the <Code>GenerateTable</Code> component:\n    </Paragraph>\n    <ScrollContainer direction='horizontal' maxWidth={'100%'} contentMinWidth={600}>\n      <GenerateTable data={tableData} headers={tableHeaders} />\n    </ScrollContainer>\n  </>\n","import * as React from 'react'\nimport {HashLink} from 'react-router-hash-link'\nimport {setTitle} from '../utils'\nimport {\n  Code,\n  CodeBlock,\n  Header,\n  Link,\n  Paragraph,\n  numbers,\n} from '../component-lib'\n\nexport const TextPage: React.FC = () =>\n  <>\n    {setTitle('Text formatting components')}\n    <Header>Text formatting components</Header>\n    <Paragraph as={'nav'}>\n      <Link as={HashLink} to={'#header'}><Code>{'<Header>'}</Code></Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#paragraph'}><Code>{'<Paragraph>'}</Code></Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#label'}><Code>{'<Label>'}</Code></Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#code'}><Code>{'<Code>'}</Code></Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#codeblock'}><Code>{'<CodeBlock>'}</Code></Link>{' \\u00b7 '}\n      <Link as={HashLink} to={'#customization'}>Customization</Link>\n    </Paragraph>\n    <Paragraph>\n      Clear offers various components for formatting text.\n      See <Link href={'https://github.com/chadlavi/clear/blob/master/playground/src/Pages/TextPage.tsx'}>the source code\n      for this page</Link> for examples.\n    </Paragraph>\n    <Header as='h2' id='header'><Code>{'<Header>'}</Code></Header>\n    <Paragraph>\n      <Code>Header</Code> can be used to create HTML header elements like <Code>{'<h1>'}</Code>, <Code>{'<h2>'}</Code>,\n      etc. With no props passed, the <Code>Header</Code> defaults to rendering an <Code>{'<h1>'}</Code>.\n    </Paragraph>\n    <Header as='h3' id='header-props'>Props: <Code>HeaderProps</Code></Header>\n    <Paragraph>\n      <Code>Header</Code> accepts any props that could normally be passed to an HTML header element.\n    </Paragraph>\n    <Paragraph>\n      Use the <Link href={'https://styled-components.com/docs/api#as-polymorphic-prop'}><Code>as</Code> prop</Link> to\n      substitute a different header element like so:\n    </Paragraph>\n    <CodeBlock>{`<Header as='h2'>\n  This will render in the DOM as an h2\n</Header>\n<Header as='h3'>\n  This will render in the DOM as an h3\n</Header>\n`}\n    </CodeBlock>\n    <Header as='h2' id='paragraph'><Code>{'<Paragraph>'}</Code></Header>\n    <Paragraph>\n      <Code>Paragraph</Code> is a simple styled wrapper around <Code>{'<p>'}</Code>.\n    </Paragraph>\n    <Header as='h3'>Props: <Code>ParagraphProps</Code></Header>\n    <Paragraph>\n      Besides the standard props that can be passed to an HTML <Code>{'<p>'}</Code> element, <Code>Paragraph</Code> also\n      accepts the prop <Code>margins?: boolean</Code>. If <Code>margins</Code> is false, the <Code>Paragraph</Code> will\n      not have margins; if it is true or undefined, the <Code>Paragraph</Code> will default to\n      having {numbers.fontSize.default}px margins at the top and bottom.\n    </Paragraph>\n    <Header as='h2' id='label'><Code>{'<Label>'}</Code></Header>\n    <Paragraph>\n      <Code>Label</Code> is a simple styled wrapper around <Code>{'<label>'}</Code>, used for formatting the label of\n      a form field like <Link as={HashLink} to={'/input#input'}><Code>{'<Input>'}</Code></Link>.\n    </Paragraph>\n    <Header as='h3'>Props: <Code>LabelProps</Code></Header>\n    <Paragraph>\n      <Code>Label</Code> accepts the props that could normally be passed to an HTML <Code>{'<label>'}</Code>, plus\n      three special display props: <Code>disabled?: boolean</Code> to style the label of a disabled\n      input, <Code>error?: boolean</Code> to style the label of an input field in an error state,\n      and <Code>required?: boolean</Code> to style the label of a required field.\n    </Paragraph>\n    <Header as='h2' id='code'><Code>{'<Code>'}</Code></Header>\n    <Paragraph>\n      <Code>Code</Code> is a simple styled wrapper around <Code>{'<code>'}</Code>, used for formatting inline code\n      snippets.\n    </Paragraph>\n    <Header as='h3'>Props: <Code>CodeProps</Code></Header>\n    <Paragraph>\n      <Code>Code</Code> accepts any props that could normally be passed to an HTML <Code>{'<code>'}</Code> element.\n    </Paragraph>\n    <Header as='h2' id='codeblock'><Code>{'<CodeBlock>'}</Code></Header>\n    <Paragraph>\n      <Code>CodeBlock</Code> is a simple styled wrapper around <Code>{'<pre>'}</Code>, used for formatting block code\n      snippets.\n    </Paragraph>\n    <Header as='h3'>Props: <Code>CodeBlockProps</Code></Header>\n    <Paragraph>\n      <Code>CodeBlock</Code> accepts any props that could normally be passed to an HTML <Code>{'<pre>'}</Code> element.\n    </Paragraph>\n    <Header as='h2' id='customization'>Customization</Header>\n    <Paragraph>\n      See <Link as={HashLink} to={'/start#customization'}>Customization</Link> discussion on the Getting started page.\n    </Paragraph>\n  </>\n","import * as React from 'react'\nimport {version} from '../package.json'\nimport {\n  ButtonPage,\n  GettingStartedPage,\n  GlobalStylesPage,\n  HelpersPage,\n  HomePage,\n  InputPage,\n  LayoutPage,\n  LinkPage,\n  NotificationPage,\n  TablePage,\n  TextPage,\n} from './Pages'\nimport {\n  Grid,\n  GridItem,\n  Link,\n  Page,\n  SkipLink,\n} from './component-lib'\nimport {\n  HashRouter,\n  NavLink,\n  Route,\n  Switch,\n} from 'react-router-dom'\n\nconst routes = [\n  {\n    label: `Clear (${version})`,\n    exact: true,\n    route: '/',\n    component: <HomePage />,\n  },\n  {\n    label: 'Getting started',\n    route: '/start',\n    component: <GettingStartedPage />,\n  },\n  {\n    label: 'Globals',\n    route: '/global-styles',\n    component: <GlobalStylesPage />,\n  },\n  {\n    label: 'Layout',\n    route: '/layout',\n    component: <LayoutPage />,\n  },\n  {\n    label: 'Input',\n    route: '/input',\n    component: <InputPage />,\n  },\n  {\n    label: 'Button',\n    route: '/button',\n    component: <ButtonPage />,\n  },\n  {\n    label: 'Link',\n    route: '/link',\n    component: <LinkPage />,\n  },\n  {\n    label: 'Text',\n    route: '/text',\n    component: <TextPage />,\n  },\n  {\n    label: 'Table',\n    route: '/table',\n    component: <TablePage />,\n  },\n  {\n    label: 'Notifications',\n    route: '/notification',\n    component: <NotificationPage />,\n  },\n  {\n    label: 'Helpers',\n    route: '/helpers',\n    component: <HelpersPage />,\n  },\n]\n\nexport const Routes: React.FC = () => {\n\n  const scrollinate = async (id: string): Promise<void> => {\n    const anchor = document.getElementById(id)\n    if (anchor) anchor.scrollIntoView(true)\n  }\n\n  /**\n   * Scroll to the designated anchor if one is present in the URL.\n   */\n  const scrollToHash = async (): Promise<void> => {\n    window.location.hash = window.location.hash.replace('%23', '#')\n    const hash = window.location.hash\n    const id = hash.substr(1).split('#')[1]\n    if(id) {\n      setTimeout(async () => {\n        await scrollinate(id)\n      }, 1)\n    }\n  }\n\n  React.useEffect(() => {\n    scrollToHash()\n  })\n\n  return (\n    <Page>\n      <HashRouter basename='/'>\n        <SkipLink id={'main'} />\n        <Grid spacing={16}>\n          <GridItem as='nav' aria-label='primary'>\n            {routes.map((r, i) =>\n              <React.Fragment key={r.label}>\n                <Link\n                  as={NavLink}\n                  to={r.route}\n                  exact={r.exact}\n                >\n                  {r.label}\n                </Link>\n                {i !== routes.length - 1 ? ' \\u00b7 ' : ''}\n              </React.Fragment>\n            )}\n          </GridItem>\n          <GridItem>\n            <span tabIndex={-1} id='main' />\n            <Switch>\n              {routes.map((r) =>\n                <Route\n                  key={r.label}\n                  exact\n                  path={r.route}\n                >\n                  {r.component}\n                </Route>\n              )}\n              <Route>\n                <HomePage/>\n              </Route>\n            </Switch>\n          </GridItem>\n        </Grid>\n      </HashRouter>\n    </Page>\n  )\n}\n","import * as React from 'react'\nimport * as serviceWorker from './serviceWorker'\nimport ReactDOM from 'react-dom'\nimport {Routes} from './Routes'\nimport {CSSVariables, GlobalStyles} from './component-lib'\n\nReactDOM.render(\n  <React.StrictMode>\n    <CSSVariables/>\n    <GlobalStyles />\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}